(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{412:function(s,t,n){"use strict";n.r(t);var a=n(14),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"man-epoll文档解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#man-epoll文档解释"}},[s._v("#")]),s._v(" man-epoll文档解释")]),s._v(" "),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[s._v("#")]),s._v(" 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#目录"}},[s._v("目录")])]),t("li",[t("a",{attrs:{href:"#_1-txt"}},[s._v("1.txt")])]),t("li",[t("a",{attrs:{href:"#_2-测试"}},[s._v("2.测试")])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("h2",{attrs:{id:"_1-txt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-txt"}},[s._v("#")]),s._v(" 1.txt")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("EPOLL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                          Linux Programmer's Manual                         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("EPOLL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nNAME\n       epoll "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O event notification facility\n\nSYNOPSIS\n       "),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/epoll.h>")])]),s._v("\n\nDESCRIPTION\n       The  epoll  API performs a similar task to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" monitoring multiple file descrip‐\n       tors to see "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O is possible on any of them"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The epoll API can be used  either  as\n       an  edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered or a level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered interface and scales well to large numbers of\n       watched file descriptors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       The central concept of the epoll API is the epoll instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" an in"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("kernel data  struc‐\n       ture  which"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  from a user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("space perspective"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" can be considered as a container "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" two\n       lists"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   The interest "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sometimes also called the epoll set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" the set of file descrip‐\n           tors that the process has registered an interest in monitoring"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("   The  ready list"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" the set of file descriptors that are "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ready"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The ready\n           list is a subset "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("of")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("or"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" more precisely"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a set of references  to"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  the  file  de‐\n           scriptors  in  the interest list that is dynamically populated by the kernel as a\n           result of I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O activity on those file descriptors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       The following system calls are provided to create and manage an epoll instance"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" creates a new epoll instance and returns a file descriptor  refer‐\n          ring  to that instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("The more recent "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" extends the functional‐\n          ity of "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  Interest in particular file descriptors is then registered via "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" which\n          adds items to the interest list of the epoll instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  waits  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" blocking the calling thread "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" no events are\n          currently available"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("This system call can be thought of as fetching  items  from\n          the ready list of the epoll instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   Level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered and edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered\n       The  epoll event distribution interface is able to behave both as edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("triggered")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n       and as level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("triggered")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The difference between the two mechanisms  can  be  de‐\n       scribed as follows"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Suppose that this scenario happens"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" The file descriptor that represents the read side of a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pipe")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is registered on\n          the epoll instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" A pipe writer writes "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" kB of data on the write side of the pipe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" A call to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is done that will "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" rfd as a ready file descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" The pipe reader reads "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" kB of data from rfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" A call to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is done"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       If the rfd file descriptor has been added to the epoll interface  using  the  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("EPOLLET")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  the  call to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" done in step "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" will probably hang\n       despite the available data still present in the file input buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" meanwhile the  re‐\n       mote  peer might be expecting a response based on the data it already sent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The rea‐\n       son "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" this is that edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered mode delivers events only when changes  occur  on\n       the  monitored  file  descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("   So"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" in step "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" the caller might end up waiting "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("\n       some data that is already present inside the input buffer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  In the above example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  an\n       event  on  rfd will be generated because of the write done in "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" and the event is con‐\n       sumed in "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("  Since the read operation done in "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" does not  consume  the  whole  buffer\n       data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the call to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" done in step "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" might block indefinitely"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       An  application that employs the EPOLLET flag should use nonblocking file descriptors\n       to avoid having a blocking read or write starve a task that is handling multiple file\n       descriptors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The suggested way to use epoll as an edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("triggered")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EPOLLET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" interface\n       is as follows"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\n              i   with nonblocking file descriptors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" and\n\n              ii  by waiting "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" an event only after "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" EAGAIN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       By contrast"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" when used as a level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" when  EPOLLET  is\n       not specified"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" epoll is simply a faster "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" and can be used wherever the latter\n       is used since it shares the same semantics"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       Since even with edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered epoll"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" multiple events can be generated  upon  receipt\n       of  multiple  chunks  of  data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the caller has the option to specify the EPOLLONESHOT\n       flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" to tell epoll to disable the associated file descriptor after the receipt of an\n       event  with  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("   When  the  EPOLLONESHOT  flag  is  specified"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" it is the\n       caller's  responsibility  to  rearm  the  file  descriptor  using  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  with\n       EPOLL_CTL_MOD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       If  multiple  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("threads")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("or processes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" child processes have inherited the epoll file\n       descriptor across "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" are blocked in "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" waiting  on  the  same  epoll\n       file  descriptor  and a file descriptor in the interest list that is marked "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("triggered")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EPOLLET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" notification becomes ready"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" just one  of  the  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("threads")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("or  pro‐\n       cesses"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is awoken from "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  This provides a useful optimization "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" avoid‐\n       ing "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"thundering herd"')]),s._v(" wake"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("ups in some scenarios"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n   Interaction with autosleep\n       If the system is in autosleep mode via  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("power"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("autosleep  and  an  event  happens\n       which  wakes the device from sleep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the device driver will keep the device awake only\n       until that event is queued"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  To keep the device awake until the event has  been  pro‐\n       cessed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" it is necessary to use the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" EPOLLWAKEUP flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       When  the  EPOLLWAKEUP  flag is set in the events field "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("epoll_event")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the\n       system will be  kept  awake  from  the  moment  the  event  is  queued"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  through  the\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  call  which returns the event until the subsequent "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" call"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n       If the event should keep the system awake beyond that time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" then a separate wake_lock\n       should be taken before the second "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" call"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("proc interfaces\n       The following interfaces can be used to limit the amount of kernel memory consumed by\n       epoll"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("proc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sys"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("fs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("epoll"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max_user_watches")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("since Linux "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.6")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".28")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n              This specifies a limit on the total number of file descriptors that a user can\n              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("register")]),s._v(" across all epoll instances on the system"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The limit is per real user\n              ID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Each registered file descriptor costs roughly "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v(" bytes on a  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bit  ker‐\n              nel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  and  roughly "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("160")]),s._v(" bytes on a "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("bit kernel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Currently"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" value\n              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" max_user_watches is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" of the available low memory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" divided by  the\n              registration cost in bytes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n   Example "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" suggested usage\n       While  the  usage of epoll when employed as a level"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered interface does have the\n       same semantics as "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered usage requires  more  clarification  to\n       avoid stalls in the application event loop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  In this example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" listener is a nonblock‐\n       ing socket on which "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("listen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" has been called"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The function "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_use_fd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" uses the new\n       ready  file  descriptor  until  EAGAIN is returned by either "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  An\n       event"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("driven state machine application should"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" after having received  EAGAIN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  record\n       its current state so that at the next call to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_use_fd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" it will "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v(" to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n       or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" from where it stopped before"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n           "),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("MAX_EVENTS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")])])]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("epoll_event")]),s._v(" ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("MAX_EVENTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" listen_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" conn_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" epollfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Code to set up listening socket, 'listen_sock',\n              (socket(), bind(), listen()) omitted */")]),s._v("\n\n           epollfd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("epollfd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("perror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"epoll_create1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EXIT_FAILURE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n           ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("events "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" EPOLLIN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" listen_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("epollfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EPOLL_CTL_ADD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" listen_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("perror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"epoll_ctl: listen_sock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EXIT_FAILURE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n           "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               nfds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("epollfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MAX_EVENTS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nfds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("perror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"epoll_wait"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EXIT_FAILURE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n               "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" listen_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                       conn_sock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("accept")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("listen_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sockaddr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("addr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("addrlen"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn_sock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                           "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("perror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"accept"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                           "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EXIT_FAILURE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setnonblocking")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("conn_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                       ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("events "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" EPOLLIN "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" EPOLLET"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                       ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" conn_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("epollfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EPOLL_CTL_ADD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" conn_sock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("ev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                           "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("perror")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"epoll_ctl: conn_sock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                           "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EXIT_FAILURE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do_use_fd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n       When used as an edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered interface"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" performance reasons"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" it is possible  to\n       add the file descriptor inside the epoll "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EPOLL_CTL_ADD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" once by "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("specifying")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EPOLLIN"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("EPOLLOUT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  This allows you to avoid continuously switching between  EPOLLIN\n       and EPOLLOUT calling "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" with EPOLL_CTL_MOD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n   Questions and answers\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.")]),s._v("  What  is the key used to distinguish the file descriptors registered in an inter‐\n           est list"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           The key is the combination of the file descriptor number and the  open  file  de‐\n           "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("scription")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("also known as an "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"open file handle"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the kernel's internal representa‐\n           tion of an open file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("  What happens "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" you "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("register")]),s._v(" the same file descriptor on an epoll instance twice"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           You will probably get EEXIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("   However"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  it  is  possible  to  add  a  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("duplicate")]),s._v("\n           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dup2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fcntl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" F_DUPFD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" file descriptor to the same epoll instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n           This can be a useful technique "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" filtering events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" the  duplicate  file  de‐\n           scriptors are registered with different events masks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("  Can two epoll instances wait "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the same file descriptor"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("  If so"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" are events re‐\n           ported to both epoll file descriptors"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           Yes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" and events would be reported to both"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  However"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" careful programming  may  be\n           needed to "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" this correctly"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("  Is the epoll file descriptor itself poll"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("epoll"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("selectable"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           Yes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("   If  an  epoll file descriptor has events waiting"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" then it will indicate as\n           being readable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v("  What happens "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" one attempts to put an epoll file descriptor into  its  own  file\n           descriptor set"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           The  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  call  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fails")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EINVAL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  However"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" you can add an epoll file de‐\n           scriptor inside another epoll file descriptor set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v("  Can I send an epoll file descriptor over a UNIX domain socket to another process"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           Yes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" but it does not make sense to "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" since the receiving process would not\n           have copies of the file descriptors in the interest list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v("  Will  closing  a  file  descriptor cause it to be removed from all epoll interest\n           lists"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           Yes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" but be aware of the following point"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  A file descriptor is a reference to an\n           open  file  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("description")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("see "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Whenever a file descriptor is duplicated\n           via "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dup2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fcntl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" F_DUPFD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a new file  descriptor  refer‐\n           ring to the same open file description is created"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  An open file description con‐\n           tinues to exist until all file descriptors referring to it have been closed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n           A file descriptor is removed from an interest list only after all  the  file  de‐\n           scriptors  referring  to  the  underlying open file description have been closed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n           This means that even after a file descriptor that is part of an interest list has\n           been  closed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  events  may be reported "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" that file descriptor "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" other file de‐\n           scriptors referring to the same underlying file description remain open"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  To pre‐\n           vent  this happening"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the file descriptor must be explicitly removed from the in‐\n           terest "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("using "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" EPOLL_CTL_DEL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" before it is duplicated"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Alterna‐\n           tively"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  the  application must ensure that all file descriptors are "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("closed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("which\n           may be difficult "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" file descriptors were duplicated behind the scenes by library\n           functions that used "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v("  If  more  than one event occurs between "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" calls"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" are they combined or\n           reported separately"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           They will be combined"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8.")]),s._v("  Does an operation on a file descriptor affect the already collected but  not  yet\n           reported events"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           You  can "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" two operations on an existing file descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Remove would be mean‐\n           ingless "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" this "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Modify will reread available I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9.")]),s._v("  Do I need to continuously read"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("write a file descriptor until  EAGAIN  when  using\n           the EPOLLET "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("flag")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered behavior"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\n\n           Receiving  an  event  from "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" should suggest to you that such file de‐\n           scriptor is ready "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the requested I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O operation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  You must  consider  it  ready\n           until the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nonblocking"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" read"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("write yields EAGAIN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  When and how you will use\n           the file descriptor is entirely up to you"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n           For packet"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("oriented "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("files")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" datagram  socket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  terminal  in  canonical\n           mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  the only way to detect the end of the read"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("write I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O space is to "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n           to read"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("write until EAGAIN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n           For stream"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("oriented "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("files")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pipe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FIFO"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stream socket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" the  condition  that\n           the read"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("write I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O space is exhausted can also be detected by checking the amount\n           of data read from "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" written to the target file descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  For example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v("  you\n           call  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  by  asking  to read a certain amount of data and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" returns a\n           lower number of bytes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" you can be sure of having exhausted the read I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O space "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("\n           the  file descriptor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  The same is true when writing using "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Avoid this\n           latter technique "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" you cannot guarantee that the monitored file  descriptor  al‐\n           ways refers to a stream"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("oriented file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   Possible pitfalls and ways to avoid them\n       o "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Starvation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("edge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("triggered"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n       If  there  is  a large amount of I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O space"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" it is possible that by trying to drain it\n       the other files will not get processed causing starvation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("This problem is not spe‐\n       cific to epoll"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n       The solution is to maintain a ready list and mark the file descriptor as ready in its\n       associated data structure"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" thereby allowing the application to remember  which  files\n       need  to  be  processed but still round robin amongst all the ready files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  This also\n       supports ignoring subsequent events you receive "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" file descriptors that are already\n       ready"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       o If using an event cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       If  you  use  an  event  cache  or  store  all  the  file  descriptors  returned from\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" then make sure to provide a way to mark its closure "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dynamically")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       caused  by  a  previous  event's  processing"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("   Suppose  you receive "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" events from\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" and in event #"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("47")]),s._v(" a condition causes event #"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" to be  closed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("   If  you\n       remove  the structure and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" the file descriptor "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" event #"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" then your event\n       cache might still say there are events waiting "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" that file descriptor causing  con‐\n       fusion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       One   solution   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("   this   is   to  call"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  during  the  processing  of  event  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("47")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("EPOLL_CTL_DEL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" to delete file descriptor "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" then mark its as‐\n       sociated  data  structure  as removed and link it to a cleanup list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  If you find an‐\n       other event "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" file descriptor "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" in your batch processing"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" you  will  discover  the\n       file descriptor had been previously removed and there will be no confusion"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nVERSIONS\n       The  epoll  API was introduced in Linux kernel "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.5")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".44")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Support was added to glibc in\n       version "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.3")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nCONFORMING TO\n       The epoll API is Linux"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("specific"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  Some other systems provide similar mechanisms"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("\n       example"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" FreeBSD has kqueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" and Solaris has "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("dev"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("poll"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nNOTES\n       The  set of file descriptors that is being monitored via an epoll file descriptor can\n       be  viewed  via  the  entry  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v("  the  epoll  file  descriptor   in   the   process's\n       "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("proc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("fdinfo directory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  See "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("proc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" further details"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n       The "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kcmp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" KCMP_EPOLL_TFD operation can be used to test whether a file descriptor is\n       present in an epoll instance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\nSEE ALSO\n       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nCOLOPHON\n       This page is part of release "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.05")]),s._v(" of the Linux man"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("pages project"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("  A  description  of\n       the  project"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  information about reporting bugs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" and the latest version of this page"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n       can be found at https"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//www.kernel.org/doc/man-pages/.")]),s._v("\n\nLinux                                    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("03")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("06")]),s._v("                                 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("EPOLL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br"),t("span",{staticClass:"line-number"},[s._v("161")]),t("br"),t("span",{staticClass:"line-number"},[s._v("162")]),t("br"),t("span",{staticClass:"line-number"},[s._v("163")]),t("br"),t("span",{staticClass:"line-number"},[s._v("164")]),t("br"),t("span",{staticClass:"line-number"},[s._v("165")]),t("br"),t("span",{staticClass:"line-number"},[s._v("166")]),t("br"),t("span",{staticClass:"line-number"},[s._v("167")]),t("br"),t("span",{staticClass:"line-number"},[s._v("168")]),t("br"),t("span",{staticClass:"line-number"},[s._v("169")]),t("br"),t("span",{staticClass:"line-number"},[s._v("170")]),t("br"),t("span",{staticClass:"line-number"},[s._v("171")]),t("br"),t("span",{staticClass:"line-number"},[s._v("172")]),t("br"),t("span",{staticClass:"line-number"},[s._v("173")]),t("br"),t("span",{staticClass:"line-number"},[s._v("174")]),t("br"),t("span",{staticClass:"line-number"},[s._v("175")]),t("br"),t("span",{staticClass:"line-number"},[s._v("176")]),t("br"),t("span",{staticClass:"line-number"},[s._v("177")]),t("br"),t("span",{staticClass:"line-number"},[s._v("178")]),t("br"),t("span",{staticClass:"line-number"},[s._v("179")]),t("br"),t("span",{staticClass:"line-number"},[s._v("180")]),t("br"),t("span",{staticClass:"line-number"},[s._v("181")]),t("br"),t("span",{staticClass:"line-number"},[s._v("182")]),t("br"),t("span",{staticClass:"line-number"},[s._v("183")]),t("br"),t("span",{staticClass:"line-number"},[s._v("184")]),t("br"),t("span",{staticClass:"line-number"},[s._v("185")]),t("br"),t("span",{staticClass:"line-number"},[s._v("186")]),t("br"),t("span",{staticClass:"line-number"},[s._v("187")]),t("br"),t("span",{staticClass:"line-number"},[s._v("188")]),t("br"),t("span",{staticClass:"line-number"},[s._v("189")]),t("br"),t("span",{staticClass:"line-number"},[s._v("190")]),t("br"),t("span",{staticClass:"line-number"},[s._v("191")]),t("br"),t("span",{staticClass:"line-number"},[s._v("192")]),t("br"),t("span",{staticClass:"line-number"},[s._v("193")]),t("br"),t("span",{staticClass:"line-number"},[s._v("194")]),t("br"),t("span",{staticClass:"line-number"},[s._v("195")]),t("br"),t("span",{staticClass:"line-number"},[s._v("196")]),t("br"),t("span",{staticClass:"line-number"},[s._v("197")]),t("br"),t("span",{staticClass:"line-number"},[s._v("198")]),t("br"),t("span",{staticClass:"line-number"},[s._v("199")]),t("br"),t("span",{staticClass:"line-number"},[s._v("200")]),t("br"),t("span",{staticClass:"line-number"},[s._v("201")]),t("br"),t("span",{staticClass:"line-number"},[s._v("202")]),t("br"),t("span",{staticClass:"line-number"},[s._v("203")]),t("br"),t("span",{staticClass:"line-number"},[s._v("204")]),t("br"),t("span",{staticClass:"line-number"},[s._v("205")]),t("br"),t("span",{staticClass:"line-number"},[s._v("206")]),t("br"),t("span",{staticClass:"line-number"},[s._v("207")]),t("br"),t("span",{staticClass:"line-number"},[s._v("208")]),t("br"),t("span",{staticClass:"line-number"},[s._v("209")]),t("br"),t("span",{staticClass:"line-number"},[s._v("210")]),t("br"),t("span",{staticClass:"line-number"},[s._v("211")]),t("br"),t("span",{staticClass:"line-number"},[s._v("212")]),t("br"),t("span",{staticClass:"line-number"},[s._v("213")]),t("br"),t("span",{staticClass:"line-number"},[s._v("214")]),t("br"),t("span",{staticClass:"line-number"},[s._v("215")]),t("br"),t("span",{staticClass:"line-number"},[s._v("216")]),t("br"),t("span",{staticClass:"line-number"},[s._v("217")]),t("br"),t("span",{staticClass:"line-number"},[s._v("218")]),t("br"),t("span",{staticClass:"line-number"},[s._v("219")]),t("br"),t("span",{staticClass:"line-number"},[s._v("220")]),t("br"),t("span",{staticClass:"line-number"},[s._v("221")]),t("br"),t("span",{staticClass:"line-number"},[s._v("222")]),t("br"),t("span",{staticClass:"line-number"},[s._v("223")]),t("br"),t("span",{staticClass:"line-number"},[s._v("224")]),t("br"),t("span",{staticClass:"line-number"},[s._v("225")]),t("br"),t("span",{staticClass:"line-number"},[s._v("226")]),t("br"),t("span",{staticClass:"line-number"},[s._v("227")]),t("br"),t("span",{staticClass:"line-number"},[s._v("228")]),t("br"),t("span",{staticClass:"line-number"},[s._v("229")]),t("br"),t("span",{staticClass:"line-number"},[s._v("230")]),t("br"),t("span",{staticClass:"line-number"},[s._v("231")]),t("br"),t("span",{staticClass:"line-number"},[s._v("232")]),t("br"),t("span",{staticClass:"line-number"},[s._v("233")]),t("br"),t("span",{staticClass:"line-number"},[s._v("234")]),t("br"),t("span",{staticClass:"line-number"},[s._v("235")]),t("br"),t("span",{staticClass:"line-number"},[s._v("236")]),t("br"),t("span",{staticClass:"line-number"},[s._v("237")]),t("br"),t("span",{staticClass:"line-number"},[s._v("238")]),t("br"),t("span",{staticClass:"line-number"},[s._v("239")]),t("br"),t("span",{staticClass:"line-number"},[s._v("240")]),t("br"),t("span",{staticClass:"line-number"},[s._v("241")]),t("br"),t("span",{staticClass:"line-number"},[s._v("242")]),t("br"),t("span",{staticClass:"line-number"},[s._v("243")]),t("br"),t("span",{staticClass:"line-number"},[s._v("244")]),t("br"),t("span",{staticClass:"line-number"},[s._v("245")]),t("br"),t("span",{staticClass:"line-number"},[s._v("246")]),t("br"),t("span",{staticClass:"line-number"},[s._v("247")]),t("br"),t("span",{staticClass:"line-number"},[s._v("248")]),t("br"),t("span",{staticClass:"line-number"},[s._v("249")]),t("br"),t("span",{staticClass:"line-number"},[s._v("250")]),t("br"),t("span",{staticClass:"line-number"},[s._v("251")]),t("br"),t("span",{staticClass:"line-number"},[s._v("252")]),t("br"),t("span",{staticClass:"line-number"},[s._v("253")]),t("br"),t("span",{staticClass:"line-number"},[s._v("254")]),t("br"),t("span",{staticClass:"line-number"},[s._v("255")]),t("br"),t("span",{staticClass:"line-number"},[s._v("256")]),t("br"),t("span",{staticClass:"line-number"},[s._v("257")]),t("br"),t("span",{staticClass:"line-number"},[s._v("258")]),t("br"),t("span",{staticClass:"line-number"},[s._v("259")]),t("br"),t("span",{staticClass:"line-number"},[s._v("260")]),t("br"),t("span",{staticClass:"line-number"},[s._v("261")]),t("br"),t("span",{staticClass:"line-number"},[s._v("262")]),t("br"),t("span",{staticClass:"line-number"},[s._v("263")]),t("br"),t("span",{staticClass:"line-number"},[s._v("264")]),t("br"),t("span",{staticClass:"line-number"},[s._v("265")]),t("br"),t("span",{staticClass:"line-number"},[s._v("266")]),t("br"),t("span",{staticClass:"line-number"},[s._v("267")]),t("br"),t("span",{staticClass:"line-number"},[s._v("268")]),t("br"),t("span",{staticClass:"line-number"},[s._v("269")]),t("br"),t("span",{staticClass:"line-number"},[s._v("270")]),t("br"),t("span",{staticClass:"line-number"},[s._v("271")]),t("br"),t("span",{staticClass:"line-number"},[s._v("272")]),t("br"),t("span",{staticClass:"line-number"},[s._v("273")]),t("br"),t("span",{staticClass:"line-number"},[s._v("274")]),t("br"),t("span",{staticClass:"line-number"},[s._v("275")]),t("br"),t("span",{staticClass:"line-number"},[s._v("276")]),t("br"),t("span",{staticClass:"line-number"},[s._v("277")]),t("br"),t("span",{staticClass:"line-number"},[s._v("278")]),t("br"),t("span",{staticClass:"line-number"},[s._v("279")]),t("br"),t("span",{staticClass:"line-number"},[s._v("280")]),t("br"),t("span",{staticClass:"line-number"},[s._v("281")]),t("br"),t("span",{staticClass:"line-number"},[s._v("282")]),t("br"),t("span",{staticClass:"line-number"},[s._v("283")]),t("br"),t("span",{staticClass:"line-number"},[s._v("284")]),t("br"),t("span",{staticClass:"line-number"},[s._v("285")]),t("br"),t("span",{staticClass:"line-number"},[s._v("286")]),t("br"),t("span",{staticClass:"line-number"},[s._v("287")]),t("br"),t("span",{staticClass:"line-number"},[s._v("288")]),t("br"),t("span",{staticClass:"line-number"},[s._v("289")]),t("br"),t("span",{staticClass:"line-number"},[s._v("290")]),t("br"),t("span",{staticClass:"line-number"},[s._v("291")]),t("br"),t("span",{staticClass:"line-number"},[s._v("292")]),t("br"),t("span",{staticClass:"line-number"},[s._v("293")]),t("br"),t("span",{staticClass:"line-number"},[s._v("294")]),t("br"),t("span",{staticClass:"line-number"},[s._v("295")]),t("br"),t("span",{staticClass:"line-number"},[s._v("296")]),t("br"),t("span",{staticClass:"line-number"},[s._v("297")]),t("br"),t("span",{staticClass:"line-number"},[s._v("298")]),t("br"),t("span",{staticClass:"line-number"},[s._v("299")]),t("br"),t("span",{staticClass:"line-number"},[s._v("300")]),t("br"),t("span",{staticClass:"line-number"},[s._v("301")]),t("br"),t("span",{staticClass:"line-number"},[s._v("302")]),t("br"),t("span",{staticClass:"line-number"},[s._v("303")]),t("br"),t("span",{staticClass:"line-number"},[s._v("304")]),t("br"),t("span",{staticClass:"line-number"},[s._v("305")]),t("br"),t("span",{staticClass:"line-number"},[s._v("306")]),t("br"),t("span",{staticClass:"line-number"},[s._v("307")]),t("br"),t("span",{staticClass:"line-number"},[s._v("308")]),t("br"),t("span",{staticClass:"line-number"},[s._v("309")]),t("br"),t("span",{staticClass:"line-number"},[s._v("310")]),t("br"),t("span",{staticClass:"line-number"},[s._v("311")]),t("br"),t("span",{staticClass:"line-number"},[s._v("312")]),t("br"),t("span",{staticClass:"line-number"},[s._v("313")]),t("br"),t("span",{staticClass:"line-number"},[s._v("314")]),t("br"),t("span",{staticClass:"line-number"},[s._v("315")]),t("br"),t("span",{staticClass:"line-number"},[s._v("316")]),t("br"),t("span",{staticClass:"line-number"},[s._v("317")]),t("br"),t("span",{staticClass:"line-number"},[s._v("318")]),t("br"),t("span",{staticClass:"line-number"},[s._v("319")]),t("br"),t("span",{staticClass:"line-number"},[s._v("320")]),t("br"),t("span",{staticClass:"line-number"},[s._v("321")]),t("br"),t("span",{staticClass:"line-number"},[s._v("322")]),t("br"),t("span",{staticClass:"line-number"},[s._v("323")]),t("br"),t("span",{staticClass:"line-number"},[s._v("324")]),t("br"),t("span",{staticClass:"line-number"},[s._v("325")]),t("br")])]),t("h2",{attrs:{id:"_2-测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-测试"}},[s._v("#")]),s._v(" 2.测试")])])}),[],!1,null,null,null);t.default=e.exports}}]);