(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{471:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"grep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[s._v("#")]),s._v(" 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#目录"}},[s._v("目录")])]),t("li",[t("a",{attrs:{href:"#_1-格式和主要参数"}},[s._v("1.格式和主要参数")])]),t("li",[t("a",{attrs:{href:"#_2-官方翻译-grep-help"}},[s._v("2.官方翻译grep --help")])]),t("li",[t("a",{attrs:{href:"#_3-egrep加上-n显示行数"}},[s._v("3.egrep加上-n显示行数")])]),t("li",[t("a",{attrs:{href:"#参考资料"}},[s._v("参考资料")])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background:pink">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。grep全称是"),t("strong",[s._v("Global Regular Expression Print")]),s._v("，表示全局正则表达式版本，它的"),t("font",{staticStyle:{background:"pink"}},[s._v("使用权限是所有用户")]),s._v("。")],1),s._v(" "),t("ul",[t("li",[s._v("grep家族包括\n"),t("ul",[t("li",[s._v("grep")]),s._v(" "),t("li",[s._v("egrep\n"),t("ul",[t("li",[s._v("egrep和fgrep的命令只跟grep有很小不同。")]),s._v(" "),t("li",[s._v("egrep是grep的扩展，支持更多的re元字符")])])]),s._v(" "),t("li",[s._v("fgrep\n"),t("ul",[t("li",[s._v("fgrep就是"),t("strong",[s._v("fixed")]),s._v(" grep或"),t("strong",[s._v("fast")]),s._v(" grep，它们把所有的字母都看作单词，也就是说，正则表达式中的元字符表示回其自身的字面意义，不再特殊。")])])])])]),s._v(" "),t("li",[s._v("linux使用"),t("font",{staticStyle:{background:"pink"}},[s._v("GNU版本的grep")]),s._v("。它功能更强，可以通过"),t("code",[s._v("-G")]),s._v("、"),t("code",[s._v("-E")]),s._v("、"),t("code",[s._v("-F")]),s._v("命令行选项来使用egrep和fgrep的功能")],1)]),s._v(" "),t("h2",{attrs:{id:"_1-格式和主要参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-格式和主要参数"}},[s._v("#")]),s._v(" 1.格式和主要参数")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n主要参数：  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --help可查看\n\t-c：只输出匹配行的计数。「count，v.计数」\n\t-i：不区分大小写。「ignore，v.忽略」\n\t-h：查询多文件时不显示文件名。「我也不晓得这个有啥用，文件名不是帮助我们找源代码的嘛。。」\n\t-l：查询多文件时只输出包含匹配字符的文件名。「感觉和上面选项互补」\n\t-n：显示匹配行及行号。「num」good，更好的帮助定位源代码位置\n\t-s：不显示不存在或无匹配文本的错误信息。\n\t-v：显示不包含匹配文本的所有行。「哈哈，这个要干啥？压榨服务器性能？」\n\t"),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--color")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("auto ：可以将找到的关键词部分加上颜色的显示。\n\t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ul",[t("li",[s._v("grep跳过某文件夹")]),s._v(" "),t("li",[s._v("虽然help中说“--exclude”可以忽略文件和目录，可是实际测试中发现并不能忽略目录\n"),t("ul",[t("li",[s._v("所以，要排除目录，还得用“--exclude-dir”")])])])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("XXXX@kXXXXX:~/whoway$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nriscv_gcc  onw  two\nXXXX@kXXXXX:~/whoway$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("riscv_gcc/ aaa *\ngrep: onw: Is a directory\ngrep: two: Is a directory\nXXXX@kXXXXX:~/whoway$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("riscv_gcc/ aaa * "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v("\nonw/one.c:aaa\ntwo/twoo.c:aaa\n\n其实grep --exclude-dir riscv_gcc/ aaa * "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v("\n这个的"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("号不加也行\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"_2-官方翻译grep-help"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-官方翻译grep-help"}},[s._v("#")]),s._v(" 2.官方翻译"),t("code",[s._v("grep --help")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Usage: "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTION"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". PATTERNS "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("FILE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nSearch "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("PATTERNS")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" each FILE.\nExample: "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v(" menu.h main.c\nPATTERNS can contain multiple patterns separated by newlines.\n\nPattern selection and interpretation:\n  -E, --extended-regexp     PATTERNS are extended regular expressions\n  -F, --fixed-strings       PATTERNS are strings\n  -G, --basic-regexp        PATTERNS are basic regular expressions\n  -P, --perl-regexp         PATTERNS are Perl regular expressions\n  -e, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--regexp")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PATTERNS     use PATTERNS "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" matching\n  -f, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FILE           take PATTERNS from FILE\n  -i, --ignore-case         ignore "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" distinctions "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" patterns and data\n      --no-ignore-case      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not ignore "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" distinctions "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -w, --word-regexp         match only whole words\n  -x, --line-regexp         match only whole lines\n  -z, --null-data           a data line ends "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" byte, not newline\n\nMiscellaneous:「杂项」\n  -s, --no-messages         suppress error messages\n  -v, --invert-match        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" non-matching lines\n  -V, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--version")]),s._v("             display version information and "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--help")]),s._v("                display this "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" text and "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n\nOutput control:「输出控制」\n  -m, --max-count"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM       stop after NUM selected lines\n  -b, --byte-offset         print the byte offset with output lines\n  -n, --line-number         print line number with output lines\n      --line-buffered       flush output on every line\n  -H, --with-filename       print "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name with output lines\n  -h, --no-filename         suppress the "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name prefix on output\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--label")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("LABEL         use LABEL as the standard input "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name prefix\n  -o, --only-matching       show only nonempty parts of lines that match\n  -q, --quiet, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--silent")]),s._v("     suppress all normal output\n      --binary-files"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TYPE   assume that binary files are TYPE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            TYPE is "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'binary'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text'")]),s._v(", or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'without-match'")]),s._v("\n  -a, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--text")]),s._v("                equivalent to --binary-files"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("text\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-I")]),s._v("                        equivalent to --binary-files"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("without-match\n  -d, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--directories")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ACTION  how to handle directories"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            ACTION is "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'read'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recurse'")]),s._v(", or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'skip'")]),s._v("\n  -D, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--devices")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ACTION      how to handle devices, FIFOs and sockets"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            ACTION is "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'read'")]),s._v(" or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'skip'")]),s._v("\n  -r, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--recursive")]),s._v("           like "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--directories")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("recurse\n  -R, --dereference-recursive  likewise, but follow all symlinks\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--include")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("GLOB        search only files that match GLOB "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--exclude")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("GLOB        skip files that match GLOB\n      --exclude-from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FILE   skip files that match any "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" pattern from FILE\n      --exclude-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("GLOB    skip directories that match GLOB\n  -L, --files-without-match  print only names of FILEs with no selected lines\n  -l, --files-with-matches  print only names of FILEs with selected lines\n  -c, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--count")]),s._v("               print only a count of selected lines per FILE\n  -T, --initial-tab         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" tabs line up "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("if needed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -Z, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--null")]),s._v("                print "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" byte after FILE name\n\nContext control:「上下文控制、上下文控制」\n  -B, --before-context"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM  print NUM lines of leading context\n  -A, --after-context"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM   print NUM lines of trailing context\n  -C, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--context")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM         print NUM lines of output context\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-NUM")]),s._v("                      same as "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--context")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM\n      --color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WHEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n      --colour"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WHEN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       use markers to highlight the matching strings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            WHEN is "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'always'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'never'")]),s._v(", or "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'auto'")]),s._v("\n  -U, "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--binary")]),s._v("              "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not strip CR characters at EOL "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MSDOS/Windows"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nWhen FILE is "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-'")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" standard input.  With no FILE, "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v("\nrecursive, "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-'")]),s._v(" otherwise.  With fewer than two FILEs, assume -h.\nExit status is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" any line "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("or "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" -L"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" is selected, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" otherwise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" any error occurs and "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v(" is not given, the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" status is "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".\n\nReport bugs to: bug-grep@gnu.org\nGNU "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" home page: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("http://www.gnu.org/software/grep/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nGeneral "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" using GNU software: "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("https://www.gnu.org/gethelp/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br")])]),t("h2",{attrs:{id:"_3-egrep加上-n显示行数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-egrep加上-n显示行数"}},[s._v("#")]),s._v(" 3.egrep加上-n显示行数")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("[root@iZwz9ivqsnyj6hi71t3pamZ ~]# egrep 'now6' test.cpp \n//\t\t\t\t\t\t\t\t\t\t\t\t      int now6=now5+tag[6];\n//\t\t\t\t\t\t\t\t\t\t\t\t      if(now6==n)\n//\t\t\t\t\t\t\t\t\t\t\t\t      else if(now6>n)\n\n[root@iZwz9ivqsnyj6hi71t3pamZ ~]# egrep 'now6' test.cpp  -n\n87://\t\t\t\t\t\t\t\t\t\t\t\t      int now6=now5+tag[6];\n88://\t\t\t\t\t\t\t\t\t\t\t\t      if(now6==n)\n93://\t\t\t\t\t\t\t\t\t\t\t\t      else if(now6>n)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("W3Cschool的"),t("a",{attrs:{href:"https://www.w3cschool.cn/linux/linux-comm-grep.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("grep命令"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/xudong-bupt/archive/2013/03/23/2976793.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("linux下的find文件查找命令与grep文件内容查找命令"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);