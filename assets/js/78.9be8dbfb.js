(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{369:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"c-面向对象高级编程-下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-面向对象高级编程-下"}},[t._v("#")]),t._v(" C++面向对象高级编程（下）")]),t._v(" "),s("ul",[s("li",[t._v("C++98、已完结『本部分』")])]),t._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[t._v('<font style="background: yellow">\n<font style="background:pink">\n<font style="background: MediumSpringGreen">\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"📑-目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#📑-目录"}},[t._v("#")]),t._v(" 📑 目录")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#📑-目录"}},[t._v("📑 目录")])]),s("li",[s("a",{attrs:{href:"#✅核心中英文对照"}},[t._v("✅核心中英文对照")])]),s("li",[s("a",{attrs:{href:"#_1-导读"}},[t._v("1.导读")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1-1-你应该具备的基础"}},[t._v("1.1.你应该具备的基础")])]),s("li",[s("a",{attrs:{href:"#_1-2-我们的目标"}},[t._v("1.2.我们的目标")])]),s("li",[s("a",{attrs:{href:"#_1-3-参考书籍"}},[t._v("1.3.参考书籍")])])])]),s("li",[s("a",{attrs:{href:"#_2-conversion-function-⭐️『class→其他type』"}},[t._v("2.conversion function⭐️『class→其他type』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-1-转换函数-诡异的语法"}},[t._v("2.1.转换函数诡异的语法")])]),s("li",[s("a",{attrs:{href:"#_2-2-别名⭐️"}},[t._v("2.2.别名⭐️")])])])]),s("li",[s("a",{attrs:{href:"#_3-non-explicit-one-argument-constructor"}},[t._v("3.non-explicit one argument constructor")]),s("ul",[s("li",[s("a",{attrs:{href:"#_3-1-术语-argument-和-parameter-辨析"}},[t._v("3.1.术语argument和parameter辨析")])]),s("li",[s("a",{attrs:{href:"#_3-2-explicit关键字"}},[t._v("3.2.explicit关键字")])]),s("li",[s("a",{attrs:{href:"#_3-3-explicit作用于『构造函数』的实质『记忆-理解』⭐️"}},[t._v("3.3.explicit作用于『构造函数』的实质『记忆+理解』⭐️")])]),s("li",[s("a",{attrs:{href:"#_3-4-explicit用途⭐️"}},[t._v("3.4.explicit用途⭐️")])]),s("li",[s("a",{attrs:{href:"#_3-5-『explicit需要-font-style-background-yellow-修正-font-』⭐️"}},[t._v("3.5.『explicit需要"),s("font",{staticStyle:{background:"yellow"}},[t._v("修正")]),t._v("』⭐️")],1)]),s("li",[s("a",{attrs:{href:"#_3-6-『设计手法』-代理"}},[t._v("3.6.『设计手法』—代理")])])])]),s("li",[s("a",{attrs:{href:"#✅类的模仿"}},[t._v("✅类的模仿")])]),s("li",[s("a",{attrs:{href:"#_4-pointer-like-classes"}},[t._v("4.pointer-like classes")]),s("ul",[s("li",[s("a",{attrs:{href:"#_4-1-智能指针"}},[t._v("4.1.智能指针")])]),s("li",[s("a",{attrs:{href:"#_4-2-『语言设计的一个bug』智能指针重载"}},[t._v("4.2.『语言设计的一个bug』智能指针重载->")])]),s("li",[s("a",{attrs:{href:"#_4-3-迭代器-作为-另外一种智能指针-⭐️"}},[t._v("4.3.迭代器—作为另外一种智能指针⭐️")])]),s("li",[s("a",{attrs:{href:"#_4-4-迭代器的特别之处"}},[t._v("4.4.迭代器的特别之处")])])])]),s("li",[s("a",{attrs:{href:"#_5-function-like-classes"}},[t._v("5.function-like classes")]),s("ul",[s("li",[s("a",{attrs:{href:"#_5-1-仿函数"}},[t._v("5.1.仿函数")])]),s("li",[s("a",{attrs:{href:"#_5-2-面试-空类的大小"}},[t._v("5.2.面试—空类的大小")])])])]),s("li",[s("a",{attrs:{href:"#_6-namespace-经验谈"}},[t._v("6.namespace经验谈")])]),s("li",[s("a",{attrs:{href:"#✅模板专题"}},[t._v("✅模板专题")])]),s("li",[s("a",{attrs:{href:"#_7-class-template-『类模版』"}},[t._v("7.class template『类模版』")])]),s("li",[s("a",{attrs:{href:"#_8-funtion-template-『函数模版』"}},[t._v("8.Funtion Template『函数模版』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_8-1-实参推导⭐️"}},[t._v("8.1.实参推导⭐️")])])])]),s("li",[s("a",{attrs:{href:"#_9-member-template-『成员模板』"}},[t._v("9.Member Template 『成员模板』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_9-1-成员模板的例子🧐"}},[t._v("9.1.成员模板的例子🧐")])]),s("li",[s("a",{attrs:{href:"#_9-2-术语『向上转型』up-cast⭐️"}},[t._v("9.2.术语『向上转型』up-cast⭐️")])])])]),s("li",[s("a",{attrs:{href:"#✅模板高级主题"}},[t._v("✅模板高级主题")])]),s("li",[s("a",{attrs:{href:"#_10-specialization-『模板特化』"}},[t._v("10.specialization 『模板特化』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_10-1-一种奇特的-临时对象-的语法⭐️"}},[t._v("10.1.一种奇特的“临时对象”的语法⭐️")])])])]),s("li",[s("a",{attrs:{href:"#_11-模板偏特化-『-template-partical-speciation-』"}},[t._v("11.模板偏特化 『template Partical Speciation』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_11-1-『-font-style-background-yellow-个数的偏-font-』⭐️"}},[t._v("11.1.『"),s("font",{staticStyle:{background:"yellow"}},[t._v("个数的偏")]),t._v("』⭐️")],1)]),s("li",[s("a",{attrs:{href:"#_11-2『-font-style-background-yellow-范围的偏-font-』⭐️"}},[t._v("11.2『"),s("font",{staticStyle:{background:"yellow"}},[t._v("范围的偏")]),t._v("』⭐️")],1)])])]),s("li",[s("a",{attrs:{href:"#_12-template-template-parameter-模板模板参数-『没看懂』⭐️"}},[t._v("12.template template parameter,模板模板参数 『没看懂』⭐️")]),s("ul",[s("li",[s("a",{attrs:{href:"#_12-1-什么情况-typename-和-class-共同-⭐️"}},[t._v("12.1.什么情况typename和class共同？⭐️")])]),s("li",[s("a",{attrs:{href:"#_12-2-看看2-0中奇怪的语法-using-⭐️"}},[t._v("12.2.看看2.0中奇怪的语法using ⭐️")])]),s("li",[s("a",{attrs:{href:"#_12-3-引入c-2-0的新语法『-template-typename-t-using-lst-list-t-allocator-t-⭐️"}},[t._v("12.3.引入C++2.0的新语法『template"),s("typename",{attrs:{T:""}},[t._v(" using Lst=list"),s("T",[t._v(">;⭐️")])],1)],1)]),s("li",[s("a",{attrs:{href:"#_12-4-智能指针在本专题的『特殊表现』⭐️"}},[t._v("12.4.智能指针在本专题的『特殊表现』⭐️")])]),s("li",[s("a",{attrs:{href:"#_12-5-不是-template-template-parameter-『易错-这不正确』⭐️"}},[t._v("12.5.不是template template parameter『易错：这不正确』⭐️")])])])]),s("li",[s("a",{attrs:{href:"#_13-关于c-标准库"}},[t._v("13.关于C++标准库")]),s("ul",[s("li",[s("a",{attrs:{href:"#_13-1-学习态度和方法"}},[t._v("13.1.学习态度和方法")])]),s("li",[s("a",{attrs:{href:"#_13-2-了解你的编译器对c-2-0的支持度"}},[t._v("13.2.了解你的编译器对C++2.0的支持度")])]),s("li",[s("a",{attrs:{href:"#_13-3-devc-上-iso-c-11-开关"}},[t._v("13.3.DevC++上ISO C++11开关")])]),s("li",[s("a",{attrs:{href:"#_13-4-vs系列的看是否支持-c-11"}},[t._v("13.4.VS系列的看是否支持C++11")])])])]),s("li",[s("a",{attrs:{href:"#_14-三个主题c-11"}},[t._v("14.三个主题C++11")]),s("ul",[s("li",[s("a",{attrs:{href:"#_14-1-主题1、-variadic-templates-font-style-background-yellow-数量不定的模板参数-font-『震撼弹』"}},[t._v("14.1.主题1、variadic templates，"),s("font",{staticStyle:{background:"yellow"}},[t._v("数量不定的模板参数")]),t._v("『震撼弹』")],1)]),s("li",[s("a",{attrs:{href:"#_14-2-语法糖的概念⭐️"}},[t._v("14.2.语法糖的概念⭐️")])]),s("li",[s("a",{attrs:{href:"#_14-3-主题2、auto"}},[t._v("14.3.主题2、auto")])]),s("li",[s("a",{attrs:{href:"#_14-4-主题3、新的for循环"}},[t._v("14.4.主题3、新的for循环")])])])]),s("li",[s("a",{attrs:{href:"#_15-reference-『引用』"}},[t._v("15.Reference 『引用』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_15-1-面试-引用的本质⭐️"}},[t._v("15.1.面试-引用的本质⭐️")])]),s("li",[s("a",{attrs:{href:"#_15-2-『sizeof-引用-编译器制造的假象-』⭐️"}},[t._v("15.2.『sizeof(引用)-编译器制造的假象』⭐️")])]),s("li",[s("a",{attrs:{href:"#_15-3-『面试-个人补充』待考察"}},[t._v("15.3.『面试-个人补充』待考察")])]),s("li",[s("a",{attrs:{href:"#_15-4-传引用-和-传value-是不能并存的『函数签名』⭐️"}},[t._v("15.4.传引用和传value是不能并存的『函数签名』⭐️")])]),s("li",[s("a",{attrs:{href:"#_15-5-『const和签名』"}},[t._v("15.5.『const和签名』")])])])]),s("li",[s("a",{attrs:{href:"#✅对象模型-object-model"}},[t._v("✅对象模型（Object Model）")])]),s("li",[s("a",{attrs:{href:"#_16-复合-继承-关系下的构造和析构"}},[t._v("16.复合&继承关系下的构造和析构")]),s("ul",[s("li",[s("a",{attrs:{href:"#_16-1-复合关系下的『构造和析构』"}},[t._v("16.1.复合关系下的『构造和析构』")])]),s("li",[s("a",{attrs:{href:"#_16-2-继承关系下的构造和析构"}},[t._v("16.2.继承关系下的构造和析构")])]),s("li",[s("a",{attrs:{href:"#_16-3-继承和组合关系下的『构造和析构』-font-style-background-yellow-面试考-font"}},[t._v("16.3.继承和组合关系下的『构造和析构』（"),s("font",{staticStyle:{background:"yellow"}},[t._v("面试考！")]),t._v("）")],1)]),s("li",[s("a",{attrs:{href:"#_16-4-c-规格书没有说的『坑』⭐️✅"}},[t._v("16.4.C++规格书没有说的『坑』⭐️✅")])]),s("li",[s("a",{attrs:{href:"#面试考-核心"}},[t._v("面试考（核心）")])])])]),s("li",[s("a",{attrs:{href:"#_17-关于-vptr-和-vtbl"}},[t._v("17.关于vptr和vtbl")]),s("ul",[s("li",[s("a",{attrs:{href:"#_17-1-虚指针和虚表的『核心图』⭐️"}},[t._v("17.1.虚指针和虚表的『核心图』⭐️")])]),s("li",[s("a",{attrs:{href:"#_17-2-关键点-观察如何找虚指针-⭐️"}},[t._v("17.2.关键点：观察如何找虚指针！⭐️")])]),s("li",[s("a",{attrs:{href:"#_17-3-『面试常考-动态绑定3条件-』⭐️"}},[t._v("17.3.『面试常考-动态绑定3条件』⭐️")])])])]),s("li",[s("a",{attrs:{href:"#_18-❓-难点⭐️-关于-this-指针"}},[t._v("18.❓（难点⭐️）关于this 指针")]),s("ul",[s("li",[s("a",{attrs:{href:"#✅观察this指针✅"}},[t._v("✅观察this指针✅")])])])]),s("li",[s("a",{attrs:{href:"#_19-汇编层面-动态绑定和静态绑定区别"}},[t._v("19.汇编层面-动态绑定和静态绑定区别")])]),s("li",[s("a",{attrs:{href:"#✅『补充主题-const-』"}},[t._v("✅『补充主题const』")]),s("ul",[s("li",[s("a",{attrs:{href:"#temp-1-『const不能放置的-』"}},[t._v("temp.1.『const不能放置的？』")])]),s("li",[s("a",{attrs:{href:"#temp-2-『非常易错的结论』-写时复制"}},[t._v("temp.2.『非常易错的结论』+写时复制")])])])]),s("li",[s("a",{attrs:{href:"#_20-关于new-delete"}},[t._v("20.关于New,Delete")]),s("ul",[s("li",[s("a",{attrs:{href:"#_20-1-『-new-和-delete-一系列混淆概念』"}},[t._v("20.1.『new和delete一系列混淆概念』")])]),s("li",[s("a",{attrs:{href:"#_20-2-『-侯捷的失误-』"}},[t._v("20.2.『侯捷的失误』")])])])]),s("li",[s("a",{attrs:{href:"#_21-operator-new-operator-delete"}},[t._v("21.operator new，operator delete")])]),s("li",[s("a",{attrs:{href:"#_22-示例-22"}},[t._v("22.示例 22")]),s("ul",[s("li",[s("a",{attrs:{href:"#_22-1-『易错-前面加上了cout这种设计』"}},[t._v("22.1.『易错-前面加上了cout这种设计』")])])])]),s("li",[s("a",{attrs:{href:"#_23-重载-new-delete-示例-23"}},[t._v("23.重载new(),delete()示例  23")]),s("ul",[s("li",[s("a",{attrs:{href:"#_23-1-placement-new-『好像是乱入的知识点』"}},[t._v("23.1.placement new『好像是乱入的知识点』")])]),s("li",[s("a",{attrs:{href:"#_23-2-『whoway关于-placement-new-的思考』"}},[t._v("23.2.『whoway关于placement new的思考』")])]),s("li",[s("a",{attrs:{href:"#_23-3-『关于delete的疑问』"}},[t._v("23.3.『关于delete的疑问』")])]),s("li",[s("a",{attrs:{href:"#_23-4-『工程经验』"}},[t._v("23.4.『工程经验』")])])])]),s("li",[s("a",{attrs:{href:"#_24-basic-string-使用-new-extra-扩充申请量"}},[t._v("24.Basic_String使用new(extra)扩充申请量")])]),s("li",[s("a",{attrs:{href:"#参考资料"}},[t._v("参考资料")])])])]),s("p"),t._v(" "),s("p",[t._v("[TOC]")]),t._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[t._v("01.导读1\n02.conversion function『转换函数』\n\t- 区分：conversion function和转换构造函数\n03.non-explicit one argument constructor\n\t- explicit既可以修饰：转换函数，还可以修饰转换构造函数\n\n一个C++的class它做出来，可能会像2种东西！！很特别的2种东西\n- 指针『智能指针、迭代器』\n- 函数『仿函数』\n04.pointer-like classes\n05.function-like classes\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"✅核心中英文对照"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅核心中英文对照"}},[t._v("#")]),t._v(" ✅核心中英文对照")]),t._v(" "),s("ul",[s("li",[t._v("区分：『类型转换函数』和『转换构造函数』和explicit\n"),s("ul",[s("li",[t._v("conversion function『"),s("strong",[t._v("转换函数")]),t._v("』"),s("font",{staticStyle:{background:"yellow"}},[t._v("『转换函数是将class→其他类型』")])],1)])]),t._v(" "),s("li",[t._v("03.non-explicit one argument constructor")]),t._v(" "),s("li",[t._v("区分："),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("我们不能说：one parameter，这是two  parameter，但是one argument!")])]),t._v(" "),s("ul",[s("li",[t._v("parameter，参数")]),t._v(" "),s("li",[t._v("argument，实参")])])],1),t._v(" "),s("li",[t._v("区分模板：『"),s("strong",[t._v("所以，模板主要分为3大类：类模板，函数模板，成员模板』")]),t._v(" "),s("ul",[s("li",[t._v("07."),s("code",[t._v("class template")]),t._v("『类模板』")]),t._v(" "),s("li",[t._v("08."),s("code",[t._v("Funtion Template")]),t._v("『函数模板』")]),t._v(" "),s("li",[t._v("09."),s("code",[t._v("Member Template")]),t._v(" 『成员模板』")])])])]),t._v(" "),s("h2",{attrs:{id:"_1-导读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-导读"}},[t._v("#")]),t._v(" 1.导读")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711162244133.png",alt:"image-20210711162244133"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("本部分课程，还谈到"),s("strong",[t._v("模板")]),t._v("、"),s("strong",[t._v("泛型")]),t._v("。这个其实是另外"),s("strong",[t._v("1大支")]),t._v("，是另外一条技术主轴。它和面向对象不太一样。")])]),t._v(" "),s("li",[s("p",[t._v("所以，我们标题是『兼谈对象模型』，这个课程里面，会专门有1个单元去谈『对象模型』")])]),t._v(" "),s("li",[s("p",[t._v("互勉：勿在浮沙筑高台："),s("strong",[t._v("我们的基础要够深入，我们往上建的大楼才能够稳固！")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-1-你应该具备的基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-你应该具备的基础"}},[t._v("#")]),t._v(" 1.1.你应该具备的基础")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711162335639.png",alt:"image-20210711162335639"}})]),t._v(" "),s("ul",[s("li",[t._v("这是上个课程的续集，也会讲前面一些课程中提过一些的东西，把它谈论得更加深入。")]),t._v(" "),s("li",[t._v("框框，框出来的C++11部分，我只会谈3个主题！因为有另外一门课程会专门讨论C++11")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-我们的目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-我们的目标"}},[t._v("#")]),t._v(" 1.2.我们的目标")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711162711256.png",alt:"image-20210711162711256"}})]),t._v(" "),s("ul",[s("li",[t._v("『泛型编程』和『面向对象编程』是C++的2大技术主流！")]),t._v(" "),s("li",[t._v("你将获得的代码"),s("code",[t._v("Test-Cpp.cpp")])])]),t._v(" "),s("h3",{attrs:{id:"_1-3-参考书籍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-参考书籍"}},[t._v("#")]),t._v(" 1.3.参考书籍")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711162749553.png",alt:"image-20210711162749553"}})]),t._v(" "),s("ul",[s("li",[t._v("高级书籍『专家经验』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711162904145.png",alt:"image-20210711162904145"}})]),t._v(" "),s("ul",[s("li",[t._v("由于C++很庞大，非常复杂，所以我们很需要一些专家经验！")]),t._v(" "),s("li",[t._v("专家告诉我们什么该做，什么不该做。"),s("strong",[t._v("最左边的，是全部都在讲C++2.0的特性")]),t._v("。《Effective Modem C++》")]),t._v(" "),s("li",[t._v("这些书就很薄了，先前的『百科全书是1k页左右，这基本是250-300左右』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711162930428.png",alt:"image-20210711162930428"}})]),t._v(" "),s("ul",[s("li",[t._v("C++库是不可少的，所以我们可以看这几本。")]),t._v(" "),s("li",[t._v("STL的思维，是『泛型编程』思维。")]),t._v(" "),s("li",[t._v("注意：继承的关系在『标准库』中用得非常少，这句话 是适用于"),s("strong",[t._v("以前")]),t._v("的版本。")]),t._v(" "),s("li",[t._v("现在的版本，同样的一件事情，在新的版本中被切割得好几个class，那它确实继承关系就很重！这导致我们，如果真的要去学标准库要去怎么做的话！困难度大大提升！")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711163012893.png",alt:"image-20210711163012893"}})]),t._v(" "),s("ul",[s("li",[t._v("编译器行为")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711163039107.png",alt:"image-20210711163039107"}})]),t._v(" "),s("ul",[s("li",[t._v("学习的内容『前面的PPT说了』")])]),t._v(" "),s("h2",{attrs:{id:"_2-conversion-function⭐️『class→其他type』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-conversion-function⭐️『class→其他type』"}},[t._v("#")]),t._v(" 2."),s("code",[t._v("conversion function")]),t._v("⭐️『class→其他type』")]),t._v(" "),s("blockquote",[s("p",[t._v("conversion function『"),s("strong",[t._v("转换函数")]),t._v("』")])]),t._v(" "),s("ul",[s("li",[t._v("第1个，我们谈论『转换函数』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711163249003.png",alt:"image-20210711163249003"}})]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Question")]),t._v("：『转换函数』——谁把谁转换成什么呢？")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Answer")]),t._v("：class它所做出来的对象，它可不可以被转换为另外一种类型？或者是另外一种类型可不可以转为A『一个是转出去，一个是转进来！』这2个方向，我们都要谈论。"),s("font",{staticStyle:{background:"yellow"}},[t._v("『转换函数是将class→其他类型』")])],1)])]),t._v(" "),s("h3",{attrs:{id:"_2-1-转换函数诡异的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-转换函数诡异的语法"}},[t._v("#")]),t._v(" 2.1."),s("code",[t._v("转换函数")]),t._v("诡异的语法")]),t._v(" "),s("ul",[s("li",[t._v("先谈，"),s("font",{staticStyle:{background:"yellow"}},[t._v("转出去！『对象转换为其他类型』")])],1),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("『转换函数是将class→其他类型』")])],1)]),t._v(" "),s("p",[t._v("设计一个分数class，你可以想象：除完能转换为一个double。作为1个设计者，我会认为，我设计1个分数class应该很合理的，可以被当做一个double。所以在后面被使用的场景之中，如果编译器把分数当成一个double，我会认为很合理，于是我会写一个『"),s("strong",[t._v("黄色部分的代码")]),t._v("』")]),t._v(" "),s("p",[s("strong",[t._v("诡异的语法")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("一定是operator开头，中间空1格，至于要转为什么类型呢？那个类型呢，就成为它名称的一部分。『23333，奇怪的语法』")]),t._v(" "),s("li",[t._v("注意："),s("font",{staticStyle:{background:"yellow"}},[t._v("仔细观察，它和"),s("strong",[t._v("运算符重载")]),t._v("是"),s("strong",[t._v("不一样")]),t._v("的！")])],1)]),t._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[t._v("这个函数很特别：\n\n00、这个函数的意思是，我这个分数类，要可以被转为double。\n『编译器，你在碰到任何需要把我的分数类转为double的时候，你就来调用黄色部分的这个函数！我允许你调用！』\n\n\n1、函数名称叫作`operator double`，这个是一个整体！！！\n\n2、参数的话。『『不可以有参数』』，转换嘛，哪有什么参数！！\n\n3、return type呢？？按理说，转换之后就是double咯，『但是**C++说，你不用写！因为后面你已经写了，如果你前面又写，又写错了，自己矛盾怎么办呢？？那算了，你不用写！！**！』\n那么，返回类型是什么？就是名称里面的这个东西！！\n\n4、另外，转换语法上还有什么特点呢？因为转换『**不可能**』去改变class里面的Data！\n\n5、所以，『**这种转换函数，通常都会加上const**』『我讲，通常的意思是：如果你在设计它，你没有加const，那编译也会通过！\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("因此这种函数就叫作『转换函数』，这是一个很特殊的术语！是没有return type（返回类型的）！")])]),t._v(" "),s("li",[t._v("不过，我们在上一课程，"),s("strong",[t._v("非常强调：const该加就要加！！这个考验你的。。。也许在某种情况下，在那种情况下会出错『上一个课程提到了！！！")]),t._v("』『那样"),s("font",{staticStyle:{background:"yellow"}},[t._v("，那就是你设计者的责任咯！！！』")])],1)]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("////////);")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("这样写好，之后，我们看看他什么时候会被调用起来？？")]),t._v(" "),s("li",[t._v("编译器编译到那个地方的时候：它手上有几个筹码！它要去看看，到底你设计了哪些函数？这些函数，能不能被编译器在这一行让他通过？？编译器正在找：")])]),t._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[t._v("1、有没有写一个『『全局的函数』』？叫作operator +的动作，并且第1个参数是int，当然是浮点数也是可以，因为整数可以转为浮点数嘛。。而第2个参数是分数类，，如果能找到，那么这一行能通过\n2、设法继续找一找？？『『试图把F转换为double』』，于是就去找找看，你有没有设计这样的一个转换函数？？『它找到了，黄色的部分，于是就\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("注意：任何一个class，只要你认为合理，你都可以设计写好几个")]),t._v("『转换函数』")])],1),t._v(" "),s("li",[t._v("比如"),s("code",[t._v("operator string")])]),t._v(" "),s("li",[t._v("注意：此外，"),s("font",{staticStyle:{background:"yellow"}},[t._v("转换过去！"),s("strong",[t._v("不一定")]),t._v("要是什么『基本类型』啊！")]),t._v("任何一个type，只要这个type，先前出现过，那编译器编译到这的时候『认得』，这样就可以！")],1)]),t._v(" "),s("h3",{attrs:{id:"_2-2-别名⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-别名⭐️"}},[t._v("#")]),t._v(" 2.2.别名⭐️")]),t._v(" "),s("ul",[s("li",[t._v("whoway：\n"),s("ul",[s("li",[t._v("有民间说法将『conversion function，"),s("strong",[t._v("转换函数")]),t._v("』叫作："),s("strong",[t._v("类型转换函数")])]),t._v(" "),s("li",[t._v("将**用于转换的构造函数『others→class Object』**叫作："),s("strong",[t._v("转换构造函数")])])])])]),t._v(" "),s("h2",{attrs:{id:"_3-non-explicit-one-argument-constructor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-non-explicit-one-argument-constructor"}},[t._v("#")]),t._v(" 3."),s("code",[t._v("non-explicit")]),t._v(" one "),s("code",[t._v("argument")]),t._v(" constructor")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("whoway：⭐️**用于转换的构造函数『others→class Object』**可以这么理解，构造的过程，本来就是给初始化值，然后告诉你，最后变为了这个对象！")])]),t._v(" "),s("li",[s("p",[t._v("1、"),s("font",{staticStyle:{background:"yellow"}},[t._v("『本部分在"),s("strong",[t._v("C++2.0新特性")]),t._v("中有"),s("strong",[t._v("扩展")]),t._v("，"),s("strong",[t._v("会重复讲")]),t._v("！』")])],1)]),t._v(" "),s("li",[s("p",[t._v("2、这个故事，"),s("font",{staticStyle:{background:"yellow"}},[t._v("和上1节，是同一个故事！")]),t._v("但是，我们有改动——没有了转换函数")],1)]),t._v(" "),s("li",[s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("认识『"),s("strong",[t._v("术语")]),t._v("』。 "),s("code",[t._v("one argument")]),t._v(" ，argument就是"),s("strong",[t._v("实参")]),t._v("。")]),t._v("现在有几个参数呢？")],1)]),t._v(" "),s("li",[s("p",[t._v("分子和分母，但是由于后面这个有默认值。")])])]),t._v(" "),s("h3",{attrs:{id:"_3-1-术语argument和parameter辨析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-术语argument和parameter辨析"}},[t._v("#")]),t._v(" 3.1.术语"),s("code",[t._v("argument")]),t._v("和"),s("code",[t._v("parameter")]),t._v("辨析")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711163827322.png",alt:"image-20210711163827322"}})]),t._v(" "),s("ul",[s("li",[s("code",[t._v("non-explicit one argument constructor")]),t._v(" "),s("ul",[s("li",[t._v("『绿色中就是这个东西，几个参数呢？2个，但是由于后面这个，有默认的值，所以，其实你要创造一个对象，只要给1个实际参数就可以了！这样的设计，其实是合理的，因为数学上3就是3/1』")]),t._v(" "),s("li",[t._v("这样的绿色的构造函数，这样写之后，这个就叫作"),s("strong",[t._v("one argument")]),t._v("。")])])]),t._v(" "),s("li",[t._v("所以，我们在讨论这种特殊的技术的语法和它的行为啊，"),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("我们不能说：one parameter，这是two  parameter，但是one argument!")])])],1),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("『『单词："),s("code",[t._v("parameter，n.参（变）数")]),t._v("』,形式参数』")]),t._v(" "),s("ul",[s("li",[t._v("parameter，参数")]),t._v(" "),s("li",[t._v("argument，实参")])])],1),t._v(" "),s("li",[t._v("『"),s("code",[t._v("one argument")]),t._v(" 其实，这句话其实不完整啊！术语也很精简，也不能把整个故事说得很精简。』")]),t._v(" "),s("li",[s("font",{staticStyle:{background:"red"}},[t._v("超级易错（反人类理解的定义）")]),t._v("：\n"),s("ul",[s("li",[t._v("『"),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("one argument的意思是，只要1个实参就够了！当然你给它2个实参，也可以!!")]),t._v("』")])],1)])],1)]),t._v(" "),s("h3",{attrs:{id:"_3-2-explicit关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-explicit关键字"}},[t._v("#")]),t._v(" 3.2.explicit关键字")]),t._v(" "),s("p",[t._v("那么"),s("code",[t._v("explicit")]),t._v("又是什么意思呢？这个蓝色的，这是个"),s("code",[t._v("关键字")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("这个"),s("strong",[t._v("词语可以出现在构造函数前")]),t._v("面，但是这里没有出现！『后面的PPT，我们有加"),s("code",[t._v("explicit")]),t._v("的构造函数』")])]),t._v(" "),s("li",[s("p",[t._v("这个有什么特性？？")])]),t._v(" "),s("li",[s("p",[t._v("注意，下面使用："),s("code",[t._v("+")]),t._v("的动作发生在左边？？我的设计是右边要加上一个分数。就是分数要和分数相加。。但是调用的时候，却是"),s("code",[t._v("分数+4")])])]),t._v(" "),s("li",[s("p",[t._v("『这个形式和我的设计不同！！！』于是编译器，去看一看，能不能把4转为分数？？？发现，上面绿色部分，所以将他们相加了。『我们感受到了，绿色部分的代码，可以把别种东西转化为这种class，和我们前面PPT讲的正好相反』")])]),t._v(" "),s("li",[s("p",[t._v("注意：『这些都是转化。但是我们当口语上说："),s("strong",[t._v("转换函数，我们不是指的这种！！我们是指的上一页的PPT的『这部分，侯捷和北大郭炜的不同，或许支持侯捷的说法")]),t._v("』』")])]),t._v(" "),s("li",[s("p",[t._v("那么，"),s("strong",[t._v("如果加上『explicit之后会怎么样呢？？我们再往下面看")]),t._v("。。。』")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711164228604.png",alt:"image-20210711164228604"}})]),t._v(" "),s("ul",[s("li",[t._v("至此，我们还没有加上『explicit』，我们如果绿色和黄色并存的话？？『这个时候，编译器却不知道该怎么办了？？』")]),t._v(" "),s("li",[t._v("原因：编译器，它是要把4转为分数？『黄色部分』，，还是要把分数转为double？『绿色部分』")]),t._v(" "),s("li",[t._v("『编译器，发现有2条可行。。当然我们说了，只要多于1条路线可行的话，"),s("strong",[t._v("编译器就不知道该走哪条？？，没有谁比较好，谁比较坏的这种判断！！")]),t._v("！！』")]),t._v(" "),s("li",[t._v("『所以这里，并存的话，歧义/二义就不知道怎么办，于是就报错』")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("所以::代码写成这样，会不会矛盾，是取决于你做的事情，，代码写成这样。会不会矛盾？？会不会二义？？ 取决于『使用者到底怎么去使用这个class』")])]),t._v(" "),s("li",[t._v("『注意：是使用者，而不是设计者？？。。。我的理解』")]),t._v(" "),s("li",[t._v("『double也就是前2页的那张能够通过：没有重载+号，然后目标是double，所以编译器知道怎么寻找到目标方式』")]),t._v(" "),s("li",[t._v("『这一面通过不了，是因为重载了+号，然后就可以2条路，』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711164635158.png",alt:"image-20210711164635158"}})]),t._v(" "),s("h3",{attrs:{id:"_3-3-explicit作用于『构造函数』的实质『记忆-理解』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-explicit作用于『构造函数』的实质『记忆-理解』⭐️"}},[t._v("#")]),t._v(" 3.3.explicit作用于『构造函数』的实质『记忆+理解』⭐️")]),t._v(" "),s("ul",[s("li",[t._v("这个"),s("font",{staticStyle:{background:"yellow"}},[t._v("explicit的意思是：明确的告诉编译器说，你"),s("strong",[t._v("不要给我暗度陈仓")]),t._v("，你不要这样子，自动的帮我做事情，我"),s("strong",[t._v("既然设计是『构造函数！』就以，我")]),t._v("真的以构造函数的形式去需要的时候，你再来调用他们！』")])],1),t._v(" "),s("li",[t._v("所以，我现在把它加上explicit，这么一来的话，你就不能把『3变成3/1』，我又明白说要那么做，你不要那么自动。于是下面的就不能那么转换，理解编译器给我们的报错信息，其实很重要。")])]),t._v(" "),s("h3",{attrs:{id:"_3-4-explicit用途⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-explicit用途⭐️"}},[t._v("#")]),t._v(" 3.4.explicit用途⭐️")]),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("explicit这个关键字用在什么地方呢？")])],1),t._v(" "),s("li",[t._v("蛮少的\n"),s("ul",[s("li",[s("strong",[t._v("（1）只有『不是』这里！『构造函数的前面』")]),t._v("『刚刚说只有，是为了特别希望强调啊，让你印象深刻，")]),t._v(" "),s("li",[s("strong",[t._v("（2）他其实，另外还在模板的一个很小的地方，也用得到这个关键字")]),t._v("』但是，太细微的一部分，也很少人去注意到它。我们也不去谈了，所以90%把，或者更多，几率，你看到这个关键字，它就是用在『构造函数』的前面。。")])])]),t._v(" "),s("li",[t._v("『侯捷也坑我。。好家伙，还是得创造自己的一套体系，，")])]),t._v(" "),s("h3",{attrs:{id:"_3-5-『explicit需要修正』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-『explicit需要修正』⭐️"}},[t._v("#")]),t._v(" 3.5.『explicit需要"),s("font",{staticStyle:{background:"yellow"}},[t._v("修正")]),t._v("』⭐️")],1),t._v(" "),s("ul",[s("li",[t._v("我在GitHub上，找到一份资料：有把Explicit修饰『转换函数』的，代码测试如下，")]),t._v(" "),s("li",[t._v("参考自： huihui/"),s("a",{attrs:{href:"https://interview.huihut.com/#/?id=explicit%ef%bc%88%e6%98%be%e5%bc%8f%ef%bc%89%e5%85%b3%e9%94%ae%e5%ad%97",target:"_blank",rel:"noopener noreferrer"}},[t._v("interview"),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[t._v("⭐️explicit 修饰**构造函数『others→class Object』**时，可以防止隐式转换和赋值（assignment）初始化")]),t._v(" "),s("li",[t._v("⭐️explicit 修饰**转换函数『class Object→others』**时，可以防止隐式转换，但 "),s("a",{attrs:{href:"https://zh.cppreference.com/w/cpp/language/implicit_conversion",target:"_blank",rel:"noopener noreferrer"}},[t._v("『按语境转换』"),s("OutboundLink")],1),t._v(" 除外")])])])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数，但是可以转换")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//explicit常规修饰")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("B")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//explicit修饰")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explicit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" A a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" B b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//===============================================")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-----可以转换的『构造函数』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK,直接初始化")]),t._v("\n\tA "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK，『赋值』初始化")]),t._v("\n\tA a2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK，直接『列表』初始化")]),t._v("\n\tA a3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK，复制『列表』初始化")]),t._v("\n\tA a4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK，允许static_cast的『显示转换』")]),t._v("\n\tA a5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK，允许从int到A的『隐式转换』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doA")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-----『转换函数』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//OK：使用转换函数 A::operator bool() 的从 A 到 bool 的"隐式转换"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK：使用转换函数 A::operator bool() 的从 A 到 bool 的隐式转换")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：使用转换函数 A::operator bool() 的从 A 到 bool 的隐式转换")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" a7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK ：static_cast 进行直接初始化『显示转换』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" a8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//=================================================================")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//explicit修饰了，可以转换的『构造函数』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：直接初始化")]),t._v("\n\tB "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被 explicit 修饰构造函数的对象不可以『赋值初始化』")]),t._v("\n\tB b2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：直接列表初始化")]),t._v("\n\tB b3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被 explicit 修饰构造函数的对象不可以『复制列表初始化』")]),t._v("\n\tB b4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// OK：允许 static_cast 的『显式转换』")]),t._v("\n\tB b5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-----explicit修饰的『转换函数』==========")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：被explicit 修饰构造函数的对象不可以从int到B的『隐式转换』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非常易错！！")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK：被explicit 修饰转换函数B::operator bool() 的对象可以从 B 到 bool 的『『按语境转换』』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK：被 explicit 修饰转换函数 B::operator bool() 的对象可以从 B 到 bool 的『按语境转换』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误：被 explicit 修饰转换函数 B::operator bool() 的对象不可以『隐式转换』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" b7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//OK：static_cast 进行直接初始化『显示转换』")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" b8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br"),s("span",{staticClass:"line-number"},[t._v("79")]),s("br"),s("span",{staticClass:"line-number"},[t._v("80")]),s("br"),s("span",{staticClass:"line-number"},[t._v("81")]),s("br"),s("span",{staticClass:"line-number"},[t._v("82")]),s("br"),s("span",{staticClass:"line-number"},[t._v("83")]),s("br"),s("span",{staticClass:"line-number"},[t._v("84")]),s("br"),s("span",{staticClass:"line-number"},[t._v("85")]),s("br"),s("span",{staticClass:"line-number"},[t._v("86")]),s("br"),s("span",{staticClass:"line-number"},[t._v("87")]),s("br"),s("span",{staticClass:"line-number"},[t._v("88")]),s("br"),s("span",{staticClass:"line-number"},[t._v("89")]),s("br"),s("span",{staticClass:"line-number"},[t._v("90")]),s("br"),s("span",{staticClass:"line-number"},[t._v("91")]),s("br"),s("span",{staticClass:"line-number"},[t._v("92")]),s("br"),s("span",{staticClass:"line-number"},[t._v("93")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711165158585.png",alt:"image-20210711165158585"}})]),t._v(" "),s("ul",[s("li",[t._v("或许很好奇？")]),t._v(" "),s("li",[t._v("标准库，这么一大块的一个东西，有没有哪个用到转换函数『class Object→others』")]),t._v(" "),s("li",[t._v("如果我能够找到的话。更加能够说服我。转换函数还真是有用啊")]),t._v(" "),s("li",[t._v("在"),s("strong",[t._v("标准库中，我找到了一个例子，如上")]),t._v("『这个语法有点奇怪啊，这个叫『"),s("strong",[t._v("模板的偏特化")]),t._v("』现在还没谈论到。")])]),t._v(" "),s("h3",{attrs:{id:"_3-6-『设计手法』-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-『设计手法』-代理"}},[t._v("#")]),t._v(" 3.6.『设计手法』—代理")]),t._v(" "),s("ul",[s("li",[t._v("这个容器，设计了这样的一个函数，『我们要注意的是：它传回的是什么？？是个reference？？")]),t._v(" "),s("li",[t._v("我们发现他是typedef的，它"),s("strong",[t._v("是另外一个class")]),t._v("换了个名称。『这个"),s("strong",[t._v("在设计手法上，叫作：proxy，代理")]),t._v("』———用这个，用传回来的这个东西，去代表，去代理。它本来真正应该传回来的东西。")]),t._v(" "),s("li",[t._v("『关于这个设计手法，我们现在不去谈它』—这"),s("strong",[t._v("是一个有名的设计模式")]),t._v("。『设计模式就很高阶的一个主题了，我们不去谈他们』它谈的这个东西，应该要代表一个bool值，对不对？？但是传回的是refernce。"),s("strong",[t._v("那么这个东西，自自然然的就应该有个转换函数转换为bool『牛皮，这样我的STL源代码理解更加OK了")]),t._v("』")]),t._v(" "),s("li",[t._v("你拿A去代表B，那么A应该有个转换函数，转为B。应该是要这么设计，这是合理的，果然，它传回的是这个。『下面框框的代码』")])]),t._v(" "),s("h2",{attrs:{id:"✅类的模仿"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅类的模仿"}},[t._v("#")]),t._v(" ✅类的模仿")]),t._v(" "),s("p",[t._v("接下来要谈的是：一个C++的class它做出来，可能会像2种东西！很特别的2种东西。我们分别来谈他们")]),t._v(" "),s("ul",[s("li",[t._v("1、这个class做出来之后，所产生出来的对象像1个『指针』，我们叫作『pointer-like class』")]),t._v(" "),s("li",[t._v("2、这个class做出来之后，所产生出来的对象像1个『函数』，我们叫作『fuction-like class』")])]),t._v(" "),s("h2",{attrs:{id:"_4-pointer-like-classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-pointer-like-classes"}},[t._v("#")]),t._v(" 4."),s("code",[t._v("pointer-like")]),t._v(" classes")]),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("Question："),s("strong",[t._v("你为什么要把一个class设计出来，让他像一个指针呢？")])])],1),t._v(" "),s("li",[t._v("Answer：因为你想要比指针再"),s("strong",[t._v("多做一点事情")]),t._v("！")]),t._v(" "),s("li",[t._v("『所以，通常，这样子做出来的东西，我们又把它叫作“智能指针”，就像智能手机一样，比传统的手机更加聪明一些，比指针更聪明，我们叫智能指针』")])]),t._v(" "),s("h3",{attrs:{id:"_4-1-智能指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-智能指针"}},[t._v("#")]),t._v(" 4.1.智能指针")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711165530210.png",alt:"image-20210711165530210"}})]),t._v(" "),s("ul",[s("li",[t._v("C++在2.0之前，有一个智能指针叫作："),s("code",[t._v("auto_ptr")]),t._v("，在2.0之后，有好几个智能指针。『包括现在看到的"),s("code",[t._v("shared_ptr")]),t._v("』")]),t._v(" "),s("li",[t._v("它们的长相，都类似这样，这里头一定会有一个真正的指针，图中，大圈圈是智能指针，里头就是真正的C++指针。")]),t._v(" "),s("li",[s("strong",[t._v("上面的代码，是早期的写法")]),t._v("，但是在2.0之后，整个就变得很复杂了，多了很多的class，原本是一个class可以做的事情，变成好几个class")]),t._v(" "),s("li",[s("code",[t._v("*sp")]),t._v("这个的意思是：等于就是要"),s("font",{staticStyle:{background:"yellow"}},[t._v("（"),s("strong",[t._v("中文叫”解参考“，derefernce")]),t._v("），就是"),s("strong",[t._v("去拿那个东西")]),t._v("。")])],1)]),t._v(" "),s("h3",{attrs:{id:"_4-2-『语言设计的一个bug』智能指针重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-『语言设计的一个bug』智能指针重载"}},[t._v("#")]),t._v(" 4.2.『语言设计的一个bug』智能指针重载"),s("code",[t._v("->")])]),t._v(" "),s("blockquote",[s("p",[s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("一个语言设计上的bug")]),t._v("？？whoway注")])],1)]),t._v(" "),s("ul",[s("li",[s("p",[t._v("关于这个重载，不只是新手，"),s("strong",[t._v("很多C++的老经验的人，也都卡在这个地方")]),t._v("，过不去。因为没有办法会解释它的行为，也许会写！看多就会写。『"),s("strong",[t._v("熟读唐诗三百首，不会作诗也会吟")]),t._v("』")])]),t._v(" "),s("li",[s("p",[t._v("我们来看一下，PPT右边（右下角），"),s("font",{staticStyle:{background:"yellow"}},[t._v("如果使用者这么用"),s("code",[t._v("sp->method()")]),t._v("的话！是什么意思？")])],1)]),t._v(" "),s("li",[s("p",[t._v("意思"),s("code",[t._v("等同于")]),t._v("下面的，『使用者使用智能指针的想法，是要这样，现在』。但是"),s("code",[t._v("->")]),s("strong",[t._v("不是已经消耗掉了吗？")])])]),t._v(" "),s("li",[s("p",[t._v("为什么还有呢？？『我也疑惑这里』")]),t._v(" "),s("ul",[s("li",[t._v("1、这个想法是对的，从符号的角度，解释不下去了。")]),t._v(" "),s("li",[t._v("2、『该怎么解释呢？"),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("箭头符号，有个特殊的行为，作用下去得到的结果，这个箭头符号会继续作用下去！")]),t._v("！』")])],1),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("那为什么。只有这个符号会这样呢？没有什么特别。C++语法规定。"),s("strong",[t._v("因为这样子解释才解释得通")]),t._v("，它要有一个！")])],1),t._v(" "),s("li",[t._v("『因为语言整个是人设计出来的，左边这样，右边这样**，它要这样解释，才能去呼应，它可以这样写**』")])])]),t._v(" "),s("li",[s("p",[t._v("智能指针，里面一定要写 "),s("code",[t._v("*")]),t._v(" 和 "),s("code",[t._v("->")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-3-迭代器-作为另外一种智能指针⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-迭代器-作为另外一种智能指针⭐️"}},[t._v("#")]),t._v(" 4.3.迭代器—作为"),s("code",[t._v("另外一种智能指针")]),t._v("⭐️")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170005192.png",alt:"image-20210711170005192"}})]),t._v(" "),s("ul",[s("li",[t._v("C++标准库，里面有很重要的东西。"),s("strong",[t._v("如果你是新手，现在是大学生的话，我强烈建议你去开始使用库")]),t._v("！那么你在使用库的时候，会有一个很重要的东西。就是容器，容器本身一定带着迭代器。")]),t._v(" "),s("li",[t._v("现在只谈『"),s("strong",[t._v("迭代器，作为另外一种，智能指针，我们要注意它的操作符重载")]),t._v("』")]),t._v(" "),s("li",[t._v("『这个分类绝了。牛皮』")])]),t._v(" "),s("blockquote",[s("p",[t._v("所以，迭代器干什么呢？它就是要代表，容器里面的一个元素。它要去指向一个元素，因此它也想一个指针。你也可以说它就是智能指针。")])]),t._v(" "),s("h3",{attrs:{id:"_4-4-迭代器的特别之处"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-迭代器的特别之处"}},[t._v("#")]),t._v(" 4.4.迭代器的特别之处")]),t._v(" "),s("p",[t._v("但是这种智能指针（指的是“迭代器”）和上一页，长相略有不同。")]),t._v(" "),s("ul",[s("li",[t._v("1、迭代器，这种智能指针，"),s("font",{staticStyle:{background:"yellow"}},[t._v("不但要去处理，"),s("code",[t._v("*")]),t._v("和"),s("code",[t._v("->")]),t._v("符号，它还要去处理"),s("code",[t._v("++")]),t._v("，"),s("code",[t._v("--")]),t._v("，"),s("code",[t._v("==")]),t._v("和"),s("code",[t._v("!=")])])],1),t._v(" "),s("li",[t._v("2、"),s("strong",[t._v("『迭代器之外的智能指针，可能不必要去处理++或--』")]),t._v("，因为它没有所谓的这个东西")]),t._v(" "),s("li",[t._v("3、"),s("code",[t._v("++")]),t._v("和"),s("code",[t._v("--")]),t._v("仅仅在指针移动。迭代器的主要用途：用来遍历容器")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170216200.png",alt:"image-20210711170216200"}})]),t._v(" "),s("ul",[s("li",[t._v("这样，"),s("font",{staticStyle:{background:"yellow"}},[t._v("由于"),s("strong",[t._v("右边的需求")]),t._v("，所以，我们知晓了左边那么设计的原因。")])],1)]),t._v(" "),s("h2",{attrs:{id:"_5-function-like-classes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-function-like-classes"}},[t._v("#")]),t._v(" 5."),s("code",[t._v("function-like")]),t._v(" classes")]),t._v(" "),s("ul",[s("li",[t._v("设计1个class，让他的行为像一个函数。")]),t._v(" "),s("li",[t._v("可能好奇：为什么C++为什么要一个class所创造出来的对象，像指针或者像函数。")]),t._v(" "),s("li",[t._v("『好像也难以，一言以蔽之。』我们先不谈它把，后头更多的课程中，或许你会有好的体会。")]),t._v(" "),s("li",[t._v("我们现在讨论『"),s("strong",[t._v("语言层面")]),t._v("』如何让他变成像个指针Or函数。")])]),t._v(" "),s("h3",{attrs:{id:"_5-1-仿函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-仿函数"}},[t._v("#")]),t._v(" 5.1.仿函数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170500038.png",alt:"image-20210711170500038"}})]),t._v(" "),s("ul",[s("li",[t._v("如何像个函数，函数长啥样？")]),t._v(" "),s("li",[t._v("名称，小括号"),s("font",{staticStyle:{background:"yellow"}},[t._v("『"),s("strong",[t._v("其实小括号，这个操作符叫作function call operator，函数调用操作符")]),t._v("』")]),t._v("所以，"),s("strong",[t._v("任何一个东西，如果能够接受，"),s("code",[t._v("小括号这个操作符")])]),t._v("，『『我们就叫这个东西叫作一个函数，或者叫作一个像函数的东西。』』")],1),t._v(" "),s("li",[t._v("PPT中『灰色』是有东西的，只是现在讲解不需要，所以先去掉。其实是它有另外继承另外一个class。")]),t._v(" "),s("li",[t._v("PS：我看《STL源码剖析》的时候也看到了")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170607518.png",alt:"image-20210711170607518"}})]),t._v(" "),s("ul",[s("li",[t._v("标准库中有这么3个东西，上面的3个并不是C++标准库，规格书中所说的3个，规格书中，没有说有这3个，是GNUC里面额外给的，"),s("strong",[t._v("在VC啊，你可能就找不到")]),t._v("！")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170721925.png",alt:"image-20210711170721925"}})]),t._v(" "),s("ul",[s("li",[t._v("其实，也都继承了，但是好像PPT动态的没有出来。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170738343.png",alt:"image-20210711170738343"}})]),t._v(" "),s("ul",[s("li",[t._v("被继承的，就是这2个！！『"),s("strong",[t._v("为何要继承这个东西呢？这是个蛮大的题目，我有另外一个课程，谈到标准库，就会取谈论，为什么要继承这些东西？")]),t._v("』")]),t._v(" "),s("li",[t._v("现在是让你看一下他们的全貌。")])]),t._v(" "),s("h3",{attrs:{id:"_5-2-面试-空类的大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-面试-空类的大小"}},[t._v("#")]),t._v(" 5.2.面试—"),s("code",[t._v("空类的大小")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("问个问题，如何知道他们的大小")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[t._v("1、没有函数。也没有数据，你可能很少写过这样奇怪的class。它的大小也是0，不过，你很好奇，把这段写到你的代码中去。然后sizeof，去看看他们的大小，你可能得到的是1")]),t._v(" "),s("li",[t._v("2、"),s("strong",[t._v("理论上是0")]),t._v("，实现上，由于一些限制，得到的可能是1『面试考』")])]),t._v(" "),s("h2",{attrs:{id:"_6-namespace经验谈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-namespace经验谈"}},[t._v("#")]),t._v(" 6."),s("code",[t._v("namespace")]),t._v("经验谈")]),t._v(" "),s("ul",[s("li",[t._v("这是一个『很小的题目』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711170815913.png",alt:"image-20210711170815913"}})]),t._v(" "),s("ul",[s("li",[t._v("其实"),s("code",[t._v("namespace")]),t._v("主要就是把一些东西区隔开来：")]),t._v(" "),s("li",[t._v("因为现在设计软件是"),s("font",{staticStyle:{background:"yellow"}},[t._v("团队作业，也许A、B两个部门独立作业，没有沟通，以致于开发出来的函数或者变量或者类的名称冲突")]),t._v("『这不是不可能的事情』所以，namespace就是：你自己再取一个名字再把你所有东西包起来，要是这个名字A和B也冲突了『那就没办法了2333』『但这个很好解决了吧』")],1),t._v(" "),s("li",[t._v("在侯捷中，它给大家的测试程序都是用"),s("code",[t._v("namespace")]),t._v("给包起来的。")])]),t._v(" "),s("h2",{attrs:{id:"✅模板专题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅模板专题"}},[t._v("#")]),t._v(" ✅模板专题")]),t._v(" "),s("ul",[s("li",[t._v("接下来，我们有好几张小图片，我们要谈论的是模板。")])]),t._v(" "),s("h2",{attrs:{id:"_7-class-template『类模版』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-class-template『类模版』"}},[t._v("#")]),t._v(" 7."),s("code",[t._v("class template")]),t._v("『类模版』")]),t._v(" "),s("ul",[s("li",[t._v("已经提过，复数是个模板类或者叫"),s("code",[t._v("类模板")]),t._v("（侯捷这里，说错了？"),s("font",{staticStyle:{background:"yellow"}},[t._v("我觉得是的，侯捷他说错了！")]),t._v("）")],1),t._v(" "),s("li",[t._v("whoway：这句话在国内的翻译书中，是完全不同的概念！\n"),s("ul",[s("li",[t._v("模板类，重点是class")]),t._v(" "),s("li",[t._v("类模板，重点是模板")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711171454716.png",alt:"image-20210711171454716"}})]),t._v(" "),s("ul",[s("li",[t._v("这个『泛型编程』的理解其实比『面向对象』更简单")]),t._v(" "),s("li",[t._v("面向对象当牵扯到『继承、虚函数的时候』如果层次太多，其实是很复杂的，要去理解它很痛苦！")])]),t._v(" "),s("h2",{attrs:{id:"_8-funtion-template『函数模版』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-funtion-template『函数模版』"}},[t._v("#")]),t._v(" 8."),s("code",[t._v("Funtion Template")]),t._v("『函数模版』")]),t._v(" "),s("h3",{attrs:{id:"_8-1-实参推导⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-实参推导⭐️"}},[t._v("#")]),t._v(" 8.1.实参推导⭐️")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711171546606.png",alt:"image-20210711171546606"}})]),t._v(" "),s("ul",[s("li",[t._v("关键字。class可以改为typename")]),t._v(" "),s("li",[t._v("函数模板比"),s("code",[t._v("class模板")]),t._v("还，函数模板在使用的时候，是不必要去指明type的")]),t._v(" "),s("li",[t._v("『调用的时候要放参数，于是"),s("font",{staticStyle:{background:"yellow"}},[t._v("编译器就做动作——"),s("strong",[t._v("arguement dedutcion，实参推导。")]),t._v("』就能够根据你调用时候的参数（实参）是什么，推导出这个T是什么。")])],1),t._v(" "),s("li",[t._v("『模板的编译，"),s("strong",[t._v("模板块本身的编译")]),t._v("，编译出来的也是一个半成品，不能保证后头一定会成功。所谓后头，就是后头"),s("strong",[t._v("使用的时候，会再编译一次")]),t._v("。对应的代码就是"),s("code",[t._v("r3=min(r1,r2);")]),t._v("『注意，使用这个词语』")]),t._v(" "),s("li",[t._v("注意：模板往往会写成一个，不管是"),s("code",[t._v(".h")]),t._v("还是"),s("code",[t._v(".cpp")]),t._v("，"),s("strong",[t._v("它本身可以编译通")]),t._v("过。但是真正**使用的时候，**你的应用程序本身还会再编译一次，那时候过不过就不知道了！如果 ，stone没找打"),s("code",[t._v("<")]),t._v("的重载，就会报错，找不到这个。")])]),t._v(" "),s("h2",{attrs:{id:"_9-member-template-『成员模板』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-member-template-『成员模板』"}},[t._v("#")]),t._v(" 9."),s("code",[t._v("Member Template")]),t._v(" 『成员模板』")]),t._v(" "),s("ul",[s("li",[t._v("语法是，下面这样。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711172208233.png",alt:"image-20210711172208233"}})]),t._v(" "),s("ul",[s("li",[t._v("『"),s("font",{staticStyle:{background:"yellow"}},[t._v("黄色这一部分，就是成员模板")]),t._v("』什么意思呢？？\n"),s("ul",[s("li",[t._v("黄色这一块，是模板里面的member，而他自己本身又是一个template，我们"),s("strong",[t._v("就把黄色这个部分，叫作『member template』")])])])],1),t._v(" "),s("li",[t._v("『这个做什么用？？你可以想象，外头的这个模板是个允"),s("strong",[t._v("许变化")]),t._v("的东西，变化什么呢？\n"),s("ul",[s("li",[s("code",[t._v("T1和T2")]),t._v("，而在这种变化之下，T1和T2，如果被确定了之后，"),s("strong",[t._v("里头的这一小端，又可以变化！！变化什么呢？")])]),t._v(" "),s("li",[s("code",[t._v("U1和U2")]),t._v("』『这个有点抽象，看下面具体的例子』")])])])]),t._v(" "),s("h3",{attrs:{id:"_9-1-成员模板的例子🧐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-成员模板的例子🧐"}},[t._v("#")]),t._v(" 9.1.成员模板的例子🧐")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711172406507.png",alt:"image-20210711172406507"}})]),t._v(" "),s("ul",[s("li",[t._v("『往往这种成员模"),s("strong",[t._v("板，会出现在，比如说像标准库，很多很多的模板")]),t._v("，它的构造函数就会设计成一个这种东西』")])]),t._v(" "),s("blockquote",[s("p",[t._v("最下角的题目答案：")])]),t._v(" "),s("p",[t._v("1、当然可以！想想生活经验")]),t._v(" "),s("p",[t._v("2、反之则不可以！！")]),t._v(" "),s("ul",[s("li",[t._v("所以，由于要满足这种可以和不可以！！所以，设计pair的人，它说，它要怎么反应这个事情呢？")]),t._v(" "),s("li",[t._v("我允许你使用任意的——T1和T2，并且在构造我的时候，我还允许你放任意的U1和U2，，但是U1和U2必须满足这里的赋值动作！！！『这什么意思？？把p的first second，放进来，当成我本身的first和second。『所以，放进来是鲫鱼，由于可以转型为鱼类，所以才可以通过。。这整个构造函数就通过了』")]),t._v(" "),s("li",[t._v("『这个就叫成员模板，或者叫模板成员，颠倒过来念都可以。。。真的嘛。。侯捷这里又错了吧，，")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("你会在标准库的大量的类的构造函数里面发现，构造函数写成这样！！")]),t._v("』")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("为的就是让构造函数更加有弹性一些。。")]),t._v("』『何谓弹性，就是我们先前的鱼类，鸟类，，，啥的上面的例子，自己想一下』")]),t._v(" "),s("li",[t._v("『反之，如果放置的初值是鲸鱼和麻雀，那么这个构造函数就会出错，，这一块构造函数本身是正确的！！但是被运用的时候，失败了，因为使用者的原因")]),t._v(" "),s("li",[t._v("『"),s("strong",[t._v("所以，模板主要分为3大类：类模板，函数模板，成员模板』")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711172501724.png",alt:"image-20210711172501724"}})]),t._v(" "),s("ul",[s("li",[t._v("用意是：shared_ptr本身，允许你使用的时候，让他指定任意的type，而构造函数说：")])]),t._v(" "),s("h3",{attrs:{id:"_9-2-术语『向上转型』up-cast⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-术语『向上转型』up-cast⭐️"}},[t._v("#")]),t._v(" 9.2.术语『向上转型』up-cast⭐️")]),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("up-cast的由来")])]),t._v("，在面向对象的关系里面，由于父类往往画在上头，子类画在下头。。所以，这个动作是有点像指针要往上移动。『这"),s("strong",[t._v("是一定合理！！因为这是人的生活的经验")]),t._v("』『难"),s("strong",[t._v("道不用分析类的内存分布")]),t._v("？』\n"),s("ul",[s("li",[t._v("你有一根指针是指向动物，那么将来让他指向一只猪可以吗？可以的")]),t._v(" "),s("li",[t._v("既然指针可以，那么我智能指针也必须可以，为了这种必须可以，所以，智能指针要写出这一种member templater』")])])],1)]),t._v(" "),s("h2",{attrs:{id:"✅模板高级主题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅模板高级主题"}},[t._v("#")]),t._v(" ✅模板高级主题")]),t._v(" "),s("ul",[s("li",[t._v("接下来谈论特化。")]),t._v(" "),s("li",[t._v("『什么叫泛化？特化的反面嘛。泛化，』")]),t._v(" "),s("li",[t._v("“泛化”：就是模板")]),t._v(" "),s("li",[t._v("”特化“：的意思就是，你作为一个设计者，你可能会面对某些独特的类型，做特殊的设计！！")])]),t._v(" "),s("h2",{attrs:{id:"_10-specialization-『模板特化』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-specialization-『模板特化』"}},[t._v("#")]),t._v(" 10.specialization 『模板特化』")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711172829724.png",alt:"image-20210711172829724"}})]),t._v(" "),s("ul",[s("li",[t._v("某算法，可以在两点之间快速，画点")])]),t._v(" "),s("h3",{attrs:{id:"_10-1-一种奇特的-临时对象-的语法⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-一种奇特的-临时对象-的语法⭐️"}},[t._v("#")]),t._v(" 10.1.一种奇特的“临时对象”的语法⭐️")]),t._v(" "),s("ul",[s("li",[t._v("⭐️『"),s("strong",[t._v("浅绿色的是临时对象")]),t._v("』1000是参数的意思，框框上面是泛化，下面的都是特化『当然，这个只是中间过程。』")]),t._v(" "),s("li",[s("strong",[t._v("泛化，又叫作全泛化")]),t._v("。"),s("code",[t._v("Full specialization")])]),t._v(" "),s("li",[t._v("对应的，叫作偏特化『也可以翻译为"),s("font",{staticStyle:{background:"yellow"}},[t._v("局部特化")]),t._v("』翻译得简洁一点，就叫偏特化。")],1)]),t._v(" "),s("h2",{attrs:{id:"_11-模板偏特化-『template-partical-speciation』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-模板偏特化-『template-partical-speciation』"}},[t._v("#")]),t._v(" 11.模板偏特化 『"),s("code",[t._v("template Partical Speciation")]),t._v("』")]),t._v(" "),s("ul",[s("li",[t._v("偏特化，或者叫『局部特化』")]),t._v(" "),s("li",[t._v("可以从2个角度理解\n"),s("ul",[s("li",[t._v("1、个数上的偏『好理解")]),t._v(" "),s("li",[t._v("2、范围上的偏『稍微难理解一些，但也不是多难。")])])])]),t._v(" "),s("h3",{attrs:{id:"_11-1-『个数的偏』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-『个数的偏』⭐️"}},[t._v("#")]),t._v(" 11.1.『"),s("font",{staticStyle:{background:"yellow"}},[t._v("个数的偏")]),t._v("』⭐️")],1),t._v(" "),s("ul",[s("li",[t._v("也就是说，如果模板有3个模板参数，")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("，，，\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711173159586.png",alt:"image-20210711173159586"}})]),t._v(" "),s("ul",[s("li",[t._v("也就是说，这个模板，如果有三个，这里是2个，最上面框的上面一行叫作：模板参数。』")]),t._v(" "),s("li",[t._v("你想绑定其中一个，比如这个vector可以运行你指定元素类型和一个分配器。分配器是标准库的东西，我们这里就不谈了。必须"),s("strong",[t._v("指定这2个，那这里有个默认值。好，你在设计的时候，如果这个元素是个bool值的话，好像我应该有一种特殊的设计！")]),t._v("『为什么呢？因为在C++里面，最小单元的元素类型是char，，如果你让一个字节去代表一个bool值，是不是太浪费了啊。。』『浪费八倍。。所**以，用户想要放的是真假值，0或1的话，我觉得我可以单独为他来设计符号，而不用泛化，**因此我要告诉编译器，怎么告诉它呢？这里有2个模板参数，我说我现在只生1个，因为，另外一个被我绑定了，T被我写在下面变成bool，上面有2个，现在只剩下一个了，那个还没定，所以忍让在这里还是要写出来。。，，")]),t._v(" "),s("li",[t._v("这就是语法；这种个数上的偏的语法，，『我在标准库中找到了』")]),t._v(" "),s("li",[t._v("3个4个5个都可以，"),s("strong",[t._v("注意：你不能绑定1,3,5，然后，留下2,4这样是不行的！！"),s("font",{staticStyle:{background:"yellow"}},[t._v("一定要从左边到右边啊！不能用跳")]),t._v("。")],1)])]),t._v(" "),s("h3",{attrs:{id:"_11-2『范围的偏』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2『范围的偏』⭐️"}},[t._v("#")]),t._v(" 11.2『"),s("font",{staticStyle:{background:"yellow"}},[t._v("范围的偏")]),t._v("』⭐️")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711185958689.png",alt:"image-20210711185958689"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果我设计，接受T。T可以是任意类型！")])]),t._v(" "),s("li",[s("p",[t._v("解释范围的偏："),s("font",{staticStyle:{background:"yellow"}},[t._v("如果，**我把范围缩小一点的话：它是一个指针，"),s("strong",[t._v("指向任意类型。这样是不是范围缩小了？指针也是一种类型！所以从")]),t._v("本来是任意类型，现在缩小为指针。**至于指针指向什么呢？都可以")])],1)]),t._v(" "),s("li",[s("p",[t._v("『如果你有这种运用的话，C++支持你这种想法』")])]),t._v(" "),s("li",[s("p",[t._v("『首先**，写左上角框框的，然后你写个偏特化版本的，现在如果使用者使用的是个指针，那么就用这套代码。『好惨败无力**的？")])]),t._v(" "),s("li",[s("p",[t._v("『作为一个初学者，上面和下面的T很容易混淆。你**把它切开来，完全就是两个T！**或者你，干脆把T换成U，这样就OK了。很多人不懂，是把下面这个特化和上面那个泛化，以为下面的T和上面的T一样，其实不一样！")])]),t._v(" "),s("li",[s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("『当使用者，像下面去用的时候，"),s("strong",[t._v("编译器会给你另外修改")]),t._v("。"),s("strong",[t._v("『STL源码拼写中常见")]),t._v("。』")])],1)])]),t._v(" "),s("h2",{attrs:{id:"_12-template-template-parameter-模板模板参数-『没看懂』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-template-template-parameter-模板模板参数-『没看懂』⭐️"}},[t._v("#")]),t._v(" 12."),s("code",[t._v("template template parameter")]),t._v(","),s("code",[t._v("模板模板参数")]),t._v(" 『没看懂』⭐️")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711190448783.png",alt:"image-20210711190448783"}})]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("template template parameter")]),t._v(","),s("code",[t._v("模板模板参数")]),t._v(" 『套娃』")])]),t._v(" "),s("li",[s("p",[t._v("再来，有个相当深的东西了。")])]),t._v(" "),s("li",[s("p",[t._v("这个用途是这样：")])]),t._v(" "),s("li",[s("p",[t._v("里头的第2个参数，本身又是一个template，我的例子是放在第2，它本身又是一个template『语法就是黄色部分，这种写法』这样子写就已经很容易懂了。"),s("strong",[t._v("一般，其实已经很少人或者书籍在讲解这个主题，这已经很高深了")]),t._v("。这个一般会觉得这个好难，其实你看看黄色部分，其实一点都不难。")])])]),t._v(" "),s("h3",{attrs:{id:"_12-1-什么情况typename和class共同-⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-什么情况typename和class共同-⭐️"}},[t._v("#")]),t._v(" 12.1.什么情况"),s("code",[t._v("typename")]),t._v("和"),s("code",[t._v("class")]),t._v("共同？⭐️")]),t._v(" "),s("ul",[s("li",[t._v("『曾经有学生问过我，黄色部分的，那个里面有时候写class有时候写"),s("code",[t._v("typename")]),t._v("！那这里又有出现class，到底这两者在什么时候可以共通，为什么要共通？好，我现在先告诉你：\n"),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("只有")]),t._v("在模板尖括号"),s("code",[t._v("<>")]),t._v("这位置上，"),s("strong",[t._v("只有")]),t._v("这个位置上『class和Typename共通』"),s("strong",[t._v("其他地方都不可以！")])])],1),t._v(" "),s("li",[s("strong",[t._v("至于，他们为什么能够共通，这是个历史因素")]),t._v("。早先并没有"),s("code",[t._v("Typename")]),t._v("这个关键字，所以在这个位置上，模板是后来才发展出来的！所以，"),s("strong",[t._v("C++就暂时下借用class！后来出现typename")]),t._v("。")]),t._v(" "),s("li",[t._v("当我们写出黄色部分之后，其实我们还要继续往下看。就是这个container，这里"),s("strong",[t._v("也只是个代名词")]),t._v("而言。叫什么都无所谓。")])])])]),t._v(" "),s("h3",{attrs:{id:"_12-2-看看2-0中奇怪的语法using⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-看看2-0中奇怪的语法using⭐️"}},[t._v("#")]),t._v(" 12.2.看看2.0中奇怪的语法"),s("code",[t._v("using")]),t._v("⭐️")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("紫色")]),t._v("的：这么用，意思是，我"),s("strong",[t._v("传入一个容器，并且传入容器的元素类型")]),t._v("！『我使用者就变得很有弹性了。")]),t._v(" "),s("li",[t._v("『作为设计者，当我想让我的使用者这么有弹性的时候，，我这个黄色部分就必须是个模板模板参数』")])]),t._v(" "),s("blockquote",[s("p",[t._v("很不幸的，"),s("strong",[t._v("紫色部分，打了个叉。。错误在哪？？这已经和这个主题无关了")]),t._v("，模板模板参数在这里的写法是对的！只不过，真正在用的时候，这个容器，其实模板『5分30秒，没听懂』")]),t._v(" "),s("p",[t._v("其实容器其实有第2模板参数，有的还有第3，那个2和3，我们平常再用的时候没有写的原因是：因为它有默认值。")])]),t._v(" "),s("ul",[s("li",[t._v("那你关于哪里，你可能认为，那对啊，那我这里就放默认值啊。诶，是，你的意思是这样。但是你的语法过不了。就是过不了。『所以很遗憾，上面的语法是对的，但是用到下面就是不行』")])]),t._v(" "),s("h3",{attrs:{id:"_12-3-引入c-2-0的新语法『template-typename-t-using-lst-list-t-allocator-t-⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-引入c-2-0的新语法『template-typename-t-using-lst-list-t-allocator-t-⭐️"}},[t._v("#")]),t._v(" 12.3.引入C++2.0的新语法『"),s("code",[t._v("template<typename T> using Lst=list<T,allocator<T>>;")]),t._v("⭐️")]),t._v(" "),s("ul",[s("li",[t._v("『"),s("strong",[t._v("那么如何解决这个问题呢？引入另外一个语法")]),t._v("』：")]),t._v(" "),s("li",[t._v("必须加上，第2个框框的『至于，这个框框中的2行，我就"),s("strong",[t._v("不解释了，因为他是C++2.0新增加一个语法")]),t._v("』")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" Lst"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("allocator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("T"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("`\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ul",[s("li",[t._v("『我在2.0那门课，谈到它，因为这个没有办法用1分钟，半分钟谈完。。』")])]),t._v(" "),s("h3",{attrs:{id:"_12-4-智能指针在本专题的『特殊表现』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-智能指针在本专题的『特殊表现』⭐️"}},[t._v("#")]),t._v(" 12.4.智能指针在本专题的『特殊表现』⭐️")]),t._v(" "),s("ul",[s("li",[t._v("刚刚很遗憾啊，打了个X，所以我要找一个可以通过的——让我也许感觉更好。『所以上一页，我这个模板模板参数，我放的是容器，刚刚很不幸的打X，是因为容器需要好几个模板参数。』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711191318787.png",alt:"image-20210711191318787"}})]),t._v(" "),s("ul",[s("li",[t._v("现在回到这里来，我要传递进去的是智能指针，"),s("font",{staticStyle:{background:"yellow"}},[t._v("而智能指针，它"),s("strong",[t._v("都")]),t._v("只接受——一个参数，"),s("strong",[t._v("不能说都啦！")])])],1),t._v(" "),s("li",[t._v("我其实也不是每个智能指针都非常的熟。『呃呃呃』")]),t._v(" "),s("li",[t._v("我有一两个，我还挺熟的。所以我知道，至少有那么一两个，只接收一个模板参数！刚就卡在一个或2个，现在应该要能通过罗。我们看看这个设计。")]),t._v(" "),s("li",[t._v("我们发现，下面有两个X，这个并不是上面设计错了。是因为，那两行，那两种智能指针独特的特性！所以，我们也不用去管他们了。『只剩下，1和4可以，我们重点不在智能指针，我们重点在上头的黄色部分，对应到标题的写法』")])]),t._v(" "),s("h3",{attrs:{id:"_12-5-不是template-template-parameter『易错-这不正确』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-不是template-template-parameter『易错-这不正确』⭐️"}},[t._v("#")]),t._v(" 12.5.不是"),s("code",[t._v("template template parameter")]),t._v("『易错：这不正确』⭐️")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711191517797.png",alt:"image-20210711191517797"}})]),t._v(" "),s("ul",[s("li",[t._v("有一次在现场谈到这个话题，有一位，很有经验的工程师，联想到这个。问这个是不是模板参数？？")]),t._v(" "),s("li",[t._v("『不一样，这个怎么解释呢？我们现在要把它理清啊，，，当像黄色部分这么写的时候，是下面那么用！！")]),t._v(" "),s("li",[t._v("是什么意思？\n"),s("ul",[s("li",[t._v("第1行解释：由于第2个有默认值，所以只指定第1个模板参数。。")]),t._v(" "),s("li",[t._v("第2行解释：如果我要写第2模板参数的话，我必须这么写。"),s("code",[t._v("list<int>")]),t._v("它已经不是模板，"),s("strong",[t._v("虽然他是用模板设计出来的东西。但是这么写的话，已经没有任何模糊地带了。没有任何灰色地带")]),t._v("。没有任何模板参数。。已经绑定过，已经写死了。。所以，你可以说这个，已经不再是模板了。所以你不能说：黄色那里是个"),s("code",[t._v("模板模板参数")]),t._v("。")])])]),t._v(" "),s("li",[t._v("『这个解释。额，我没动。。』")]),t._v(" "),s("li",[t._v("『对比前面的，我们传进去的是list，然后他没有绑定任何东西，比如"),s("code",[t._v("list<int>")]),t._v("。这样任然是个灰色的，模糊的。』")]),t._v(" "),s("li",[t._v("这样，我们才叫它是一个模板")])]),t._v(" "),s("h2",{attrs:{id:"_13-关于c-标准库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-关于c-标准库"}},[t._v("#")]),t._v(" 13.关于C++标准库")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711191749907.png",alt:"image-20210711191749907"}})]),t._v(" "),s("ul",[s("li",[t._v("这是一个太大太大的一个问题了。『我们在这门课程，和上一们基础，我们要谈的是C++语言的部分，然后标准库是另外一个部分，我没打算放在这个里头，我只是想提醒大家，库是多么的重要!』")]),t._v(" "),s("li",[t._v("在不同的语言，库扮演很重要的角色。")]),t._v(" "),s("li",[t._v("C++初学者， 你要去熟练他。算法有7,8十个。")]),t._v(" "),s("li",[t._v("另外，其实有一些你在你想象中是比较少的动作。比如说copy，从一块地方拷贝到另外一个地方去。『这一种事情，在整个编程里面，常常需要发生，所以它的效率要非常高，所以标准库的团队要好好的设计』")]),t._v(" "),s("li",[t._v("『看右边的书籍：可以很好的说明容器和算法的重要性，，在过去HIA没有网页，以及网页编程之前，现在一个学编程，很大的一致，是去制作网页，怎么做它的商业模式，但是在这个之前，古典的 ，经典的编程。这本书的署名告诉你，数据结构+算法等于程序。』所以，多么重要。")])]),t._v(" "),s("h3",{attrs:{id:"_13-1-学习态度和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-学习态度和方法"}},[t._v("#")]),t._v(" 13.1.学习态度和方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("『作为一个学习者，我可以把我年轻时候的经验告诉大家：在我很早以前学习C语言的时候，C相对于C++实在是太简单不过了。在学习C语言之后，我们要学习什么呢？哦，C也有它的标准库，它服了，它有好几百个函数，")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("一个比较认真的学习者的态度是：这些函数，我通通都要用过一遍")]),t._v("，几百个，至少我都要用过，最好我都还要调用过。这样"),s("strong",[t._v("你在真正面对问题时候，，你才知道标准库已经给您了什")]),t._v("么！一定要傻傻的字节再写一套，写得还没它好。』所以，容器和算法你都要去测试一遍！！写个小程序去测试一下，也**不要眼高手低，反正网页上有很多代码：我就用看的，这个效果不够好！**最好你还是要去写代码测试，使用这些是很愉快的事情！！因为，它已经把你在学校里面的那些复杂的东西都已经实现出来了！你只是去用而已，还有比这个更快乐的事情吗？")])]),t._v(" "),s("li",[s("p",[t._v("努力到这里，我们看看这些我们已经学了的清单，我们还有路线要走！")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("但是我在这要讲3个主题，也很少的时间就能很好的理解这个东西")]),t._v("！一个很重要，2个是对你编程带来很大帮助性！")])])]),t._v(" "),s("h3",{attrs:{id:"_13-2-了解你的编译器对c-2-0的支持度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-了解你的编译器对c-2-0的支持度"}},[t._v("#")]),t._v(" 13.2.了解你的编译器对C++2.0的支持度")]),t._v(" "),s("ul",[s("li",[t._v("网站传送门："),s("a",{attrs:{href:"https://cpprocks.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://cpprocks.com/"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711192153915.png",alt:"image-20210711192153915"}})]),t._v(" "),s("ul",[s("li",[t._v("观察支持2.0吗？用这个网站去查！感谢这些人整理！")])]),t._v(" "),s("h3",{attrs:{id:"_13-3-devc-上iso-c-11开关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-3-devc-上iso-c-11开关"}},[t._v("#")]),t._v(" 13.3.DevC++上"),s("code",[t._v("ISO C++11")]),t._v("开关")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711192232315.png",alt:"image-20210711192232315"}})]),t._v(" "),s("ul",[s("li",[t._v("我测试是选用的上面的这版本，"),s("code",[t._v("DevC++5.6")]),t._v("版本，搭载的是"),s("code",[t._v("GCC4.9.2")])]),t._v(" "),s("li",[t._v("虽然支持，但是记得要设定！不然，编译不够『"),s("strong",[t._v("图片上这样的，我还没有这么设计过，我倒是设置参数")]),t._v("』")])]),t._v(" "),s("h3",{attrs:{id:"_13-4-vs系列的看是否支持c-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-4-vs系列的看是否支持c-11"}},[t._v("#")]),t._v(" 13.4.VS系列的看是否支持"),s("code",[t._v("C++11")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711192346868.png",alt:"image-20210711192346868"}})]),t._v(" "),s("h2",{attrs:{id:"_14-三个主题c-11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-三个主题c-11"}},[t._v("#")]),t._v(" 14.三个主题C++11")]),t._v(" "),s("h3",{attrs:{id:"_14-1-主题1、variadic-templates-数量不定的模板参数『震撼弹』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-主题1、variadic-templates-数量不定的模板参数『震撼弹』"}},[t._v("#")]),t._v(" 14.1.主题1、"),s("code",[t._v("variadic templates")]),t._v("，"),s("font",{staticStyle:{background:"yellow"}},[t._v("数量不定的模板参数")]),t._v("『震撼弹』")],1),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("这个主题在C++11中，『侯捷』说它是“震撼弹”，详细讲了好久")])],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711192744743.png",alt:"image-20210711192744743"}})]),t._v(" "),s("ul",[s("li",[t._v("其中，这一点事最重要的")])]),t._v(" "),s("h3",{attrs:{id:"_14-2-语法糖的概念⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-2-语法糖的概念⭐️"}},[t._v("#")]),t._v(" 14.2.语法糖的概念⭐️")]),t._v(" "),s("p",[t._v("​\t"),s("font",{staticStyle:{background:"yellow"}},[t._v("另外2个是只是方便性，只是为你你使用方便。叫"),s("strong",[t._v("语法糖")])]),t._v("。")],1),t._v(" "),s("ul",[s("li",[t._v("补充："),s("strong",[t._v("维基百科")]),t._v("中『语法糖（"),s("code",[t._v("Syntactic sugar")]),t._v("）』是由英国"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%AE%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("计算机科学家"),s("OutboundLink")],1),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%BD%BC%E5%BE%97%C2%B7%E5%85%B0%E4%B8%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("彼得·兰丁"),s("OutboundLink")],1),t._v("发明的一个术语，指"),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("计算机语言"),s("OutboundLink")],1),t._v("中添加的某种语法，这种语法对语言的功能没有影响，但是更方便程序员使用。"),s("strong",[t._v("语法糖让程序更加简洁，有更高的可读性")])])]),t._v(" "),s("p",[t._v("variadic这个字眼呢，在过去我是查不到的『2016』，英文里面，没有这个字，这是生造出来的一个词，但是现在可能查得到了，因为英文也在不断增加新词语。vari开头的，就是可变，变化，它的意思就是模板参数可以变化。『回想一下，你对模板的理解！")]),t._v(" "),s("p",[s("code",[t._v("...")]),t._v("已经变成语言的一部分了！！！『所以我在写讲义的时候，要变得很小心。以前某个太多，我就...，现在变成这个了』")]),t._v(" "),s("ul",[s("li",[t._v("上面那个模板，告诉我们，我这个模板函数接受的参数呢，两组，其中第1组只有1个也就是T，第2组叫argus，个数多少个，不知道。『叫作包！！』")]),t._v(" "),s("li",[t._v("『注意，...出现的地方不一样哦！！自己去体会啊，也没有什么道理可言！语言语法就设计这样，这个没有什么道理可言。。』『注意使用："),s("code",[t._v("...")]),t._v("的三个位置！"),s("strong",[t._v("！各自体会，没有道理可言，语法就是这")]),t._v("样。。』"),s("strong",[t._v("还用了递归。")])]),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("『注意：包是可以"),s("strong",[t._v("0-多个")]),t._v("』『递归到最后，我们知道0个就就不OK，因此我们在最上面写了一个printf』")])],1),t._v(" "),s("li",[t._v("『再强调：后面那一包，你"),s("strong",[t._v("并不是必须要递归，你可以拿后面那一包来继承，组合23，发挥你的想象』")])])]),t._v(" "),s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("『"),s("strong",[t._v("我们在C++11那门课！！讲了6—7种方式")]),t._v("，看看一个和一包可以什么样的应用！！在这我只谈，语法的部分到这来！』")])],1),t._v(" "),s("ul",[s("li",[t._v("『非常好用的语法，可以用用』")]),t._v(" "),s("li",[t._v("『注意：可能你也会设计一个class或函数,也用到这种语法，"),s("font",{staticStyle:{background:"yellow"}},[t._v("在这个里面，如果你想知道，这个『一包是几个』：你可以用"),s("code",[t._v("sizeof...(args)")]),t._v("这个命令。你要把它称作操作符，称作函数也可以。反正是语言给的一个东西『这里，说错了吧，是操作符吧。。』")]),t._v(" "),s("ul",[s("li",[t._v("记得要加"),s("code",[t._v("...")])]),t._v(" "),s("li",[t._v("『『"),s("strong",[t._v("整个标准库的，整个用了这个语法，翻修了一遍。。很多地方用上，，其实我们很在乎：：在新的语言规格出来，有新的语法，新的标准库有没有用上这些新的语法呢？？如果用上了，那说服力才是更高")]),t._v("啊！！』")]),t._v(" "),s("li",[t._v("『所以，我们往往会去看看标准库有没有采用这个』")])])],1)]),t._v(" "),s("h3",{attrs:{id:"_14-3-主题2、auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-3-主题2、auto"}},[t._v("#")]),t._v(" 14.3.主题2、auto")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711193225642.png",alt:"image-20210711193225642"}})]),t._v(" "),s("ul",[s("li",[t._v("『过去太长了，现在用auto进行修改。』\n"),s("ul",[s("li",[t._v("『另外："),s("strong",[t._v("真是有的情况，类型真是写不出来，你的功力要非常非常高，你才写得出")]),t._v("。某个东西的类型，比如说2.0的"),s("code",[t._v("lambas表达式")]),t._v("，2333』")]),t._v(" "),s("li",[t._v("『不够，你使用auto的时候，一定要让编译器能够帮你推。所以你不能写成下面这样！！！打X的地方，意思是：当你这么写的时候，你并没有赋值给它，没有assign，编译器根本就不知道这个ide是什么，它也推导不出来，这样是不行的！』")])])]),t._v(" "),s("li",[t._v("极端的人，可能想，那所有的变量都用"),s("code",[t._v("lamba")]),t._v("就好了，2个不可取。即时，C++是一种帮你奠定基本素养的一个，所一，我们很强调变量的类型是什么。除非太长或不想写。全部用的话，除非你很清楚，作为一个初学者不好。")]),t._v(" "),s("li",[t._v("『第2点，你还真不是都能用auto？，你看像这个，你总不能在每次变量声明的时候就赋值把。当然，如果你是，那当我没说233")])]),t._v(" "),s("h3",{attrs:{id:"_14-4-主题3、新的for循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-4-主题3、新的for循环"}},[t._v("#")]),t._v(" 14.4.主题3、新的for循环")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711193353551.png",alt:"image-20210711193353551"}})]),t._v(" "),s("ul",[s("li",[t._v("for的语法的新形势。右手边是容器")])]),t._v(" "),s("h2",{attrs:{id:"_15-reference-『引用』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-reference-『引用』"}},[t._v("#")]),t._v(" 15.Reference 『引用』")]),t._v(" "),s("h3",{attrs:{id:"_15-1-面试-引用的本质⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-1-面试-引用的本质⭐️"}},[t._v("#")]),t._v(" 15.1.面试-引用的本质⭐️")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("其实要传递的信息—"),s("font",{staticStyle:{background:"yellow"}},[t._v("引用就是指针！")]),t._v("⭐️")],1)]),t._v(" "),s("li",[s("p",[t._v("『啊，你怎么能讲这种话呢？引用就是指针。这2个都是一样的话，那为什么要2个。")])]),t._v(" "),s("li",[s("p",[t._v("没错，它只是表示的"),s("strong",[t._v("形式不同，其实所有的编译器。看待引用，怎样去实现出引用，它都是用指针去做的！")]),t._v("『关于，这个事情，我又设计了2张PPT，把这个讲得更加清楚一些！！』")])]),t._v(" "),s("li",[s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("语法糖：只是包一个糖衣，让你方便写代码。")])],1)]),t._v(" "),s("li",[s("p",[t._v("上面是从内存的角度去看，看什么呢？")])]),t._v(" "),s("li",[s("p",[t._v("我们的变量有3种，一种是值value本身，一种是它的指针，一种是引用。")])]),t._v(" "),s("li",[s("p",[t._v("我要从内存的角度去探讨这3个东西。")])]),t._v(" "),s("li",[s("p",[t._v("『地址就是指针的一种形式，指针就是一种地址形式』")])]),t._v(" "),s("li",[s("p",[t._v("『关于"),s("code",[t._v("*")]),t._v("靠近p还是int，有2派人马。都可以！！但是我喜欢这种写法。』")])]),t._v(" "),s("li",[s("p",[t._v("『第3行。")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711194307950.png",alt:"image-20210711194307950"}})]),t._v(" "),s("h3",{attrs:{id:"_15-2-『sizeof-引用-编译器制造的假象』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-2-『sizeof-引用-编译器制造的假象』⭐️"}},[t._v("#")]),t._v(" 15.2.『sizeof(引用)-"),s("code",[t._v("编译器制造的假象")]),t._v("』⭐️")]),t._v(" "),s("ul",[s("li",[t._v("或许可以用汇编解释？")])]),t._v(" "),s("p",[t._v("引用的特点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("1.从"),s("strong",[t._v("逻辑的角度")]),t._v("，"),s("code",[t._v("reference")]),t._v("的意义是 『Java里面所有变量都是reference，不必特别写』")])]),t._v(" "),s("li",[s("p",[t._v("2.reference是从一而终！")])]),t._v(" "),s("li",[s("p",[t._v("3."),s("font",{staticStyle:{background:"yellow"}},[t._v("易错："),s("strong",[t._v("对象")]),t._v("和其引用『面试考点』")])],1),t._v(" "),s("ul",[s("li",[t._v("（1）"),s("font",{staticStyle:{background:"yellow"}},[t._v("大小相同")]),t._v("『这些全都是假象！』")],1),t._v(" "),s("li",[t._v("（2）"),s("font",{staticStyle:{background:"yellow"}},[t._v("地址也相同")]),t._v("『这些全都是假象！』\n"),s("ul",[s("li",[t._v("『原因：p应该多大，应该是指针大小，r多大呢？\n那要看它代表的是什么东西，他代表的东西是多大，就代表它是多大。因为它是一体的面『注意这个说法！』")]),t._v(" "),s("li",[t._v("『所以，"),s("font",{staticStyle:{background:"yellow"}},[t._v("即使引用就是指针，大小应该是指针大小，\n但是——编译器必须制造一种假象！这个假象是好的！")])],1),t._v(" "),s("li",[t._v("什么假象呢？r代表x，所以，x如果是100个字节，r就必须是100个字节，而且x的地址在哪，p的地址就应该在哪。因为它代表它！")])])],1)])]),t._v(" "),s("li",[s("p",[t._v("测试代码如下：GNUC++，64位的平台")])])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("demo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\tdemo "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("one")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tdemo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" two"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tdemo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof（one）="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof（two）="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("two"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sizeof（p）="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address（one）="')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("one "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address（two）="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("two "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address（p）="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//测试结果如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nsizeof (one） =12\nsizeof (two） =12\t//注意这里：编译器制造的假象\nsizeof (p）=8\naddress (one）=Ox7ffd27396bco\naddress (two）=Ox7ffd27396bco\t//注意这里：编译器制造的假象\naddress (p）=Ox7ffd27396bb8\n*/")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711194643886.png",alt:"image-20210711194643886"}})]),t._v(" "),s("h3",{attrs:{id:"_15-3-『面试-个人补充』待考察"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-3-『面试-个人补充』待考察"}},[t._v("#")]),t._v(" 15.3.『面试-个人补充』待考察")]),t._v(" "),s("ul",[s("li",[t._v("指针能否为空，引用能否为空？")]),t._v(" "),s("li",[t._v("指针可以为空，"),s("strong",[t._v("引用必须是有实体的，不能存在空引用")])])]),t._v(" "),s("blockquote",[s("p",[t._v("参考"),s("a",{attrs:{href:"https://blog.csdn.net/luansxx/article/details/10134139",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客"),s("OutboundLink")],1),t._v("：")])]),t._v(" "),s("h3",{attrs:{id:"_15-4-传引用和传value是不能并存的『函数签名』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-4-传引用和传value是不能并存的『函数签名』⭐️"}},[t._v("#")]),t._v(" 15.4."),s("code",[t._v("传引用")]),t._v("和"),s("code",[t._v("传value")]),t._v("是不能并存的『函数签名』⭐️")]),t._v(" "),s("ul",[s("li",[t._v("看这个例子：有句话说得好，引用就是一种漂亮的指针。"),s("strong",[t._v("引用在写代码的时候，其实我们很少说它的类型是个引用。")])]),t._v(" "),s("li",[s("strong",[t._v("引用，多半用到参数传递上！")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711195024433.png",alt:"image-20210711195024433"}})]),t._v(" "),s("ul",[s("li",[t._v("从上到下：上面3个声明，我采用了3个参数的传递方法：\n"),s("ul",[s("li",[s("code",[t._v("pass by value")])]),t._v(" "),s("li",[s("code",[t._v("pass by pointer")])]),t._v(" "),s("li",[s("code",[t._v("pass by reference")])])])]),t._v(" "),s("li",[t._v("当你这样写的时候，后头的写法要使用这个参数，写法就不一样了！")]),t._v(" "),s("li",[t._v("『我们说引用和传值，这2种写法一样，是很好的！也就表示，传进来的这个，都不影响后面的事情，这是很棒的事情』")]),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("『注意：signature』注意：传引用和传value是不能并存的，因为他们的"),s("code",[t._v("签名（signature）")]),t._v("是相同的！『"),s("code",[t._v("就是括号部分，签名的部分是不含return type的』")])])],1),t._v(" "),s("li",[t._v("『这两个签名，为什么C++说相同呢？你可以想想：如果这2个被视为不同话，那就麻烦大了，和另外一件事情产生矛盾！编译器，在看到2和3那种类型的时候，编译器就不能判断你想调用谁？所以C++语法的创造者，发现这矛盾。二义和歧义")])]),t._v(" "),s("blockquote",[s("p",[t._v("whoway对『函数签名』的总结：")])]),t._v(" "),s("ul",[s("li",[t._v("1、函数签名是"),s("font",{staticStyle:{background:"yellow"}},[t._v("从"),s("code",[t._v("函数名")]),t._v("开始到"),s("code",[t._v("{之前")])]),t._v("『注意"),s("code",[t._v("{")]),t._v("前这个词汇的准确性』")],1),t._v(" "),s("li",[t._v("2、显然，函数签名包括()和{}之间的"),s("code",[t._v("const")])]),t._v(" "),s("li",[t._v("3、"),s("strong",[t._v("传引用和传value是不能并存的")]),t._v("，因为他们的"),s("code",[t._v("签名（signature）")]),t._v("是相同的！\n"),s("ul",[s("li",[t._v("原因：编译器，在看到2和3那种类型的时候，编译器就不能判断你想调用谁？ 发生二义性！")])])])]),t._v(" "),s("h3",{attrs:{id:"_15-5-『const和签名』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-5-『const和签名』"}},[t._v("#")]),t._v(" 15.5.『const和签名』")]),t._v(" "),s("ul",[s("li",[t._v("注意：灰色可以加const")]),t._v(" "),s("li",[t._v("const是函数前面的一部分。\n"),s("ul",[s("li",[t._v("原因：const的函数做不改变的，非const的做改变的")])])])]),t._v(" "),s("h2",{attrs:{id:"✅对象模型-object-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅对象模型-object-model"}},[t._v("#")]),t._v(" ✅对象模型（Object Model）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711195607636.png",alt:"image-20210711195607636"}})]),t._v(" "),s("p",[t._v("​\t下面我们要谈的：是"),s("font",{staticStyle:{background:"yellow"}},[t._v("对象模型，要谈论的是一些，从"),s("strong",[t._v("代码的层次上看不出来的一些底层的东西")]),t._v("！")])],1),t._v(" "),s("p",[t._v("​\t要谈的是一些底层的一些看不到的东西，但是这个至关重要！『对于你了解整个面向对象的这个C++的事情』")]),t._v(" "),s("h2",{attrs:{id:"_16-复合-继承关系下的构造和析构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-复合-继承关系下的构造和析构"}},[t._v("#")]),t._v(" 16."),s("code",[t._v("复合&继承")]),t._v("关系下的构造和析构")]),t._v(" "),s("h3",{attrs:{id:"_16-1-复合关系下的『构造和析构』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-1-复合关系下的『构造和析构』"}},[t._v("#")]),t._v(" 16.1.复合关系下的『构造和析构』")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711200028958.png",alt:"image-20210711200028958"}})]),t._v(" "),s("p",[t._v("复合或者叫组合关系下：")]),t._v(" "),s("ul",[s("li",[t._v("我拥有你。")]),t._v(" "),s("li",[t._v("要创建一个我的时候，"),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("当我拥有你的时候，你就是内部")]),t._v("。当然是从内部到外部！")])],1)]),t._v(" "),s("p",[t._v("特别是红色部分！")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("father")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//隐式的！")]),t._v("\nchild"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//隐式的！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h3",{attrs:{id:"_16-2-继承关系下的构造和析构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-2-继承关系下的构造和析构"}},[t._v("#")]),t._v(" 16.2.继承关系下的构造和析构")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711200159555.png",alt:"image-20210711200159555"}})]),t._v(" "),s("p",[t._v("3种类和类的关系：")]),t._v(" "),s("ul",[s("li",[t._v("继承")]),t._v(" "),s("li",[t._v("组合或者叫复合的关系")]),t._v(" "),s("li",[t._v("复合，有一个比较微弱的关系，叫作"),s("code",[t._v("delguation")]),t._v("，我只是有根指针指向，我不是真的拥有你")])]),t._v(" "),s("p",[t._v("『下面讲得很不错！』")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("构造由内而外")]),t._v("："),s("font",{staticStyle:{background:"yellow"}},[t._v("一个东西如果有3层，那么当然是"),s("strong",[t._v("由内而外")]),t._v("，这样"),s("strong",[t._v("才最扎实")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("红色部分，其实就是编译器加在你身上的。"),s("strong",[t._v("编译器会为你加代码哦！使得你的构造函数在执行之前，会先调用父类的默认构造函数。『记住记住记住！！』")])])])],1),t._v(" "),s("li",[s("strong",[t._v("析构顺序")]),t._v("：你要把一个东西剥离而来，剥皮")])]),t._v(" "),s("h3",{attrs:{id:"_16-3-继承和组合关系下的『构造和析构』-面试考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-3-继承和组合关系下的『构造和析构』-面试考"}},[t._v("#")]),t._v(" 16.3.继承和组合关系下的『构造和析构』（"),s("font",{staticStyle:{background:"yellow"}},[t._v("面试考！")]),t._v("）")],1),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711201610071.png",alt:"image-20210711201610071"}})]),t._v(" "),s("ul",[s("li",[t._v("前面2个事呢，是面向对象的本职学能。是面向对象一定要有的基础。。")]),t._v(" "),s("li",[t._v("『我们这个呢，是把继承和组合放在一起！』")])]),t._v(" "),s("h3",{attrs:{id:"_16-4-c-规格书没有说的『坑』⭐️✅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-4-c-规格书没有说的『坑』⭐️✅"}},[t._v("#")]),t._v(" 16.4.C++规格书没有说的『坑』⭐️✅")]),t._v(" "),s("p",[t._v("构造顺序：")]),t._v(" "),s("ul",[s("li",[t._v("1、关于先放Base还是被组合的？？"),s("font",{staticStyle:{background:"yellow"}},[t._v("其实C++语言，"),s("strong",[t._v("我不记得，在它的规格书里面有谈论这个事情")]),t._v("！")])],1),t._v(" "),s("li",[t._v("所以，"),s("font",{staticStyle:{background:"yellow"}},[t._v("以我"),s("strong",[t._v("目前的认知，这是属于实现的部分")]),t._v("，也许在不同编译器上，对这个事情，它的次序不太一样！")]),t._v("『而这个次序不同，并不会影响C++语法的一致性！并不会造成矛盾。所以『应该是属于实现手法的不同而已！！』")],1),t._v(" "),s("li",[t._v("2、我们继续分析。关于谁先谁后，我不敢确定是语言规则上的设定。\n"),s("ul",[s("li",[t._v("但是我可以告诉你，『**在我手上用的编译器！』所看出来的结果在上面！！『黄色部分』这是观察出来的结果！**如果把这个表现出来是红色")])])])]),t._v(" "),s("h3",{attrs:{id:"面试考-核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试考-核心"}},[t._v("#")]),t._v(" 面试考（核心）")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("对象在创建时构造函数的调用顺序\n调用⭐️父类的构造函数；\n调用⭐️成员变量⭐️的构造函数；\n调用⭐️类自身的构造函数\n如果通过“父类"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("函数名”来在子类中访问父类的函数，此时不论该函数是否为虚函数，都会直接调用父类对应的函数\n\n\n子类对象析构时的顺序\n析构函数的调用函数与构造函数相反\n执行自身的析构函数；\n执行成员变量的析构函数；\n执行父类的析构函数\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"_17-关于vptr和vtbl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-关于vptr和vtbl"}},[t._v("#")]),t._v(" 17.关于"),s("code",[t._v("vptr")]),t._v("和"),s("code",[t._v("vtbl")])]),t._v(" "),s("p",[t._v("​\t现在我们来看看，更加底层的东西！在整个领域里面，赫赫有名的2个名词："),s("code",[t._v("虚指针和虚表")]),t._v("，这个完全是代码层次看不到的东西！只能从汇编指令层次看到（whoway备注）")]),t._v(" "),s("h3",{attrs:{id:"_17-1-虚指针和虚表的『核心图』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-1-虚指针和虚表的『核心图』⭐️"}},[t._v("#")]),t._v(" 17.1.虚指针和虚表的『核心图』⭐️")]),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("自己给自己补充：以前C语言中函数被编译之后的机器代码放在哪？")])],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711202412877.png",alt:"image-20210711202412877"}})]),t._v(" "),s("ul",[s("li",[t._v("当一个类有虚函数的时候，虚函数是面向对象里面最重要的一部分哦。如果只是在谈继承，而没有虚函数，其实用途不太大！当然有用途。只有类里面有1或1W个虚函数，这个对象里面就会多一根指针。")])]),t._v(" "),s("blockquote",[s("p",[t._v("关于继承的思考：")])]),t._v(" "),s("ul",[s("li",[t._v("注意：什么叫继承，大家都会去从内存的角度去向，哦，继承就是去把数据全部继承下来，这个话没有错误。但还会把函数给继承下来！那函数多大？不可解！！没有人能够回答你，一个函数占用内存多大！\n"),s("ul",[s("li",[t._v("所以，"),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("所谓函数继承，是继承函数的调用权！不是继承它的内存大小")]),t._v("！")])],1)])]),t._v(" "),s("li",[t._v("『那么一般的函数和虚函数，它在内存里面长什么样子呢？给的例子A、B、C")]),t._v(" "),s("li",[t._v("『注意：B已经继承A的两个虚函数了，推翻其中一个！我会推翻就是**改写！『override』**那么第2个呢，就是继承下来，没有改写。另外func1和func2这两个函数虽然有和A中同名，但是能，这两个是A的函数，下面的是B的函数，这两个函数同名，其实一点关系都没有。『这个当然不太理想啊，我们不应该子类写一个函数和父类同名。")]),t._v(" "),s("li",[t._v("『所以，现在A、B、C总共有多少个函数呢？8个、这个图标牛皮』『非虚函数4个，虚函数4个』")]),t._v(" "),s("li",[t._v("『这些函数，它是代码，当然是占内存的一块，多大块，无所谓』")]),t._v(" "),s("li",[t._v("『注意：B基础了A的虚函数1，但是它自己同时也重写了』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711204247841.png",alt:"image-20210711204247841"}})]),t._v(" "),s("h3",{attrs:{id:"_17-2-关键点-观察如何找虚指针-⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-2-关键点-观察如何找虚指针-⭐️"}},[t._v("#")]),t._v(" 17.2.关键点：观察如何找虚指针！⭐️")]),t._v(" "),s("p",[t._v("​\t现在，我们假设有一个指针p指向对象C，你看图『通过这个指针，要调用v1，编译器看到一个调用的动作，在过去在C语言的时代！：它一定是把它编译成一个特定的语法！！call XXX，最后ret回来，这一种叫作『静"),s("strong",[t._v("态绑定")]),t._v("』』")]),t._v(" "),s("p",[t._v("​\t『可是现在，如果通过指针去"),s("strong",[t._v("调用虚函数")]),t._v("的话，编译器就知道。不能做静态。。因为这就是面向对象设计者的关键点。。它不做静态绑定，它做"),s("strong",[t._v("动态绑定")]),t._v("。』")]),t._v(" "),s("ul",[s("li",[t._v("『动态绑定的逻辑意义就是这样：通过这个指针，找到vptr，然后找到vtbl，然后从里头找到它看看他到底指向哪个函数，走到哪条路线』"),s("font",{staticStyle:{background:"yellow"}},[t._v("关键点**：指针p是如何找到vptr**的，这个就能知道指针类型和那个指针真正指向的位置啥的『2021年whoway自己的思考』")])],1),t._v(" "),s("li",[t._v("『这条路线走过来，解析成C的形式下下面的样子！！』『这个路线是非常下的！！！』")]),t._v(" "),s("li",[t._v("『有时候，我也顺手写过一些东西，可能是错误的，所以要沿着，下面是验证了的』\n"),s("code",[t._v("( *(p->vptr)[n] ) (p);")])])]),t._v(" "),s("h3",{attrs:{id:"_17-3-『面试常考-动态绑定3条件』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-3-『面试常考-动态绑定3条件』⭐️"}},[t._v("#")]),t._v(" 17.3.『面试常考-"),s("code",[t._v("动态绑定3条件")]),t._v("』⭐️")]),t._v(" "),s("p",[t._v("C++编译器看到一个"),s("strong",[t._v("函数调用")]),t._v("，他有2个考量，静态还是动态绑定：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("静态绑定")]),t._v("的被编译成："),s("code",[t._v("call")])]),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("动态绑定")]),t._v("：符合某些条件就会做动态绑定，"),s("strong",[t._v("3个条件")])]),t._v(" "),s("ul",[s("li",[t._v("1、通过"),s("strong",[t._v("指针来调用『注意，引用显然也是")]),t._v("的，因为底层也是指针』")]),t._v(" "),s("li",[t._v("2、这个指针是"),s("strong",[t._v("向上转型")]),s("code",[t._v("up cast")]),t._v("了。『比如，派生类赋值给基类指针，基类指针调用』")]),t._v(" "),s("li",[t._v("3、"),s("strong",[t._v("调用虚函数")])])])],1),t._v(" "),s("li",[t._v("只要符合这3个条件，编译器就把这个调用动作，编译成这种样子『"),s("strong",[t._v("这条路线，我们就把它叫做：虚机制")]),t._v("，"),s("code",[t._v("virtual metakll")]),t._v("』\n"),s("ul",[s("li",[t._v("因此，这样调用的是什么函数呢？不一定。"),s("font",{staticStyle:{background:"yellow"}},[t._v("要看P指的是什么？")]),t._v("所以才叫动态绑定。『而这种虚函数的这种用法，我们叫多态。。』")],1)])])]),t._v(" "),s("p",[t._v("​\t虚函数、动态绑定、走的是虚指针+虚函数表，其实这些都是同一件事情。你把这些事情都弄得非常清楚，对于整个面向对象，就是了然于胸。")]),t._v(" "),s("h2",{attrs:{id:"_18-❓-难点⭐️-关于this指针"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-❓-难点⭐️-关于this指针"}},[t._v("#")]),t._v(" 18.❓（难点⭐️）关于"),s("code",[t._v("this")]),t._v("指针")]),t._v(" "),s("p",[t._v("『另一个对付虚机制的法宝』")]),t._v(" "),s("h4",{attrs:{id:"this指针-分析⭐️继承体系⭐️的金钥匙』⭐️"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this指针-分析⭐️继承体系⭐️的金钥匙』⭐️"}},[t._v("#")]),t._v(" "),s("code",[t._v("this指针")]),t._v("—"),s("code",[t._v("分析⭐️继承体系⭐️的金钥匙")]),t._v("』⭐️")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711204947708.png",alt:"image-20210711204947708"}})]),t._v(" "),s("p",[t._v("​\tthis指针, 『简单来说，"),s("font",{staticStyle:{background:"yellow"}},[t._v("你通过一个对象来调用一个函数，那个对象的地址，就是this指针。（这句话请深刻理解）")]),t._v("』")],1),t._v(" "),s("p",[t._v("​\t但是，我特别要强调，你对this指针这个概念要很清晰。"),s("strong",[t._v("因为你在分析一个继承体系的时候，或者是你自己在设计继承体系那个调用的时候。你如果没有很清楚this，你会迷失在那个丛林里面。谁调用谁就搞不清楚『确实！！』")])]),t._v(" "),s("p",[t._v("​")]),t._v(" "),s("p",[t._v("​\t借助这个ppt解释this，"),s("strong",[t._v("首先，这种用法是叫作"),s("font",{staticStyle:{background:"yellow"}},[t._v("模板方法")]),t._v("，是一种"),s("font",{staticStyle:{background:"yellow"}},[t._v("设计模式")]),t._v("的名称")],1),t._v("，现在不去谈论设计模式，我们就专注在对虚函数的用法上。』")]),t._v(" "),s("p",[t._v("『不够，我自己的归纳：虚函数在使用的时候：")]),t._v(" "),s("ul",[s("li",[t._v("1、一个是多态")]),t._v(" "),s("li",[t._v("2、一个是模板方法 这种形式的用法")])]),t._v(" "),s("p",[t._v("​\t这个ppt，带你"),s("strong",[t._v("感受一下，面向对象使用虚函数的好处")]),t._v("。")]),t._v(" "),s("p",[t._v("​\t但是为什么你这么写，会有这样的过程呢（就是这个线）？为什么我们这样写，最后我们的代码是按照线这样跑的！")]),t._v(" "),s("p",[t._v("​\t那么为什么他会这样跑呢？")]),t._v(" "),s("p",[t._v("这样跑是好的，是我们想要的")]),t._v(" "),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("解析这个「场景！」")])])],1)]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CDocument")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFileOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//... //⭐️A部门⭐️写了1些常规性的动作")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serialise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这是⭐️常规性的动作中有一些非常规性的动作！就是他不知道怎么做⭐️")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//⭐️部门A写的这些要给B部门用⭐️的，但是关键的部分Serialise他写不出来，他要给到B才能写得出来")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用面向对象的语言有这么一个工具，就是把这个函数设置为1个虚函数，就告诉子类啊，这个函数我不会写，这个需要你写一下，其他的我帮你写好了！⭐️（核心）⭐️")]),t._v("\n    \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serialise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CMyDoc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CDocument")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serialise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  CmyDoc myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFileOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call ⭐️CDocument::OpenFileOpen( ⭐️&myDoc );")]),t._v("\n  \t\t\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//⭐️核心！！！这个&myDoc就是this！⭐️")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br")])]),s("p",[t._v("​\t『子类的对象调用父类的函数，当然可以，你可不可以用你爸爸的钱呢，可以啊，这个例子不知道好不好。『"),s("strong",[t._v("谁调用我，谁就是那个this")]),t._v("』")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("this")]),t._v("是个关键字也是一个观念，this是根指针，this有时候也可以说："),s("code",[t._v("this obeject")]),t._v("，意思就是说this所指向的object。")]),t._v(" "),s("li",[t._v("这就必须请出汇编代码了。")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CDocument")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFileOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//... //⭐️A部门⭐️写了1些常规性的动作")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Open"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serialise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这是⭐️常规性的动作中有一些非常规性的动作！就是他不知道怎么做⭐️")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//⭐️部门A写的这些要给B部门用⭐️的，但是关键的部分Serialise他写不出来，他要给到B才能写得出来")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用面向对象的语言有这么一个工具，就是把这个函数设置为1个虚函数，就告诉子类啊，这个函数我不会写，这个需要你写一下，其他的我帮你写好了！⭐️（核心）⭐️")]),t._v("\n    \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serialise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CMyDoc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CDocument")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serialise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"B"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  CMyDoc myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFileOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call ⭐️CDocument::OpenFileOpen( ⭐️&myDoc );")]),t._v("\n  \t\t\t\t\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//⭐️核心！！！这个&myDoc就是this！⭐️")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n➜  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n➜  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out \nOpen\nB\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br")])]),s("h4",{attrs:{id:"在cpp里面-所有的成员函数-一定有一个隐藏的this参数-this传到里面的时候-编译器都是看做this-成员函数的方式来调用-深刻理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在cpp里面-所有的成员函数-一定有一个隐藏的this参数-this传到里面的时候-编译器都是看做this-成员函数的方式来调用-深刻理解"}},[t._v("#")]),t._v(" "),s("font",{staticStyle:{background:"yellow"}},[t._v("在cpp里面，所有的成员函数！一定有一个隐藏的this参数，this传到里面的时候，编译器都是看做this->成员函数的方式来调用！（深刻理解）")])],1),t._v(" "),s("ul",[s("li",[t._v("我的深刻理解")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("A a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n等价call "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  a的类型是A！\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("9分")]),t._v(" "),s("h4",{attrs:{id:"whoway疑问-那如果指针调用呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#whoway疑问-那如果指针调用呢"}},[t._v("#")]),t._v(" whoway疑问，那如果指针调用呢？")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  CMyDoc myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  CDocument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//myDoc的类型还是B，只是指针指向他，然后指针的步长不同罢了，")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFileOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  \t\t\t\t\t\t\t\t\t\t\t\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n➜  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n➜  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out \nOpen\nB\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("CDocument myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nCMyDoc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CMyDoc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myDoc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//强制类型转换了！不然编译报错，把&myDoc的地址放那，但是其实myDoc的类型还是A，所以后续还是A")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("OpenFileOpen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n➜  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cpp\n➜  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out \nOpen\nA\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h3",{attrs:{id:"✅观察this指针✅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅观察this指针✅"}},[t._v("#")]),t._v(" ✅观察this指针✅")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("first")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first virtual"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("second")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("first")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second virtual"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tsecond temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ttemp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//first::demo(&demo)✅✅但是，为什么总感觉还不够清晰？✅")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//cout<<"demo"<<endl;')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//然后this->test()")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//&demo ->vptr->test()✅")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br")])]),s("ul",[s("li",[t._v("输出结果是")])]),t._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("➜  github ./a.out\ndemo\nsecond virtual\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("工具：https://cppinsights.io/")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("first")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意！⚠️是this指针")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first virtual"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// inline constexpr first() noexcept = default;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("second")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("first")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"second virtual"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// inline constexpr second() noexcept = default;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  second temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("second")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br")])]),s("h2",{attrs:{id:"_19-汇编层面-动态绑定和静态绑定区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-汇编层面-动态绑定和静态绑定区别"}},[t._v("#")]),t._v(" 19.汇编层面-动态绑定和静态绑定区别")]),t._v(" "),s("p",[t._v("关于"),s("code",[t._v("Dynamic Binding")]),t._v("『动态绑定』汇编的区别")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711205224008.png",alt:"image-20210711205224008"}})]),t._v(" "),s("p",[t._v("我们能够看懂汇编的人越来越少了。经过我这么解释你大略懂就行。不必真的懂。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711205256975.png",alt:"image-20210711205256975"}})]),t._v(" "),s("p",[s("code",[t._v("紫色123行")]),t._v("，是"),s("code",[t._v("向上转型")]),t._v("，所以动态绑定！\t『最重要的是哪个call，但是这个call不再是一个固定的地址！请对比上一行，最后的静态绑定。『我们现在通过这个，告诉我们确实是那样去调用那里的！』")]),t._v(" "),s("blockquote",[s("p",[t._v("这个课程到底结束")])]),t._v(" "),s("h2",{attrs:{id:"✅『补充主题const』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#✅『补充主题const』"}},[t._v("#")]),t._v(" ✅『补充主题"),s("code",[t._v("const")]),t._v("』")]),t._v(" "),s("blockquote",[s("p",[t._v("课程结束了，又回来，各位有点奇怪：")])]),t._v(" "),s("ul",[s("li",[t._v("在结束之后，我感觉有2个主题还值得和大家提一下！！")]),t._v(" "),s("li",[t._v("1、"),s("code",[t._v("const")])]),t._v(" "),s("li",[t._v("2、动态分配，和"),s("code",[t._v("new")]),t._v("和d"),s("code",[t._v("elete")]),t._v("有关，『其实这2个主题在Part1有提过，这里还要再强调一下！』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711205506617.png",alt:"image-20210711205506617"}})]),t._v(" "),s("blockquote",[s("p",[t._v("疑问？下面这句话，到底说明啥？？")])]),t._v(" "),s("h3",{attrs:{id:"temp-1-『const不能放置的-』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#temp-1-『const不能放置的-』"}},[t._v("#")]),t._v(" temp.1.『const不能放置的？』")]),t._v(" "),s("ul",[s("li",[t._v("注意：const放置的位置："),s("font",{staticStyle:{background:"yellow"}},[s("strong",[t._v("const是只能放在成员函数的后头的，一般的全局函数是不能在这个位置放置const的，不可以！！")])]),t._v("『思考：或许static也不OK』")],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711205719915.png",alt:"image-20210711205719915"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("更详细的来说：")])]),t._v(" "),s("li",[s("p",[t._v("一般来说，成员函数是要去操作Data，")]),t._v(" "),s("ul",[s("li",[t._v("1、但是const告诉编译器：我操作可以，但是我可能只是读，我不会去改，这就是我的意图，我要告诉编译器。然后，请编译器帮我把关，看看我有没有违反你的意图。所以，我们现在要用这个表的这种交互关系。为大家阐明交代，交代什么事情呢？")]),t._v(" "),s("li",[t._v("2、就是对象调用函数的时候，，对象可能是const也可能不是const!!")]),t._v(" "),s("li",[t._v("3、之间的交互，组成了这4种。")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("『C++中const的组合』")])]),t._v(" "),s("ul",[s("li",[t._v("C++里面的很多的规则，其实都是，只要理解它内部的原理，都不用背！但是在不理解这些原理前，你可能要背，背景的又容易忘记，不知道真正的意义是什么？』")]),t._v(" "),s("li",[t._v("『就像Part谈论过的"),s("code",[t._v("static")]),t._v(",要不要加，加了之后，谁可以调用谁？，谁不能调用谁，这些背后都有一些比较底层的基础意义。。』")])]),t._v(" "),s("h3",{attrs:{id:"temp-2-『非常易错的结论』-写时复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#temp-2-『非常易错的结论』-写时复制"}},[t._v("#")]),t._v(" temp.2.『非常易错的结论』+"),s("code",[t._v("写时复制")])]),t._v(" "),s("ul",[s("li",[t._v("打X的那个很常见吗啊？我们看代码")]),t._v(" "),s("li",[t._v("这也告诉我们，记得该加const就一定要加const")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("右边的节选代码：\n    为什么右边那么设计？？\n    我们使用的标准库的设计方式是：引用计数。\n    总只是可以共享，这"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("个字符串其实是可以共享。\n    这个共享的内容是属于设计模式的一部分，我们现在不去谈它。。\n    \n    万一其中一个人变卦了，要改内容，其他人就会受影响。\n    \n    当然，如果没有共享，那么就必须做Copy on Write的动作。\n    \n    而，如果常量字符串，那就不必要改内容。。所以就不必要拷贝。\n    必须区分开来，我们就才能够写出两个版本。\n    \n    但是这样写完之后，有一个破绽！！！\n    就是表格中，如果非consr对象也可以调用"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("成员函数、、\n    这样我就不知道调用的哪一种。。这样的话\n    \n『易错的』\n    在『表格中规则』之外，C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("又有一条规则，就是上面灰色的！！\n    当一个成员函数的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("和非"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("成员版本同时存在，，巴拉巴拉。。『难点，易错。』\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("ul",[s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("标准库是我们学习的一个很好的老师")]),t._v("，如果你打开标准库。其实每个人手上都有头文件。")],1),t._v(" "),s("li",[t._v("其实每个class有的是const有的不是const，菜鸟级的都没有加const")])]),t._v(" "),s("h2",{attrs:{id:"_20-关于new-delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-关于new-delete"}},[t._v("#")]),t._v(" 20.关于New,Delete")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080520628.png",alt:"image-20210712080520628"}})]),t._v(" "),s("ul",[s("li",[t._v("其实new的分解动作，这边delete的分解动作。其实谈得很深入了。")])]),t._v(" "),s("h3",{attrs:{id:"_20-1-『new和delete一系列混淆概念』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-1-『new和delete一系列混淆概念』"}},[t._v("#")]),t._v(" 20.1.『"),s("code",[t._v("new")]),t._v("和"),s("code",[t._v("delete")]),t._v("一系列混淆概念』")]),t._v(" "),s("ul",[s("li",[t._v("1、上面的"),s("code",[t._v("new和delete")]),t._v("都是叫："),s("code",[t._v("expression new")]),t._v("表达式！")]),t._v(" "),s("li",[s("font",{staticStyle:{background:"yellow"}},[t._v("『我们使用者直接在用的叫作expression表达式，"),s("strong",[t._v("表达式的行为是不能变的，是不能重载的")]),t._v("！")]),t._v("『『这句话表明了，侯捷为啥那么分类，这下，我大概懂它的意思了，虽然，我还是觉得"),s("code",[t._v("new")]),t._v("和"),s("code",[t._v("operator new")]),t._v("就是一个东西，毕竟《C++ Primer》中都说new是运算符。")],1),t._v(" "),s("li",[t._v("也就是new分解为"),s("code",[t._v("1-3")]),t._v("，delete分解为"),s("code",[t._v("1-2")]),t._v("，，但是分解下去的那个函数可以重载！！『核心话语』』，至于，new表达式，它分解进去的叫作："),s("code",[t._v("operator new")])]),t._v(" "),s("li",[t._v("3、而这些"),s("code",[t._v("operator new")]),t._v("啥的，底层其实是调用malloc，而malloc的区块分配到的区块长什么样？告诉在这里『右边，当然这里在我的另外课程内存管理谈论得更深入，更深啊。』")])]),t._v(" "),s("h3",{attrs:{id:"_20-2-『侯捷的失误』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-2-『侯捷的失误』"}},[t._v("#")]),t._v(" 20.2.『"),s("code",[t._v("侯捷的失误")]),t._v("』")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、我的思考：『我们记忆过C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("中不能重载的，其中没有"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("和"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("，那么应该是能重载的，但是侯捷的这里的分类方式，好像我们就不能那么记忆？？\n    所以，我的看法是，侯捷这个地方讲错了！！！包括内存管理中说"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("不能重载。。。但是无伤大雅，瑕不掩瑜。。。\n    但是，好像从重载函数opeartoe "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("和"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("这"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("个角度来看。好像又成立。。\n    不对，反驳自己，侯捷这里就是错了，，因为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 在《C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" primer》这本书中就是一种运算符。』\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("5、另外："),s("code",[t._v("中括号")]),t._v("的new和delete，术语叫做"),s("code",[t._v("array new")]),t._v("和"),s("code",[t._v("array delete")])]),t._v(" "),s("li",[t._v("6、先前没有告诉你，你的class其实可以重载这些函数。『有什么用呢？可能拿来做内存管理，做一些内存池的设计。内存池是个大的话题，，该怎么设计，不是这门课程要讲的。但是这边属于C++语言的部分，我要告诉你，这些函数的重载的形式』")])]),t._v(" "),s("h2",{attrs:{id:"_21-operator-new-operator-delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-operator-new-operator-delete"}},[t._v("#")]),t._v(" 21."),s("code",[t._v("operator new")]),t._v("，"),s("code",[t._v("operator delete")])]),t._v(" "),s("ul",[s("li",[t._v("重载全局的new，"),s("code",[t._v("::operator new")])])]),t._v(" "),s("p",[t._v("（0）参考资料")]),t._v(" "),s("blockquote",[s("p",[t._v("运算符new和array new的引出")])]),t._v(" "),s("ul",[s("li",[t._v("注意：C++中"),s("code",[t._v("new")]),t._v("和"),s("code",[t._v("delete")]),t._v("和"),s("code",[t._v("new []")]),t._v("和"),s("code",[t._v("delete []")]),t._v("都是运算符")]),t._v(" "),s("li",[t._v("运算符"),s("code",[t._v("new")]),t._v("和"),s("code",[t._v("delete")]),t._v("是动态分配内存和动态释放内存")]),t._v(" "),s("li",[t._v("运算符"),s("code",[t._v("new []")]),t._v("和"),s("code",[t._v("delete []")]),t._v("是动态分配数组和动态释放数组")]),t._v(" "),s("li",[t._v("然后，这几个运算符都可以重载啊")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("operator new")]),t._v("的引出")])]),t._v(" "),s("blockquote",[s("p",[t._v("注意『易错的：加上了符号"),s("code",[t._v("::")]),t._v("的重载，就是全局的』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080620562.png",alt:"image-20210712080620562"}})]),t._v(" "),s("ul",[s("li",[t._v("下面重载不是全局的")])]),t._v(" "),s("p",[t._v("（1）重装全局的")]),t._v(" "),s("p",[t._v("本节，我们要重载下面4个")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为是全局的，所以『::』前面没有任何")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为是全局")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("解释")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、加上符号『"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("』是表示全局的\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("这个表示的是  array "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n『数组的』\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("如何重载呢？就是下面这4部分代码")]),t._v(" "),s("li",[t._v("有关new的部分，一定要有一个参数，就是大小『size_t size』")]),t._v(" "),s("li",[t._v("注意，下面写好的函数，其实不会是你调用的，刚刚讲过了new会切成3个动作，这个Part1已经讲过了，3个动作的第1个动作，当你有重载就跑到你这里来，你没有重载就用全局。而这些函数，当然要知道大小，这是谁存进来的呢？编译器。这个函数写出来是给编译器调用的")]),t._v(" "),s("li",[t._v("下面就是它们的形式它的接口，至于进去之后，要做什么，那是我们的事情，没有人教我们做什么。『在这个地方，我们为了要接管这个动作，所以我们写了这么4个函数，我要接管呢，但我又不要失常！！这是真正在分配内存，万一我们没有分配内存的话，这个程序会宕掉，会crash掉，所以我接管之后没有做太多的事情，我仅仅是在之前的基础上打印点东西。程序还是正常运作）")]),t._v(" "),s("li",[t._v("注意：我们写的这个的影响是『无远弗届』，影响层面非常广，因为你现在重载的是全局。成语：释义，不管多远之处，没有不到的。")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAlloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size_t size "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("malloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFree")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ptr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//他们不可以被声明于一个namespace内")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//『whoway的解读是，由于是全局的，所以namespace约束他们的话，就会出错』")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size_t size "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global new()   /n"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAlloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size_t size "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global new[]()   /n"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myAlloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global delete()   /n"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFree")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"global delete[]()   /n"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFree")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ptr "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080706561.png",alt:"image-20210712080706561"}})]),t._v(" "),s("p",[t._v("（2）重载class里面的")]),t._v(" "),s("ul",[s("li",[t._v("从前面，联想到：我也可以"),s("strong",[t._v("对一个class里头")]),t._v("的成员『operator new或者operator delete』做重载")]),t._v(" "),s("li",[t._v("我们下面来重载：member operator new/delete")]),t._v(" "),s("li",[t._v("刚刚那个是全局啊，现在是在class里头")]),t._v(" "),s("li",[t._v("现在我们就能接管了。。我们接管之后做什么事情？？做一个内存池。。")])]),t._v(" "),s("p",[t._v("『如何写呢？写法如下』")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" size_t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("1、展示class的new是如何使用的")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("分解为下面3个动作")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" mem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第1步，这不就用上了吗")]),t._v("\n    p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" p\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("分解为2步")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第1步")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("2、重载class中的new[]")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("分解为下面")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" mem "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第1步")]),t._v("\n    p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意是N次，，这个地方我们也可以知道这个为什么构造基础")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("blockquote",[s("p",[t._v("注意啊，有没有[]表示，一个是数组，一个是")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("也解决了疑惑，为什么释放数组是\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///2333，牛皮")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080738196.png",alt:"image-20210712080738196"}})]),t._v(" "),s("h2",{attrs:{id:"_22-示例-22"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-示例-22"}},[t._v("#")]),t._v(" 22.示例 22")]),t._v(" "),s("ul",[s("li",[t._v("现在写一个相对完整的程序")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080825808.png",alt:"image-20210712080825808"}})]),t._v(" "),s("ul",[s("li",[t._v("注意：：：如果使用者这么用的话，，那么就能强制跳过你这个class中国设计的，而是使用全局的『难道那么勾心斗角吗，233，没有』『作为使用者和设计者之间，，恐怕大多数人从来不知道可以这样做。。』")])]),t._v(" "),s("p",[t._v("测试")]),t._v(" "),s("ul",[s("li",[t._v("接口的示例！")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080908136.png",alt:"image-20210712080908136"}})]),t._v(" "),s("ul",[s("li",[t._v("一个对象的大小『sizeof，你记得哈：：你也许不知道"),s("strong",[t._v("string的大小，我告诉你，它里头其实是个指针！所以是指针大小")]),t._v("』 "),s("font",{staticStyle:{background:"yellow"}},[t._v("此处说法错误！")])],1)]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712080955930.png",alt:"image-20210712080955930"}})]),t._v(" "),s("h3",{attrs:{id:"_22-1-『易错-前面加上了cout这种设计』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-1-『易错-前面加上了cout这种设计』"}},[t._v("#")]),t._v(" 22.1.『易错-前面加上了cout这种设计』")]),t._v(" "),s("ul",[s("li",[t._v("在GNUC底下，当你要一个。array的时候，"),s("strong",[t._v("他把array的整个大小再加上一个计数器『whoway：或许用static就可以实现』")]),t._v("，整包来分配内存。")]),t._v(" "),s("li",[t._v("这是合理的。『这种做法，")])]),t._v(" "),s("blockquote",[s("p",[t._v("到这里，我们知道：")]),t._v(" "),s("p",[t._v("我们可以重载全局的，可以重载成员函数的，分别是对单一对象的这种版本或者是对数组这种、！！")])]),t._v(" "),s("h2",{attrs:{id:"_23-重载new-delete-示例-23"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-重载new-delete-示例-23"}},[t._v("#")]),t._v(" 23.重载"),s("code",[t._v("new()")]),t._v(","),s("code",[t._v("delete()")]),t._v("示例  23")]),t._v(" "),s("ul",[s("li",[t._v("你还可以重载"),s("code",[t._v("::")]),t._v("这种特殊形式，这个叫作"),s("code",[t._v("placement new")]),t._v("，它的形式『注意用起来的形式是那样。这个和先前不同，先前是直接"),s("code",[t._v("new classname")]),t._v("，并没有中间这一段。。现在允许你加上这一段。就是带上小括号的这部分。")]),t._v(" "),s("li",[t._v("『重载的前提，请仔细看！』")])]),t._v(" "),s("h3",{attrs:{id:"_23-1-placement-new『好像是乱入的知识点』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-1-placement-new『好像是乱入的知识点』"}},[t._v("#")]),t._v(" 23.1."),s("code",[t._v("placement new")]),t._v("『好像是乱入的知识点』")]),t._v(" "),s("blockquote",[s("p",[t._v("关于placement new的说法，公说公有理婆说婆有理。")]),t._v(" "),s("p",[s("font",{staticStyle:{background:"yellow"}},[t._v("有人和侯捷的不一样，说，必须传入的是指针，“定位”一词才有意义")])],1)]),t._v(" "),s("h3",{attrs:{id:"_23-2-『whoway关于placement-new的思考』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-2-『whoway关于placement-new的思考』"}},[t._v("#")]),t._v(" 23.2.『whoway关于"),s("code",[t._v("placement new")]),t._v("的思考』")]),t._v(" "),s("ul",[s("li",[t._v("我看完placement new的所谓定义。『不就是变化后的"),s("code",[t._v("opeartor new")]),t._v("的推广吗。并且给一些限制，本质还是operator new』")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712081233563.png",alt:"image-20210712081233563"}})]),t._v(" "),s("h3",{attrs:{id:"_23-3-『关于delete的疑问』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-3-『关于delete的疑问』"}},[t._v("#")]),t._v(" 23.3.『关于delete的疑问』")]),t._v(" "),s("ul",[s("li",[t._v("到这里，我们看到了4个版本的operator new，那我可不可以有4个不同的operator delete呢？")]),t._v(" "),s("li",[t._v("回答：我们也可以！我没有讲也必须啊！我讲也可以！")]),t._v(" "),s("li",[t._v("『但是绝不会被调用、但是只有当抛出出异常。也行你现在感受不到，待会，我给你看我的一个设计，再来看这个文字，会更清晰。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712081306618.png",alt:"image-20210712081306618"}})]),t._v(" "),s("ul",[s("li",[t._v("测试")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712081341200.png",alt:"image-20210712081341200"}})]),t._v(" "),s("ul",[s("li",[t._v("这4个operator delete被调用的时机只有一个。——就是它们对应的那个兄弟，operator new分配内存之后，接下来会调用构造函数。。如果构造函数发出异常，表示在一个对象的构造过程当中，失败。")])]),t._v(" "),s("h3",{attrs:{id:"_23-4-『工程经验』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-4-『工程经验』"}},[t._v("#")]),t._v(" 23.4.『工程经验』")]),t._v(" "),s("ul",[s("li",[t._v("『注意，我设计了，但是为啥没有输出。。『关于异常："),s("strong",[t._v("如果作为一个经验不是太多的C++程序员，一般还不会去碰触到异常")]),t._v("！exception，我"),s("strong",[t._v("有专门的一门课，专门在讲异常")]),t._v("』")]),t._v(" "),s("li",[t._v("『异常一直传递到函数—"),s("code",[t._v("terminal")]),t._v("，然后最后还调用到epo??只有在最后阶段，才会打印出这个字出来。。可是我期待的是，在这个之前，这里应该有一个函数。怎么没有输出呢？？看这段注解。。『GNUC4.9没有调用，但是以前"),s("code",[t._v("GNUC2.9")]),t._v("调用了。所以，这里就算是一个很隐晦的部分。。不知道啊。。每个人手上的编译器测试一下。")])]),t._v(" "),s("blockquote",[s("p",[t._v("『高级debug？我的设想』")])]),t._v(" "),s("h2",{attrs:{id:"_24-basic-string使用new-extra-扩充申请量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-basic-string使用new-extra-扩充申请量"}},[t._v("#")]),t._v(" 24."),s("code",[t._v("Basic_String")]),t._v("使用"),s("code",[t._v("new(extra)")]),t._v("扩充申请量")]),t._v(" "),s("blockquote",[s("p",[t._v("来自string的源代码？？")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210712081524504.png",alt:"image-20210712081524504"}})]),t._v(" "),s("p",[t._v("这个是『标准库』的例子，看看他是"),s("code",[t._v("怎么去改变operator new")]),t._v("。而且是小括号的这个new，也就是所谓的"),s("code",[t._v("placement new")])]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("现在我们的"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("有多少种？？\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("表达式\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n    array "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n    placement "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n    『whoway说——我觉得这个分类是错误的。』\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("ul",[s("li",[t._v("我们什么时候，需要重新定义"),s("code",[t._v("placement new")]),t._v("呢？")]),t._v(" "),s("li",[t._v("当我像向他这样，"),s("strong",[t._v("无声无息的多分配一些东西的时候")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[t._v("C++"),s("a",{attrs:{href:"https://mooc.study.163.com/smartSpec/detail/1001137001.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("网易云微专业"),s("OutboundLink")],1),t._v("，侯捷")])])])}),[],!1,null,null,null);s.default=e.exports}}]);