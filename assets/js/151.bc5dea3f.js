(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{434:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"调试gcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试gcc"}},[a._v("#")]),a._v(" 调试GCC")]),a._v(" "),s("ul",[s("li",[a._v("翻译链接：DebuggingGCC—"),s("a",{attrs:{href:"https://gcc.gnu.org/wiki/DebuggingGCC",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://gcc.gnu.org/wiki/DebuggingGCC"),s("OutboundLink")],1)])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("font "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"background:yellow"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("font "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"background:pink"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("font "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"background: MediumSpringGreen"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[a._v("#")]),a._v(" 目录")]),a._v(" "),s("p",[a._v("[TOC]")]),a._v(" "),s("h2",{attrs:{id:"_1-debugging-gcc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-debugging-gcc"}},[a._v("#")]),a._v(" 1.Debugging GCC")]),a._v(" "),s("p",[a._v("GCC 由调用"),s("strong",[a._v("编译器本身")]),a._v("（cc1、cc1plus、f951 等）、汇编器（as）和链接器（ld 或 collect2）的"),s("strong",[a._v("驱动程序")]),a._v("（gcc、g++、gfortran 等）组成。 每种语言都有一个编译器。 "),s("font",{staticStyle:{background:"MediumSpringGreen"}},[a._v("大多数情况下")]),a._v("，想要调试编译器本身而"),s("strong",[a._v("不是")]),a._v("驱动程序。")],1),a._v(" "),s("ul",[s("li",[a._v("First, generate "),s("a",{attrs:{href:"https://gcc.gnu.org/bugs/#detailed",target:"_blank",rel:"noopener noreferrer"}},[a._v("preprocessed source"),s("OutboundLink")],1),a._v(". Second, build "),s("a",{attrs:{href:"https://gcc.gnu.org/wiki/DebuggingGCC#gccbuilddebug",target:"_blank",rel:"noopener noreferrer"}},[a._v("a debuggable compiler"),s("OutboundLink")],1),a._v(". Now you can simply do")])]),a._v(" "),s("p",[a._v("首先，生成预处理源。")]),a._v(" "),s("p",[a._v("其次，构建一个可调试的编译器。 现在你可以简单地做")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ gcc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("parameters"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wrapper")]),a._v(" gdb,--args\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这将调用 gdb --args 下的 gcc 的所有子程序，因此 cc1 的调用将是 "),s("code",[a._v("gdb --args cc1 <...>")]),a._v("。 -wrapper 的参数是应在其控制下执行 cc1 的二进制文件的名称。 其他流行的例子是 valgrind、strace 等。")]),a._v(" "),s("h3",{attrs:{id:"_1-1-valgrind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-valgrind"}},[a._v("#")]),a._v(" 1.1.Valgrind")]),a._v(" "),s("p",[a._v("例如，要检查内存泄漏和其他与内存相关的问题，您将执行以下命令。 请注意，为了抑制良性 Valgrind 错误，GCC 需要在安装了 <valgrind.h> 头文件的系统上配置 --enable-valgrind-annotations 选项（在常见的 Linux 发行版上，这可以通过安装 valgrind-devel 包来完成 ）。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ gcc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("parameters"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wrapper")]),a._v(" valgrind\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("...或直接调用 "),s("code",[a._v("valgrind --leak-check=full [...]/lto1 [...]")]),a._v(" 等。")]),a._v(" "),s("p",[a._v("请注意，有一些内存泄漏还没有人费心去堵上。")]),a._v(" "),s("p",[a._v("另请注意，即使使用 "),s("code",[a._v("--enable-valgrind-annotations")]),a._v("，Valgrind 也不明白在程序结束时，未收集的 GC 分配的内存实际上并没有泄漏（它根本没有被收集）。 这意味着 "),s("code",[a._v("Valgrind --show-leak-kinds=all")]),a._v(" 非常嘈杂。 这可以通过以下方式缓解（"),s("code",[a._v("log")]),a._v("是 Valgrind 日志文件）：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" log "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'s%^==[0-9]\\+== %%'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("csplit")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n4")]),a._v(" - "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'/^$/'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{*}'")]),a._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'by 0x[0-9A-F]\\+: ggc_internal_alloc'")]),a._v(" xx* "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("less")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("另见 "),s("a",{attrs:{href:"http://mid.mail-archive.com/87im0ihdge.fsf@euler.schwinge.homeip.net",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://mid.mail-archive.com/87im0ihdge.fsf@euler.schwinge.homeip.net"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"_1-2-gdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-gdb"}},[a._v("#")]),a._v(" 1.2.GDB")]),a._v(" "),s("p",[a._v("如果您调用了 cc1、cc1plus 等编译器，您也可以直接调用 gdb：⭐️⭐️⭐️")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("gdb "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--args")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("location of cc1, cc1plus, or whatever compiler\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" the language the preprocessed "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" is in"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("flags passed to compiler"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("ul",[s("li",[a._v("cc1、cc1plus 或预处理源文件所在语言的任何编译器的位置")]),a._v(" "),s("li",[a._v("<传递给编译器的标志>")])]),a._v(" "),s("p",[a._v("这将使您能够调试编译器本身，而不是驱动程序。")]),a._v(" "),s("p",[a._v("您还可以使用驱动程序的 "),s("code",[a._v("-###")]),a._v(" 选项来编写驱动程序将执行的命令。 例如，")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("gdb "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--args")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("./xgcc -"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("### <parameters to the driver> 2>&1 | fgrep cc1")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("a",{attrs:{href:"http://gcc.gnu.org/ml/gcc/2004-03/msg01195.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("这里"),s("OutboundLink")],1),a._v("有一些脚本可以为您自动执行所有这些操作，从而使调试前端变得更加简单。")]),a._v(" "),s("h2",{attrs:{id:"_2-构建一个可调试的编译器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-构建一个可调试的编译器"}},[a._v("#")]),a._v(" 2.构建一个可调试的编译器")]),a._v(" "),s("ul",[s("li",[a._v("Building a Debuggable Compiler")])]),a._v(" "),s("p",[a._v("GCC "),s("font",{staticStyle:{background:"MediumSpringGreen"}},[a._v("本身通常在 "),s("code",[a._v("-O2")]),a._v(" 编译，这使得单步执行代码有点困难")]),a._v("。 您应该使用 GDB 6.3（或更新版本），它可以与更新的 GCC 生成的位置列表一起正常工作，这有助于在这种情况下进行调试。 要构建可调试的编译器，请正常配置编译器，然后")],1),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("STAGE1_CXXFLAGS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-g -O0"')]),a._v(" all-stage1\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("font",{staticStyle:{background:"MediumSpringGreen"}},[a._v("有些人喜欢使用"),s("code",[a._v("-g3")]),a._v("，它使宏可调试，而不是"),s("code",[a._v("-g")]),a._v("。")])],1),a._v(" "),s("p",[a._v("默认情况下 stage1 仅包含 C++ 编译器。 如果您需要在不同的前端工作，您可以配置 "),s("code",[a._v("--enable-stage1-languages=LANGUAGES")]),a._v(" 以构建其他语言作为 stage1 的一部分。")]),a._v(" "),s("p",[a._v("如果您有一个完全引导的构建并且您只想重新编译一些文件，您可以执行以下操作：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v(" $ "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$GCC_SRC_DIR")]),a._v("/gcc/c-family/c-common.c\n $ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" gcc/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CXXFLAGS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-g3 -O0"')]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("如果您有发布源并且想要启用内部检查，请使用 "),s("code",[a._v("--enable-checking")]),a._v(" 配置编译器（如果您从 SVN 下载源，则此选项已启用）。 有关可用检查类型的描述，请参阅安装 GCC：配置。")]),a._v(" "),s("h2",{attrs:{id:"_3-技巧和窍门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-技巧和窍门"}},[a._v("#")]),a._v(" 3.技巧和窍门")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("Tips and tricks（技巧和窍门）")])]),a._v(" "),s("li",[s("p",[a._v("在调试器中单步执行前端（front-end）时，您可以使用 "),s("code",[a._v("debug_tree()")]),a._v(" 和 "),s("code",[a._v("debug_rtx()")]),a._v(" 函数分别打印出树节点的结构或 RTL 表达式。")])]),a._v(" "),s("li",[s("p",[a._v("如果您使用 GDB 调试 GCC 并从 "),s("code",[a._v("$GCC_BUILD_DIR/gcc")]),a._v(" 文件夹中运行调试器，您将自动使用由构建过程创建的 "),s("code",[a._v(".gdbinit")]),a._v(" 文件。 它定义了一些方便的宏来帮助调试 GCC。 有关详细信息，请参阅文件 "),s("code",[a._v("$GCC_SRC_DIR/gcc/gdbinit.in")]),a._v("。")])])]),a._v(" "),s("h3",{attrs:{id:"_3-1-randomization-随机化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-randomization-随机化"}},[a._v("#")]),a._v(" 3.1.Randomization（随机化）")]),a._v(" "),s("p",[a._v("如果您想要可重复的结果，您可能需要阅读"),s("a",{attrs:{href:"https://gcc.gnu.org/wiki/Randomization",target:"_blank",rel:"noopener noreferrer"}},[a._v("随机化"),s("OutboundLink")],1),a._v("并禁用它。")]),a._v(" "),s("h3",{attrs:{id:"_3-2-debugging-within-x-emacs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-debugging-within-x-emacs"}},[a._v("#")]),a._v(" 3.2.Debugging within (x)emacs")]),a._v(" "),s("p",[a._v("基本上你正在编辑编译器的一个文件，比如 tree-foo.c，突然你想调试它的代码。 以下命令应该正确：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("C-x "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\nM-x gdb\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/objdir/gcc/cc1\nC-x o\nC-x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("space"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\nC-x o\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("gdb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O2")]),a._v(" -ftree-foo ~~/foo.i\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("首先，拆分窗口，然后在编译器 cc1 上运行调试器。 "),s("code",[a._v("C-x <space>")]),a._v(" 在光标处设置断点。 最后，您使用预处理文件 "),s("code",[a._v("foo.i")]),a._v(" 上的常用选项运行编译器。")]),a._v(" "),s("h3",{attrs:{id:"_3-3-additional-tips-on-linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-additional-tips-on-linux"}},[a._v("#")]),a._v(" 3.3.Additional tips on Linux")]),a._v(" "),s("p",[a._v("Linux 上的其他提示")]),a._v(" "),s("p",[a._v("大多数 linux 系统（带有 2.6 内核）都有地址空间随机化，您最好禁用它以获得更多可重现的运行（即从一次运行到下一次运行获得相同的指针地址）。 要全局禁用它，请执行")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /proc/sys/kernel/randomize_va_space\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("作为root。 更好的是，在你的 shell 中禁用它")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("setarch "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-R")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("不要忘记禁用地址空间随机化可能会引发一些安全问题。")]),a._v(" "),s("h3",{attrs:{id:"_3-4-dumping-the-intermediate-representation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-dumping-the-intermediate-representation"}},[a._v("#")]),a._v(" 3.4.Dumping the Intermediate Representation")]),a._v(" "),s("p",[a._v("阅读 https://gcc.gnu.org/onlinedocs/gcc/Developer-Options.html 以了解从 -d* 到 -fdump-tree-* 的所有调试选项")]),a._v(" "),s("p",[a._v("通过编写汇编器列表文件来查看汇编器由 GCC 的输出构成的内容通常很有用。 例如，这对于调试错误计算的 insn 长度很有用。 使用带有选项“-dAp -Wa,-a”的 gcc 会产生如下输出：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("267")]),a._v("                    @ BLOCK "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("22")]),a._v(" seq:20\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("268")]),a._v("                    @ PRED: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("27")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("269")]),a._v("                    .L19:\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("270")]),a._v(" 0298 18101BE5              ldr     r1, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("fp, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#-24]  @ 204   *arm_movsi_insn/5       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("271")]),a._v(" 029c 14201BE5              ldr     r2, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("fp, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#-20]  @ 205   *arm_movsi_insn/5       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("272")]),a._v(" 02a0 0430A0E3              mov     r3, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#4  @ 206   *arm_movsi_insn/2       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("273")]),a._v(" 02a4 0221A0E1              mov     r2, r2, asl "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#2  @ 207   *arm_shiftsi3   [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("274")]),a._v(" 02a8 022081E0              "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v("     r2, r1, r2      @ "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("208")]),a._v("   *arm_addsi3/1   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("275")]),a._v(" 02ac 033082E0              "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v("     r3, r2, r3      @ "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("209")]),a._v("   *arm_addsi3/1   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("276")]),a._v(" 02b0 003093E5              ldr     r3, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("r3, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#0]    @ 210   *arm_movsi_insn/5       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("277")]),a._v(" 02b4 38300BE5              str     r3, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("fp, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#-56]  @ 211   *arm_movsi_insn/6       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("278")]),a._v(" 02b8 38301BE5              ldr     r3, "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("fp, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#-56]  @ 212   *arm_movsi_insn/5       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("279")]),a._v(" 02bc 000053E3              "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cmp")]),a._v("     r3, "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#0  @ 213   *arm_cmpsi_insn/3       [length = 4]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("280")]),a._v("                    @ SUCC: "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("fallthru"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("281")]),a._v(" 02c0 1500000A              beq     .L17    @ "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("214")]),a._v("   *arm_cond_branch        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br")])]),s("h2",{attrs:{id:"_4-debugging-the-ada-compiler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-debugging-the-ada-compiler"}},[a._v("#")]),a._v(" 4.Debugging the Ada Compiler")]),a._v(" "),s("ul",[s("li",[a._v("(调试 Ada 编译器)")])]),a._v(" "),s("h2",{attrs:{id:"_5-debugging-lto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-debugging-lto"}},[a._v("#")]),a._v(" 5.Debugging LTO")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("调试链接时优化（Link Time Optimization）")])]),a._v(" "),s("li",[s("p",[a._v("参考资料：CSDN的"),s("a",{attrs:{href:"https://blog.csdn.net/Rong_Toa/article/details/123448873",target:"_blank",rel:"noopener noreferrer"}},[a._v("LTO 链接时优化"),s("OutboundLink")],1)])])]),a._v(" "),s("h2",{attrs:{id:"_6-reproducing-testsuite-failures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-reproducing-testsuite-failures"}},[a._v("#")]),a._v(" 6.Reproducing testsuite failures")]),a._v(" "),s("ul",[s("li",[a._v("（重现测试套件失败）")])]),a._v(" "),s("p",[a._v("当您遇到测试套件失败时，您可以使用 contrib 目录中的 "),s("a",{attrs:{href:"http://gcc.gnu.org/viewcvs/trunk/contrib/repro_fail?view=markup",target:"_blank",rel:"noopener noreferrer"}},[a._v("repro_fail"),s("OutboundLink")],1),a._v(" 脚本重现它。")]),a._v(" "),s("p",[a._v("此脚本将搜索以 'spawn' 开头的行，其中包含您要查找的模式（通常是源文件名）。")]),a._v(" "),s("p",[a._v("一旦找到该模式，它就会重新执行 spawn 行中的整个命令。 如果模式匹配多个 spawn 命令，它会询问您想要哪一个。")]),a._v(" "),s("p",[a._v("例如，假设我们发现了这个失败：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("FAIL: gcc.dg/tree-ssa/vrp47.c scan-tree-dump-times dom1 "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"x[^ ]* & y"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("我们想在这个编译中调用 gdb，这样我们就可以调试正在发生的事情：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ ~/gcc/contrib/repro_fail vrp47.c gcc.log "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wrapper")]),a._v(" gdb,--args\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("bld"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/gcc/xgcc -B"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("bld"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/gcc/ ~/gcc/gcc/testsuite/gcc.dg/tree-ssa/vrp47.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O2")]),a._v(" -fdump-tree-vrp -fdump-tree-dom "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" vrp47.s "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wrapper")]),a._v(" gdb,--args\n+ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("bld"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/gcc/xgcc -B"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("bld"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/gcc/ ~/gcc/gcc/testsuite/gcc.dg/tree-ssa/vrp47.c "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O2")]),a._v(" -fdump-tree-vrp -fdump-tree-dom "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-S")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" vrp47.s "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-wrapper")]),a._v(" gdb,--args\nGNU gdb "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("GDB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("gdb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("h2",{attrs:{id:"_7-重新运行failed的测试样例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-重新运行failed的测试样例"}},[a._v("#")]),a._v(" 7.重新运行Failed的测试样例")]),a._v(" "),s("ul",[s("li",[a._v("Rerunning Failed Tests")])]),a._v(" "),s("p",[a._v("假设您已经进行了回归运行（regression run）并且一些测试失败了。 然后，您已经解决了您认为是原因的问题，并且您最初只是想确认那些失败的测试现在通过了。")]),a._v(" "),s("p",[a._v("有没有一种快速简便的方法来运行这些测试，而不必获取它们的所有名称并在 RUNTESTFLAGS 参数中手动调用它们？")]),a._v(" "),s("p",[a._v("答案是肯定的，它以 "),s("code",[a._v("contrib")]),a._v(" 目录中的 "),s("a",{attrs:{href:"http://gcc.gnu.org/viewcvs/trunk/contrib/test_recheck?view=markup",target:"_blank",rel:"noopener noreferrer"}},[a._v("test_recheck"),s("OutboundLink")],1),a._v(" 脚本的形式出现。")]),a._v(" "),s("p",[a._v("该脚本是自记录的，但这里有一个示例，说明我在整夜运行并重建修改后的编译器后如何使用它。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("$ ~ gcc/contrib/test_recheck /work/src/build/obj/gcc2/gcc/testsuite\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("显然，在您认为您的工作是无回归的之前，您仍然需要进行完整的回归运行（您的“修复”可能已经破坏了其他东西！），但这是确定损坏的测试现在是否有效的便捷方法。")]),a._v(" "),s("p",[a._v("此脚本的另一个有价值的用途是当您偶尔由于测试机器上的高负载而导致测试超时。 在这种情况下，您可能希望在运行结束时使用 test_recheck 来减少与前一组结果比较时的噪音。")]),a._v(" "),s("p",[a._v("警告：运行此脚本将清除完整运行的日志（.sum 和 .log 文件），因此您可能希望在调用它之前备份它们。")])])}),[],!1,null,null,null);s.default=r.exports}}]);