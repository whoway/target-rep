(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{306:function(s,t,a){s.exports=a.p+"assets/img/水平触发和边缘触发.c7e07da0.png"},531:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"linux下多路io复用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux下多路io复用"}},[s._v("#")]),s._v(" Linux下多路IO复用")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("font style"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"background: MediumSpringGreen"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("font style"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"background:yellow"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_1-什么是阻塞-block-轮询-poll"}},[s._v("1.什么是阻塞（Block）轮询（poll）？")])]),t("li",[t("a",{attrs:{href:"#_2-数据到达和数据拷贝"}},[s._v("2.数据到达和数据拷贝")])]),t("li",[t("a",{attrs:{href:"#⭐️笔记"}},[s._v("⭐️笔记")])]),t("li",[t("a",{attrs:{href:"#i-o多路复用-i-o多路转接"}},[s._v("I/O多路复用（I/O多路转接）")])]),t("li",[t("a",{attrs:{href:"#select"}},[s._v("select")]),t("ul",[t("li",[t("a",{attrs:{href:"#结构体"}},[s._v("结构体")])]),t("li",[t("a",{attrs:{href:"#指针集合"}},[s._v("指针集合")])]),t("li",[t("a",{attrs:{href:"#核心源码实现"}},[s._v("核心源码实现")])])])]),t("li",[t("a",{attrs:{href:"#poll"}},[s._v("poll")])]),t("li",[t("a",{attrs:{href:"#epoll"}},[s._v("epoll")])]),t("li",[t("a",{attrs:{href:"#水平触发和边缘触发的「图解」"}},[s._v("水平触发和边缘触发的「图解」")])]),t("li",[t("a",{attrs:{href:"#为什么需要多路转接"}},[s._v("为什么需要多路转接？")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-多线程和多进程服务器特点"}},[s._v("2.1.多线程和多进程服务器特点")])]),t("li",[t("a",{attrs:{href:"#_2-2-学习select-poll-epoll的原因"}},[s._v("2.2.学习select/poll/epoll的原因")])]),t("li",[t("a",{attrs:{href:"#_3-select详解"}},[s._v("3.select详解")])]),t("li",[t("a",{attrs:{href:"#_4-poll详解"}},[s._v("4.poll详解")])]),t("li",[t("a",{attrs:{href:"#_5-epoll『linux专用』"}},[s._v("5.epoll『Linux专用』")])])])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("面试官建议关注")]),s._v(" "),t("p",[s._v("高并发、TCP的多收和多发")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background:yellow">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_1-什么是阻塞-block-轮询-poll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是阻塞-block-轮询-poll"}},[s._v("#")]),s._v(" 1.什么是阻塞（Block）轮询（poll）？")]),s._v(" "),t("ul",[t("li",[s._v("参考"),t("a",{attrs:{href:"https://www.huaweicloud.com/articles/9b5ea27aea2e9d141cfa4dc18748a6ab.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("华为云"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("阻塞后可以进行进程调度，CPU利用率高")]),s._v(" "),t("p",[s._v("阻塞和非阻塞关注的是"),t("font",{staticStyle:{background:"yellow"}},[s._v("程序在等待调用结果（消息，返回值）时的状态")])],1),s._v(" "),t("ul",[t("li",[t("p",[s._v("阻塞调用是指调用结果返回之前，=="),t("strong",[s._v("当前线程")]),s._v("会被"),t("strong",[s._v("挂起")]),s._v("==。调用线程只有在得到结果之后才会返回")]),s._v(" "),t("ul",[t("li",[s._v("还是上面的例子，你打电话问书店老板有没有《分布式系统》这本书，你如果是阻塞式调用，你会一直把自己“挂起”，直到得到这本书有没有的结果")])])]),s._v(" "),t("li",[t("p",[s._v("非阻塞调用指在不能立刻得到结果之前，该调用==不会阻塞"),t("strong",[s._v("当前线程")]),s._v("==")]),s._v(" "),t("ul",[t("li",[s._v("如果是非阻塞式调用，你不管老板有没有告诉你，你自己"),t("strong",[s._v("先一边去玩了")]),s._v("， 当然"),t("strong",[s._v("你也要偶尔过几分钟check一下老板有没有返回结果")])])]),s._v(" "),t("p",[s._v("在这里阻塞与非阻塞与是否同步异步无关。")]),s._v(" "),t("p",[s._v("跟老板通过什么方式回答你结果无关")])])]),s._v(" "),t("h4",{attrs:{id:"轮询-poll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#轮询-poll"}},[s._v("#")]),s._v(" 轮询（poll）")]),s._v(" "),t("ul",[t("li",[s._v("马上返回，过一会后，再重新问，可以吗")])]),s._v(" "),t("h2",{attrs:{id:"_2-数据到达和数据拷贝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据到达和数据拷贝"}},[s._v("#")]),s._v(" 2.数据到达和数据拷贝")]),s._v(" "),t("ul",[t("li",[s._v("数据到达，是借助网络，数据读入到本地的『内核』—因为4层模型中，除了『应用层』其他都是kernel态的")]),s._v(" "),t("li",[s._v("内核到（用户）user区数据拷贝：注意这个")])]),s._v(" "),t("p",[s._v("上面，2个阶段是理解5种IO模型的关键！『参考自Cyc2018』")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210713165516640.png",alt:"image-20210713165516640"}})]),s._v(" "),t("blockquote",[t("p",[s._v("Linux多线程服务器编程，PDF，网上搜集『IO多路复用』")])]),s._v(" "),t("h2",{attrs:{id:"⭐️笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⭐️笔记"}},[s._v("#")]),s._v(" ⭐️笔记")]),s._v(" "),t("h2",{attrs:{id:"i-o多路复用-i-o多路转接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#i-o多路复用-i-o多路转接"}},[s._v("#")]),s._v(" I/O多路复用（I/O多路转接）")]),s._v(" "),t("ul",[t("li",[s._v("I/O 多路复用使得程序能『同时监听』多个"),t("code",[s._v("文件描述符")]),s._v("，能够提高程序的性能")]),s._v(" "),t("li",[s._v("Linux 下实现 I/O 多路复用的『系统调用』主要有 select、poll 和 epoll")])]),s._v(" "),t("h2",{attrs:{id:"select"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[s._v("#")]),s._v(" select")]),s._v(" "),t("p",[s._v("主旨思想：")]),s._v(" "),t("p",[s._v("1.首先要构造一个关于"),t("strong",[s._v("文件描述符")]),s._v("的"),t("strong",[s._v("列表【fd_set类型】")]),s._v("，将要监听的文件描述符添加【使用宏去set】到该列表中。"),t("br"),s._v("\n2.调用一个"),t("strong",[s._v("系统函数【调用select系统函数】")]),s._v("，监听该列表中的文件描述符，直到这些描述符中的一个或者多个进行I/O 操作时，该函数才返回。")]),s._v(" "),t("ul",[t("li",[s._v("a.这个函数是阻塞【调用结果返回之前，=="),t("strong",[s._v("当前线程")]),s._v("会被"),t("strong",[s._v("挂起")]),s._v("==】")]),s._v(" "),t("li",[s._v("b.函数对文件描述符的检测的操作是由内核完成的")])]),s._v(" "),t("p",[s._v("3.在返回时，它会告诉进程有多少（哪些）描述符要进行I/O操作")]),s._v(" "),t("p",[s._v("【4.然后用户还得在"),t("strong",[s._v("用户态")]),s._v("继续遍历，原先的fd_set类型数组】")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sizeof(fd_set) = 128字节 \t=8*128 = 1024 比特「也就是bitmap」")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/time.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/select.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nfds "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("readfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("writefds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n           fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("exceptfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("timeval")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数：\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nfds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 委托内核检测的最大文件描述符的值 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" readfds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 要检测的文件描述符的读的集合，委托内核检测哪些文件描述符的读的属性\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 一般检测读操作\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 对应的是对方发送过来的数据，因为读是被动的接收数据，检测的就是读缓冲区\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 是一个传入传出参数\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" writefds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 要检测的文件描述符的写的集合，委托内核检测哪些文件描述符的写的属性\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 委托内核检测写缓冲区是不是还可以写数据（不满的就可以写）\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" exceptfds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 检测发生异常的文件描述符的集合\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" timeout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 设置的超时时间【超时时间！用途，比如，本来阻塞是为了死等后才唤醒线程，现在超时了，你可以选择继续调用函数死等还是算了，去执行其他逻辑】\n        \n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("timeval")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" tv_sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* seconds */")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" tv_usec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* microseconds */")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 永久阻塞【也就是我们正常的死等，正常的阻塞】，直到检测到了文件描述符有变化\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" tv_sec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" tv_usec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("， 不阻塞【也就是，可以通过修改这个超时时间，select也可以是非阻塞函数了】\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" tv_sec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" tv_usec "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("， 阻塞对应的时间\n            \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 失败\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 检测的集合中有n个文件描述符发生了变化\n    \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将参数文件描述符fd对应的标志位设置为0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_CLR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断fd对应的标志位是0还是1， 返回值 ： fd对应的标志位的值，0，返回0， 1，返回1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_ISSET")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将参数文件描述符fd 对应的标志位，设置为1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_SET")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// fd_set一共有1024 bit, 全部初始化为0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_ZERO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("h3",{attrs:{id:"结构体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结构体"}},[s._v("#")]),s._v(" 结构体")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("bits/typesizes.h")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Number of descriptors that can fit in an `fd_set'.  */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("__FD_SETSIZE")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")])])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[t("code",[s._v("sys/select.h")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" __fd_mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("__NFDBITS")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__fd_mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t __fd_mask fds_bits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("__FD_SETSIZE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" __NFDBITS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" fd_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//宏定义的替换后")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fds_bits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" fd_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//假设是32位的机器，sizeof(long int)=4Btye相当于int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fds_bits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" fd_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" fds_bits "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v(" Bytes\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v(" Bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" bits\n  \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//假设是64位的机器，sizeof(long int)=4Btye相当于long long")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" fds_bits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" fd_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd_set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" fds_bits "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v(" Bytes\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v(" Bytes"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v(" bits\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h3",{attrs:{id:"指针集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指针集合"}},[s._v("#")]),s._v(" 指针集合")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3个指针，分别指向 输入的：读，写，异常  3个文件描述符集合")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("in"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//步长为sizeof(unsigned long)的指针，如果32位就是4bytes，如果64位就是8bytes")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3个指针，分别指向 输出的结果：读，写，异常  3个文件描述符集合")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("res_in"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("res_out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("res_ex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" fd_set_bits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"核心源码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心源码实现"}},[s._v("#")]),s._v(" 核心源码实现")]),s._v(" "),t("ul",[t("li",[s._v("SELECT_STACK_ALLOC=256")]),s._v(" "),t("li",[s._v("原因是https://github.com/torvalds/linux/blob/v5.4/include/linux/poll.h")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("FRONTEND_STACK_ALLOC")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("SELECT_STACK_ALLOC")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token expression"}},[s._v("FRONTEND_STACK_ALLOC")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("POLL_STACK_ALLOC")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token expression"}},[s._v("FRONTEND_STACK_ALLOC")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("WQUEUES_STACK_ALLOC")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MAX_STACK_ALLOC "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" FRONTEND_STACK_ALLOC"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Allocate small arguments on the stack to save memory and be faster */")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" stack_fds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("SELECT_STACK_ALLOC"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//32位就是")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//int stack_fds[ 256 /sizeof(int) ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//int stack_fds[ 64 ]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sizeof(stack_fds)= 4*64= 256Btypes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 256 * 8 = 4096 bits")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("https://github.com/torvalds/linux/blob/v5.4/include/linux/fdtable.h")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("fdtable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" max_fds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最大文件描述符")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("file")]),s._v(" __rcu "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* current fd array */")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("close_on_exec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("open_fds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("full_fds_bits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("rcu_head")]),s._v(" rcu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("我们需要6个位图（输入和输出均为in/out/ex），因为我们使用fdset，所以需要以长字为单位分配内存。（in units of long-words）")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*\n * How many longwords for "nr" bits?\n */')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("FDS_BITPERLONG")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个是8* sizeof的字节 = 比特 ")])]),s._v("\n\nFDS_BITPERLONG"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 或者 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("FDS_LONGS")]),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("FDS_BITPERLONG"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" FDS_BITPERLONG "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name function"}},[s._v("FDS_BYTES")]),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FDS_LONGS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FDS_BYTES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("【 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("FDS_BITPERLONG"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("FDS_BITPERLONG 】 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \t\t\t\t\t\t  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//32位")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FDS_BYTES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// n 个文件需要的字节数，也是每份位图的大小")]),s._v("\n    size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FDS_BYTES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[s._v("如果栈上分配的空间不够，要使用 kmalloc去分配\n"),t("ul",[t("li",[s._v("后续代码中，发现如果地址不是stack地址，我们会kfree那个kmalloc的东西")])])])]),s._v(" "),t("h2",{attrs:{id:"poll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#poll"}},[s._v("#")]),s._v(" poll")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<poll.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pollfd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 委托内核检测的文件描述符 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 委托内核检测文件描述符的什么事件 */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" revents"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 文件描述符实际发生的事件 */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pollfd")]),s._v(" myfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmyfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("fd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmyfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("events "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" POLLIN "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" POLLOUT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pollfd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("fds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nfds_t nfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数：\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" fds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 是一个"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pollfd")]),s._v(" 结构体数组，这是一个需要检测的文件描述符的集合\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nfds "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 这个是第一个参数数组中最后一个有效元素的下标 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" timeout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 阻塞时长\n        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 不阻塞\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 阻塞，当检测到需要检测的文件描述符有变化，解除阻塞\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 阻塞的时长\n            \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值：\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 失败\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("（n） "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 成功"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("n表示检测到集合中有n个文件描述符发生变化\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/image-20210713164017770.png",alt:"image-20210713164017770"}})]),s._v(" "),t("h2",{attrs:{id:"epoll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#epoll"}},[s._v("#")]),s._v(" epoll")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/epoll.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个新的epoll实例。在内核中创建了一个数据，这个数据中有两个比较重要的数据，一个是需要检")]),s._v("\n测的文件描述符的信息（红黑树），还有一个是就绪列表，存放检测到数据发送改变的文件描述符信息（双向\n链表）。\n    \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数：\n    \tsize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 目前没有意义了。随便写一个数，必须大于"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值：\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 失败\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 文件描述符，操作epoll实例的\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" epoll_data "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ptr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint32_t")]),s._v(" u32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint64_t")]),s._v(" u64"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" epoll_data_t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("epoll_event")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uint32_t")]),s._v(" events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Epoll events */")]),s._v("\n    epoll_data_t data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* User data variable */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n常见的Epoll检测事件：\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" EPOLLIN\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" EPOLLOUT\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" EPOLLERR\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" EPOLLET\n    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对epoll实例进行管理：添加文件描述符信息，删除信息，修改信息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_ctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" epfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" op"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("epoll_event")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数：\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" epfd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" epoll实例对应的文件描述符\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" op "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 要进行什么操作\n            EPOLL_CTL_ADD"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 添加\n            EPOLL_CTL_MOD"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 修改\n            EPOLL_CTL_DEL"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 删除\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" fd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 要检测的文件描述符\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" event "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 检测文件描述符什么事情\n        \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检测函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("epoll_wait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" epfd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("epoll_event")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("events"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxevents"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\ntimeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 参数：\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" epfd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" epoll实例对应的文件描述符\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" events "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 传出参数，保存了发送了变化的文件描述符的信息\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" maxevents "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 第二个参数结构体数组的大小\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" timeout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 阻塞时间\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 不阻塞\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 阻塞，直到检测到fd数据发生变化，解除阻塞\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 阻塞的时长（毫秒）\n        \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 返回值：\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 成功，返回发送变化的文件描述符的个数 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 失败 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br")])]),t("p",[s._v("Epoll 的工作模式：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("LT 模式 （水平触发）\n假设委托内核检测读事件→检测fd的读缓冲区\n读缓冲区有数据→epoll检测到了会给用户通知\na.用户不读数据，数据一直在缓冲区，"),t("strong",[s._v("epoll 会一直通知")]),s._v("\nb.用户只读了一部分数据，epoll会通知\nc.缓冲区的数据读完了，不通知")]),s._v(" "),t("blockquote",[t("p",[s._v("LT（level - triggered）是缺省的工作方式，并且同时支持 block 和 no-block socket。在这\n种做法中，内核告诉你一个文件描述符是否就绪了，然后你可以对这个就绪的 fd 进行 IO 操\n作。如果你不作任何操作，内核还是会继续通知你的。")])])]),s._v(" "),t("li",[t("p",[s._v("ET 模式（边沿触发）")]),s._v(" "),t("p",[s._v("假设委托内核检测读事件→检测fd的读缓冲区")]),s._v(" "),t("p",[s._v("读缓冲区有数据→epoll检测到了会给用户通知")]),s._v(" "),t("p",[s._v("​\ta.用户不读数据，数据一致在缓冲区中，epoll下次检测的时候就不通知了")]),s._v(" "),t("p",[s._v("​\tb.用户只读了一部分数据，epoll不通知")]),s._v(" "),t("p",[s._v("​\tc.缓冲区的数据读完了，不通知")]),s._v(" "),t("blockquote",[t("p",[s._v("ET（edge - triggered）是高速工作方式，只支持 no-block socket。在这种模式下，当描述符从未就绪变为就绪时，内核通过epoll告诉你。然后它会假设你知道文件描述符已经就绪，并且不会再为那个文件描述符发送更多的就绪通知，直到你做了某些操作导致那个文件描述符不再为就绪状态了。但是请注意，如果一直不对这个 fd 作 IO 操作（从而导致它再次变成 未就绪），内核不会发送更多的通知（only once）。")]),s._v(" "),t("p",[s._v("ET 模式在很大程度上减少了 epoll 事件被重复触发的次数，因此效率要比 LT 模式高。epoll 工作在 ET 模式的时候，必须使用非阻塞套接口，以避免由于一个文件句柄的阻塞读/阻塞写 操作把处理多个文件描述符的任务饿死。")])])])]),s._v(" "),t("h2",{attrs:{id:"水平触发和边缘触发的「图解」"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#水平触发和边缘触发的「图解」"}},[s._v("#")]),s._v(" 水平触发和边缘触发的「图解」")]),s._v(" "),t("p",[s._v("计算机行业水平触发与边缘触发名字的来源？")]),s._v(" "),t("p",[s._v("计算机行业中的“水平触发”（Level-Triggered）和“边缘触发”（Edge-Triggered）是指硬件或软件在检测到某个输入信号的特定状态时触发相应的操作。这些术语的名称源自"),t("strong",[s._v("电子工程")]),s._v("中的相关概念：")]),s._v(" "),t("ul",[t("li",[s._v("水平触发：在电路中，信号被视为“高电平”或“低电平”，并"),t("strong",[s._v("保持在这种状态")]),s._v("直到信号发生变化。因此，当检测到信号处于特定状态时，该信号被认为是“"),t("strong",[s._v("水平触发")]),s._v("”的。")]),s._v(" "),t("li",[s._v("边缘触发：相比之下，边缘触发在信号发生变化（即"),t("strong",[s._v("电平上升")]),s._v("或下降）时触发操作。在电子工程中，"),t("strong",[s._v("这些变化通常称为“边沿")]),s._v("”（Edge），因此此类触发被称为“边缘触发”。")])]),s._v(" "),t("p",[s._v("在计算机行业中，这些术语通常用于描述硬件中的中断处理，例如 CPU 中断控制器，以及软件中的事件处理，例如在操作系统中注册的回调函数。在这些情况下，水平触发和边缘触发可以用来指定触发中断或事件处理程序的方式。")]),s._v(" "),t("p",[s._v("最好的解释：")]),s._v(" "),t("p",[s._v("使用脉冲信号来解释LT和ET可能更加贴切。")]),s._v(" "),t("p",[s._v("Level是指信号只需要处于水平，就"),t("strong",[s._v("一直会触发")]),s._v("；")]),s._v(" "),t("p",[s._v("而edge则是指信号为"),t("strong",[s._v("上升沿")]),s._v("或者"),t("strong",[s._v("下降沿")]),s._v("时触发。")]),s._v(" "),t("ul",[t("li",[s._v("我花了一个图来理解！")])]),s._v(" "),t("img",{attrs:{src:a(306)}}),s._v(" "),t("h2",{attrs:{id:"为什么需要多路转接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要多路转接"}},[s._v("#")]),s._v(" 为什么需要多路转接？")]),s._v(" "),t("p",[s._v("涉及高性能服务器开发方面 ，epoll是非常常用的系统调用，在很多的开源项目当中epoll都是核心技术，例如Nginx和Redis等等")]),s._v(" "),t("p",[s._v("目前epoll是linux大规模并发网络程序中的"),t("strong",[s._v("热门首选模型")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"_2-1-多线程和多进程服务器特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-多线程和多进程服务器特点"}},[s._v("#")]),s._v(" 2.1.多线程和多进程服务器特点")]),s._v(" "),t("p",[s._v("多线程和多进程效率低的原因：所有监听都是"),t("code",[s._v("serve.c")]),s._v("这个程序自己来做。")]),s._v(" "),t("p",[s._v("有一种好的方法：多路IO转接服务器也叫做"),t("strong",[s._v("多任务（event）IO服务器")]),s._v("。")]),s._v(" "),t("p",[s._v("该类服务器实现的主旨思想是，不再由『"),t("strong",[s._v("应用程序")]),s._v("』自己监视客户端连接，取而代之由"),t("strong",[s._v("内核")]),s._v("替应用程序监视文件。")]),s._v(" "),t("ul",[t("li",[s._v("重点在“转接”\n"),t("ul",[t("li",[t("strong",[s._v("多路")]),s._v("指的，多个访问请求的"),t("strong",[s._v("客户端")]),s._v("。")]),s._v(" "),t("li",[s._v("转接：言外之意，中间有个人帮我进行转换，转换客户端的请求，转接给我，然后我再进行操作。")])])])]),s._v(" "),t("h3",{attrs:{id:"_2-2-学习select-poll-epoll的原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-学习select-poll-epoll的原因"}},[s._v("#")]),s._v(" 2.2.学习select/poll/epoll的原因")]),s._v(" "),t("p",[s._v("原因：CPU消耗大，主要用在CPU切换上，『"),t("strong",[s._v("CPU上下文切换")]),s._v("』，是需要操作一些句柄的，代价高。")]),s._v(" "),t("p",[s._v("多线程和多进程并发，不适合，客户端非常庞大的情况。\n原因：开销大，占用资源\n详细点：他主要占用的资源，"),t("strong",[s._v("CPU消耗得大")]),s._v("。")]),s._v(" "),t("p",[s._v("起几百个进程，几百个线程，实际上对于Linux操作系统来说，在内核消耗上或者系统内部的消耗上。\n差别不是特别大。\n当然，我们知道，多线程比多进程好一些")]),s._v(" "),t("p",[s._v("上面，如果我们发现，那就是，如果每个客户端都和我进行数据交换。\n那我的"),t("strong",[s._v("CPU")]),s._v("岂不是就要"),t("strong",[s._v("频繁的进行切换")]),s._v("。")]),s._v(" "),t("ul",[t("li",[s._v("如何把这个降低呢？")]),s._v(" "),t("li",[s._v("才有多路IO转接模型，有三种（难度大一些了，使用起来，也比较不好理解，然后"),t("strong",[s._v("代码量相对来说，大一些")]),s._v("）")])]),s._v(" "),t("h4",{attrs:{id:"_1、建立连接的『时候』的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、建立连接的『时候』的好处"}},[s._v("#")]),s._v(" 1、建立连接的『时候』的好处")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("把内核请过来给我当帮手，我只需要根据我的设置请求，通知他，你去帮我监听这几个客户端，是否有请求。当这些客户端有请求的时候，帮助我监听的内核，会给我一个反馈，意思告诉我说，他们要对你发起请求了。）")])]),s._v(" "),t("li",[t("p",[s._v("当我的监听的人，给我反馈的时候，我再去处理，我需不要等待？？\n不需要。比如，我们原先去处理的时候，我要调用accept函数，这个函数会阻塞（或者说等待，等待，客户端给我发链接）")])]),s._v(" "),t("li",[t("p",[s._v("但是，现在阻塞等待这个事情，我让内核去干了。内核什么时候会给我反馈呢？那就是有人给我有连接请求了。")])]),s._v(" "),t("li",[t("p",[s._v("所以说，当他给了我反馈的时候，我还需要等待吗？不需要！可以立即完成连接的建立。")])])]),s._v(" "),t("h4",{attrs:{id:"_2、建立连接之『后』的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、建立连接之『后』的好处"}},[s._v("#")]),s._v(" 2、建立连接之『后』的好处")]),s._v(" "),t("ul",[t("li",[s._v("我们连接之后的那条线，我们也可以把它丢给内核，要不然的话，我还得阻塞在这继续监听，是否给我发数据。")]),s._v(" "),t("li",[s._v("内核你帮我，反正你监听一个也是听，听一堆也是听。监听到有请求的时候，再给我发一个反馈。当我收到反馈的时候，我应该干啥？")]),s._v(" "),t("li",[s._v("表示对方已经写过了数据啥的了，都已经写到这边了，我所要做的事情就是，在这个基础上，直接和对方去通信（read）")]),s._v(" "),t("li",[s._v("如上，内核的这种行为有点像：我们先前讲信号的时候。注册那个信号捕捉函数。\n内核给你反馈了，就说明有事件发生了，但是具体是什么事件，还是不知道。\n比如，我向内核注册一下，帮我看着几个人，\n当内核你看到他有行动的时候，你再告诉我。")]),s._v(" "),t("li",[s._v("有了内核帮我监听，那么我这个serve.c就解放出来了。\n"),t("ul",[t("li",[s._v("我就不需要再阻塞了，我设置完监听之后，就可以去做其他的时候了。")]),s._v(" "),t("li",[s._v("上面就是多路IO转接的基本思想。")]),s._v(" "),t("li",[s._v("我们要讲的3种，思路几乎和这个一致。")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-select详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-select详解"}},[s._v("#")]),s._v(" 3.select详解")]),s._v(" "),t("p",[s._v("特点：")]),s._v(" "),t("p",[s._v("1、用『数组』实现，文件描述符受到控制")]),s._v(" "),t("p",[s._v("3、超时的时间控制在纳秒级别『ns』")]),s._v(" "),t("p",[s._v("具体实施的话，驱使我们先前的那个内核工作的，是谁来**驱使（需要用到函数，比如select）**呢？")]),s._v(" "),t("p",[s._v("如何使用起来select")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("select\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("\tselect能监听的文件描述符个数受限于FD_SETSIZE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("一般为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("，单纯改变进程打开的文件描述符个数并不能改变select监听文件个数\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("\t解决"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("以下客户端时使用select是很合适的，但如果链接客户端过多，select采用的是轮询模型，会大大降低服务器响应效率，不应在select上投入更多精力\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/select.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* According to earlier standards */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/time.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sys/types.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("select")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("readfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("writefds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\tfd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("exceptfds"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("timeval")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\tnfds"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" \t\t监控的文件描述符集里最大文件描述符加"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，因为此参数会告诉内核检测前多少个文件描述符的状态\n\treadfds：\t监控有读数据到达文件描述符集合，传入传出参数\n\twritefds：\t监控写数据到达文件描述符集合，传入传出参数\n\texceptfds：\t监控异常发生达文件描述符集合"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("如带外数据到达异常，传入传出参数\n\ttimeout：\t定时阻塞监控时间，"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("种情况\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),s._v("，永远等下去\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v("设置timeval，等待固定时间\n\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v("设置timeval里时间均为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，检查描述字后立即返回，轮询\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("timeval")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" tv_sec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* seconds */")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" tv_usec"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* microseconds */")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_CLR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//把文件描述符集合里fd清0")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_ISSET")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//测试文件描述符集合里fd是否置1")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_SET")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//把文件描述符集合里fd位置1")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("FD_ZERO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fd_set "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//把文件描述符集合里所有位清0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//上面4个函数重要。有的函数，有点类似信号那部分的啥的？")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("p",[s._v("select函数一调，相当于，select函数会驱使内核帮助你完成监听。\n笼统的说，那就是借助select帮我监听、")]),s._v(" "),t("h3",{attrs:{id:"_4-poll详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-poll详解"}},[s._v("#")]),s._v(" 4.poll详解")]),s._v(" "),t("p",[s._v("特点：")]),s._v(" "),t("p",[s._v("1、实际上是在select这种模型上进行的一种升级，或者说，是改版。")]),s._v(" "),t("p",[s._v("2、函数原型比select简单")]),s._v(" "),t("p",[s._v("3、超时的时间控制在毫秒级别『ms』")]),s._v(" "),t("h3",{attrs:{id:"_5-epoll『linux专用』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-epoll『linux专用』"}},[s._v("#")]),s._v(" 5.epoll『Linux专用』")]),s._v(" "),t("blockquote",[t("p",[s._v("彻底学会"),t("a",{attrs:{href:"http://blog.chinaunix.net/uid-28541347-id-4273856.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("epoll模式"),t("OutboundLink")],1)])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("epoll是Linux下多路复用IO接口select/poll的增强版本，它能显著提高程序在大量并发连接中只有少量活跃的情况下的系统CPU利用率，因为它会复用文件描述符集合来传递结果而不用迫使开发者每次等待事件之前都必须重新准备要被侦听的文件描述符集合，另一点原因就是获取事件的时候，它无须遍历整个被侦听的描述符集，只要遍历那些被内核IO事件异步唤醒而加入Ready队列的描述符集合就行了。"),t("br"),s._v("\n目前epell是linux大规模并发网络程序中的热门首选模型。")])]),s._v(" "),t("li",[t("p",[s._v("epoll除了提供select/poll那种IO事件的**电平触发（Level Triggered）**外，还提供了边沿触发（Edge Triggered），这就使得用户空间程序有可能缓存IO状态，减少epoll_wait/epoll_pwait的调用，提高应用程序效率。")])]),s._v(" "),t("li",[t("p",[s._v("多路IO转接服务器")])])]),s._v(" "),t("p",[s._v("要掌握epoll与前面的select和poll的区别和联系，以及，epoll的缺点。"),t("br"),s._v("\nepoll的两种模式：epoll ET 和epoll LT")]),s._v(" "),t("h4",{attrs:{id:"et-edge-triggered-边沿触发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#et-edge-triggered-边沿触发"}},[s._v("#")]),s._v(" ET（Edge Triggered，边沿触发）")]),s._v(" "),t("p",[s._v("边沿触发。    event = EPOLLIN | EPOLLET")]),s._v(" "),t("h4",{attrs:{id:"lt-level-triggered-电平触发-水平触发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lt-level-triggered-电平触发-水平触发"}},[s._v("#")]),s._v(" LT（Level Triggered，电平触发/水平触发）")]),s._v(" "),t("p",[s._v("​\t\t水平触发。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('epoll 非阻塞IO\n\n\t边沿触发    while(read())   fcntl(O_NONBLOCK);\n\n\nepoll 反应堆模型 (libevent 核心思想实现)\n\n\tlibevent  -- 跨平台   精炼--epoll  回调   \n\n\t1. epoll --- 服务器 --- 监听 --- fd ----可读 ---- epoll返回 ---- read --- 小写转大写 --- write ---- epoll继续监听。\n\n\t2. epoll 反应堆模型： ("滑动窗口")\n\n\t1) epoll --- 服务器 --- 监听 --- cfd ---- 可读 ---- epoll返回 ---- read -- cfd从树上摘下 --- 设置监听cfd写事件， 操作 \n')])])])])}),[],!1,null,null,null);t.default=e.exports}}]);