(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{463:function(t,a,r){"use strict";r.r(a);var e=r(14),s=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"高性能服务器开发的2种模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高性能服务器开发的2种模式"}},[t._v("#")]),t._v(" 高性能服务器开发的2种模式")]),t._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v('<font style="background:yellow">\n「**对事件反应**」\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"_1-维基百科"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-维基百科"}},[t._v("#")]),t._v(" 1.维基百科")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%BA%94%E5%99%A8%E6%A8%A1%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("反应器模式"),a("OutboundLink")],1),t._v("（Reactor_pattern）")]),t._v(" "),a("li",[t._v("Proactor模式")])]),t._v(" "),a("blockquote",[a("p",[t._v("来源：")])]),t._v(" "),a("ul",[a("li",[t._v("当下开源软件能做到网络高性能的原因就是 I/O 多路复用吗？\n"),a("ul",[a("li",[t._v("是的，基本是基于 I/O 多路复用，用过 I/O 多路复用接口写网络程序的同学，肯定知道是"),a("strong",[t._v("面向过程")]),t._v("的方式写代码的，这样的开发的效率不高。")]),t._v(" "),a("li",[t._v("于是，大佬们基于『"),a("strong",[t._v("面向对象")]),t._v("』的思想，对 I/O 多路复用作了一层封装，让使用者不用考虑底层网络 API 的细节，只需要关注应用代码的编写。")]),t._v(" "),a("li",[t._v("大佬们还为这种模式取了个让人第一时间难以理解的名字："),a("strong",[t._v("Reactor 模式")]),t._v("。")]),t._v(" "),a("li",[t._v("这里的反应指的是「"),a("strong",[t._v("对事件反应")]),t._v("」，也就是"),a("strong",[t._v("来了一个事件，Reactor 就有相对应的反应/响应")]),t._v("。事实上，Reactor 模式也叫 "),a("code",[t._v("Dispatcher")]),t._v(" 模式，我觉得这个名字更贴合该模式的含义，即 "),a("strong",[t._v("I/O 多路复用监听事件，收到事件后，根据事件类型分配（Dispatch）给某个进程 / 线程")]),t._v("。")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-思维导图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-思维导图"}},[t._v("#")]),t._v(" 2.思维导图")]),t._v(" "),a("ul",[a("li",[t._v("Reactor模式分类\n"),a("ul",[a("li",[t._v("单Reactor+单(进程/线程)")]),t._v(" "),a("li",[t._v("单Reactor+多(进程/线程)")]),t._v(" "),a("li",[t._v("多Reactor+单(进程/线程)『"),a("font",{staticStyle:{background:"yellow"}},[t._v("实现复杂+没有性能优势，实际中并没有应用")]),t._v("』")],1),t._v(" "),a("li",[t._v("多Reactor+多(进程/线程)")])])]),t._v(" "),a("li",[t._v("Proactor模式")])]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[t._v("小林Coding，"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg4NjUxMzg5MA==&mid=2247491003&idx=2&sn=83127bc412c3ffaa26098d978e7fb77e&chksm=cf99d436f8ee5d2017ed56ae85945b02291ff0a226ea1b76a1069a1e78607439c39d33aa357f&mpshare=1&scene=23&srcid=0729fuqRJrVwsYqMTHnsjqs6&sharer_sharetime=1627550317403&sharer_shareid=7d02bdfe8ee477ab2b773f2df63f3163#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解高性能服务器开发两种模式"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=s.exports}}]);