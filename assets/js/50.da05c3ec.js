(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{373:function(a,s,r){"use strict";r.r(s);var t=r(25),e=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"wireshark网络分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wireshark网络分析"}},[a._v("#")]),a._v(" Wireshark网络分析")]),a._v(" "),s("h2",{attrs:{id:"📑目录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#📑目录"}},[a._v("#")]),a._v(" 📑目录")]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#📑目录"}},[a._v("📑目录")])]),s("li",[s("a",{attrs:{href:"#_1-wireshark介绍"}},[a._v("1.Wireshark介绍")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1-过滤演示"}},[a._v("（1）过滤演示")])]),s("li",[s("a",{attrs:{href:"#_2-wireshark包过滤"}},[a._v("（2）wireshark包过滤")])])])]),s("li",[s("a",{attrs:{href:"#_2-『伯克利』过滤器介绍"}},[a._v("2.『伯克利』过滤器介绍")]),s("ul",[s("li",[s("a",{attrs:{href:"#_2-1-概念"}},[a._v("2.1.概念")])]),s("li",[s("a",{attrs:{href:"#_2-2-语法"}},[a._v("2.2.语法")])]),s("li",[s("a",{attrs:{href:"#_2-3-自己总结的语法"}},[a._v("2.3.自己总结的语法")])]),s("li",[s("a",{attrs:{href:"#_2-4-wireshark包过滤器分类"}},[a._v("2.4.wireshark包过滤器分类：")])])])]),s("li",[s("a",{attrs:{href:"#_3-『捕获』过滤器『前面』"}},[a._v("3.『捕获』过滤器『前面』")]),s("ul",[s("li",[s("a",{attrs:{href:"#_3-1-只捕获目标端口为80的tcp数据包"}},[a._v("3.1.只捕获目标端口为80的tcp数据包")])]),s("li",[s("a",{attrs:{href:"#_3-2-捕获主机p地址为192-168-4-5的数据包"}},[a._v("3.2.捕获主机P地址为192.168.4.5的数据包")])]),s("li",[s("a",{attrs:{href:"#_3-3-语法很像直接的伯克利表达式"}},[a._v("3.3.语法很像直接的伯克利表达式")])])])]),s("li",[s("a",{attrs:{href:"#_4-『筛选』过滤器『后面』"}},[a._v("4.『筛选』过滤器『后面』")])]),s("li",[s("a",{attrs:{href:"#_5-wireshark捕获输出"}},[a._v("5.Wireshark捕获输出")]),s("ul",[s("li",[s("a",{attrs:{href:"#_5-1-设置输出文件格式"}},[a._v("5.1.设置输出文件格式")])]),s("li",[s("a",{attrs:{href:"#_5-2-输出文件位置"}},[a._v("5.2.输出文件位置")])]),s("li",[s("a",{attrs:{href:"#_5-3-数据流特别大-会导致文件太大-导致wireshark无法正常打开保存的文件"}},[a._v("5.3.数据流特别大，会导致文件太大，导致wireshark无法正常打开保存的文件")])]),s("li",[s("a",{attrs:{href:"#_5-4-使用wireshark进行网络监控-无论硬盘空间多大都有可能会被消耗殆尽"}},[a._v("5.4.使用wireshark进行网络监控，无论硬盘空间多大都有可能会被消耗殆尽")])]),s("li",[s("a",{attrs:{href:"#_5-5捕获选项"}},[a._v("5.5捕获选项")])]),s("li",[s("a",{attrs:{href:"#_5-6-使用文件中的保存"}},[a._v("5.6.使用文件中的保存")])])])]),s("li",[s("a",{attrs:{href:"#_6-wireshark杂项设置"}},[a._v("6.Wireshark杂项设置")]),s("ul",[s("li",[s("a",{attrs:{href:"#_6-1-查看wireshark『内置文件』路径"}},[a._v("6.1.查看wireshark『内置文件』路径")])])])]),s("li",[s("a",{attrs:{href:"#参考资料"}},[a._v("参考资料")])])])]),s("p"),a._v(" "),s("p",[a._v("[TOC]")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("Capture  n.战利品；l『捕获』；俘虏；占领，『抓取』\nfilter\tv.过滤\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("ul",[s("li",[a._v("wireshark中，比如“抓包 （ packet )”一词本身就不够精确，"),s("strong",[a._v("Wireshark抓到的应该是帧(frame )")]),a._v('。但是出于表达习惯，我并没有改成“抓帧”。又比如对同一个网络分层的称呼，工程师们也有不同的习惯,希望读者能够接受这些“混乱"。')])]),a._v(" "),s("h2",{attrs:{id:"_1-wireshark介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-wireshark介绍"}},[a._v("#")]),a._v(" 1.Wireshark介绍")]),a._v(" "),s("ul",[s("li",[a._v("1、功能：网络流量『捕获』和『分析』的软件")]),a._v(" "),s("li",[a._v("网络工作者：网络工程师or运维工程师or安全方面人员or，不会wireshark的使用工具，就不是一个合格的网络工作者")]),a._v(" "),s("li",[a._v("2、历史：Ethereal是wireshark前身，2006年更名为wireshark，改名的原因是『商标和版权』好像")]),a._v(" "),s("li",[a._v("3、原理：由于wireshark会调用咋们这些，底层的网络或功能，从硬件上捕获对应的二进制流量（咋们在网络过程中所有的数据or数据包，都是以0,1序列，这个二进制数据包来传输的。")])]),a._v(" "),s("p",[a._v("捕获，之后，wireshark内部具有对应的功能转换器，将0，1序列转换或者是组装为1个合法的数据包，然后分析咋们组装好的数据包，识别出，其中的协议，端口，以及目的地等信息。从而使得wireshark捕获之后，会以咋们人类可以识别的方式的这种信息来展示，使得咋们更直观的查看到网络流量。")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("1、『捕获』二进制流量\n2、『转换』wireshark组装数据包『wireshark内部具有对应的功能转换器』\n3、分析捕获的数据包，识别协议等信息\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("ul",[s("li",[a._v("4、优势：开源免费，跨平台，可视化『比如tcpdump是命令行』，功能强大『支持的协议特别多，几乎涵盖现在所有已知的所有协议』")]),a._v(" "),s("li",[a._v("5、下载安装：官网")]),a._v(" "),s("li",[a._v("6、基本使用方式：『4步骤』")])]),a._v(" "),s("div",{staticClass:"language-txr line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("1、选择网卡『因为网络流量是通过网卡在网络当中进行传输，网卡是可以接收流向该网卡或者是在局域网某个网络中的流量，并且接收和发送你要送出的这个数据包\n这是流入流出的关键例子，，因为你的计算机可能有多张网卡，\n比如，我们最简单的实例，（lo网卡）环回网卡127.0.0.1，其实它也是计算机虚拟出来的一张网卡，\n2、捕获数据流量\n3、过滤数据包『数据流量捕获之后，我们可能不想查看某些数据流量，此时，我们就可以通过其中的过滤数据包功能，过滤掉某些数据包，只显示我们想要分析的\n4、保存数据包『咋们分析完之后，可能获得一个结论，但是你要给别人看，或者是下次分析的时候，你不可能再次抓一次包，因为网络环境在变，下次抓的包很有可能是不同的，为了方便分析，wireshark提供了保存数据包功能\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[a._v("wireshark在Linux下使用，可以在终端用")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("wireshark\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("打开")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ifconfig")]),a._v(" 查看网卡\neth0 是对外的网卡\nlo 是本地环回网卡\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"_1-过滤演示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-过滤演示"}},[a._v("#")]),a._v(" （1）过滤演示")]),a._v(" "),s("p",[a._v("点击expression，但是我的好像没有")]),a._v(" "),s("p",[a._v("只要看http协议，过滤表达式的书写")]),a._v(" "),s("div",{staticClass:"language-wireshark line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("http\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("然后点击应用，也可能是回车，这样就只看http的了")]),a._v(" "),s("p",[a._v("保存前，要停止抓包，保存类似word")]),a._v(" "),s("p",[a._v("可以保存的文件后缀")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("pcapng\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-wireshark包过滤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-wireshark包过滤"}},[a._v("#")]),a._v(" （2）wireshark包过滤")]),a._v(" "),s("ul",[s("li",[a._v("wireshark抓包界面介绍：后面操作过程中，会知道我们该在哪找具体的功能。以及如何查看对应的信息")]),a._v(" "),s("li",[a._v("伯克利包过滤介绍")])]),a._v(" "),s("p",[a._v("工具栏下面是个『筛选器』")]),a._v(" "),s("p",[a._v("或者说是『筛选过滤器』")]),a._v(" "),s("p",[a._v("通过这个可以筛选掉一些无关紧要的内容，使得只显示我们想要查看的某些数据包")]),a._v(" "),s("p",[a._v("『所以，我觉得这个名字取得不好，分明是查找我们要的，硬要转个弯说是过滤掉不要的』")]),a._v(" "),s("p",[a._v("比如，想要过滤，就使用快捷键"),s("code",[a._v("Ctr+/")])]),a._v(" "),s("h2",{attrs:{id:"_2-『伯克利』过滤器介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-『伯克利』过滤器介绍"}},[a._v("#")]),a._v(" 2.『伯克利』过滤器介绍")]),a._v(" "),s("h3",{attrs:{id:"_2-1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-概念"}},[a._v("#")]),a._v(" 2.1.概念")]),a._v(" "),s("ul",[s("li",[a._v("伯克利包过滤规则：『这是一种核心思想』")]),a._v(" "),s("li",[a._v("BPF(Berkeley Packet Filter)采用与"),s("strong",[a._v("自然语言相近")]),a._v("的语法，利用语法构造字符串确定"),s("strong",[a._v("保留")]),a._v("具体符合规则的数据包而忽略其他数据包。")])]),a._v(" "),s("h3",{attrs:{id:"_2-2-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-语法"}},[a._v("#")]),a._v(" 2.2.语法")]),a._v(" "),s("p",[a._v("1、最简单的筛选规则：一个空白字符『无论你任何的数据包都将符合咋们空白字符』这是BPF的基础")]),a._v(" "),s("p",[a._v("2、语法规则：『3部分』")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("type 表示对象『类似自然语言中的主语』，如IP地址、子网或者端口\thost、net、port\ndir 表示数据包传输的方向\tsrc、dst\nproto 表示与数据包匹配的协议类型\tether、ip、tcp、arp\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("ul",[s("li",[a._v("其中，IP地址锁定某个具体主机，对应的子网锁定某个范围的多个主机，端口是锁定某个具体的服务『通过它可以确定网络上具体的某个对象』")])]),a._v(" "),s("p",[a._v("3、语法样例『演示』")]),a._v(" "),s("h4",{attrs:{id:"_1、ip地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、ip地址"}},[a._v("#")]),a._v(" 1、IP地址")]),a._v(" "),s("p",[a._v("『筛选出，源IP或者目的IP是这个IP地址的』")]),a._v(" "),s("p",[a._v("IP地址为192.168.4.5")]),a._v(" "),s("ul",[s("li",[a._v("伯克利语法")])]),a._v(" "),s("div",{staticClass:"language-wireshark line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("host 192.168.4.5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("注意上面的不能直接用，必须用户，我们的IP对应的就是伯克利表示式对应的host后面的")]),a._v(" "),s("ul",[s("li",[a._v("wireshark语法")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ip.addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".4.5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h4",{attrs:{id:"_2、src地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、src地址"}},[a._v("#")]),a._v(" 2、src地址")]),a._v(" "),s("p",[a._v("源地址为192.168.4.5")]),a._v(" "),s("div",{staticClass:"language-wireshark line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("src 192.168.4.5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ul",[s("li",[a._v("wireshark语法")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ip.src "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.236\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h4",{attrs:{id:"_3、dst"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、dst"}},[a._v("#")]),a._v(" 3、dst")]),a._v(" "),s("p",[a._v("目的地址簿是192.168.4.5")]),a._v(" "),s("div",{staticClass:"language-wireshark line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("dst 192.168.4.5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("ul",[s("li",[a._v("wireshark语法")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ip.dst "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.236\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h4",{attrs:{id:"_4、port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、port"}},[a._v("#")]),a._v(" 4、port")]),a._v(" "),s("p",[a._v("目标端口是80")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("dst port "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".4.5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面的语法中：所有端口port前面，可以添加tcp或udp。比如：udp.port和tcp.port，额，曾前面加tcp啥的，还加了一个.")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tcp.port "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tcp.port "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" udp.port "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h4",{attrs:{id:"_5、网络范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、网络范围"}},[a._v("#")]),a._v(" 5、网络范围")]),a._v(" "),s("ul",[s("li",[a._v("伯克利语法")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("net "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".4.0/24\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("CIDR『"),s("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/%E6%97%A0%E7%B1%BB%E5%88%AB%E5%9F%9F%E9%97%B4%E8%B7%AF%E7%94%B1",target:"_blank",rel:"noopener noreferrer"}},[a._v("无类别域间路由"),s("OutboundLink")],1),a._v("』，，，表示无域间域名类型转换")]),a._v(" "),s("p",[a._v("通过它，可以表示某个网络范围内的所有IP地址或者是主机。")]),a._v(" "),s("ul",[s("li",[a._v("wireshark语法")])]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("ip.addr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.0/24\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("上面这样的就能。筛选出，IP地址在对应的子网当中的内容")]),a._v(" "),s("h4",{attrs:{id:"_6、并且和或"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、并且和或"}},[a._v("#")]),a._v(" 6、并且和或")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tcp.port "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" and ip.dst "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.236\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-3-自己总结的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-自己总结的语法"}},[a._v("#")]),a._v(" 2.3.自己总结的语法")]),a._v(" "),s("ul",[s("li",[a._v("wireshark语法，感觉是协议.协议内容 == 逻辑关键词（||或and或not）")])]),a._v(" "),s("p",[a._v("所以，src和dst和ip才是在ip中封装")]),a._v(" "),s("h3",{attrs:{id:"_2-4-wireshark包过滤器分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-wireshark包过滤器分类"}},[a._v("#")]),a._v(" 2.4.wireshark包过滤器分类：")]),a._v(" "),s("ul",[s("li",[a._v("『捕获』过滤器：是在咋们在"),s("strong",[a._v("抓包之前")]),a._v("，进行设置，这样wireshark就不会抓获不符合规则的数据包『设置包捕获过滤器的方法：Capture filter for selected interfaces:设置，")]),a._v(" "),s("li",[a._v("『筛选』过滤器：是在"),s("strong",[a._v("抓包之后")]),a._v("，应用的，是『显示过滤器』，我们"),s("strong",[a._v("前面用的功能都是这种过滤器")]),a._v("！！！")])]),a._v(" "),s("h2",{attrs:{id:"_3-『捕获』过滤器『前面』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-『捕获』过滤器『前面』"}},[a._v("#")]),a._v(" 3.『捕获』过滤器『前面』")]),a._v(" "),s("ul",[s("li",[a._v("遵循伯克利过滤器语法规则：也就是说，前面的语法也遵循")]),a._v(" "),s("li",[a._v("演示：")])]),a._v(" "),s("h3",{attrs:{id:"_3-1-只捕获目标端口为80的tcp数据包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-只捕获目标端口为80的tcp数据包"}},[a._v("#")]),a._v(" 3.1.只捕获目标端口为80的tcp数据包")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("tcp dst port "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_3-2-捕获主机p地址为192-168-4-5的数据包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-捕获主机p地址为192-168-4-5的数据包"}},[a._v("#")]),a._v(" 3.2.捕获主机P地址为192.168.4.5的数据包")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.236\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("或者")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("dst "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.236\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("src "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".3.236\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("注意：捕获过滤器，不支持我们起那么的那只CIDR的书写以及主机名的写法")]),a._v(" "),s("h3",{attrs:{id:"_3-3-语法很像直接的伯克利表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-语法很像直接的伯克利表达式"}},[a._v("#")]),a._v(" 3.3.语法很像直接的伯克利表达式")]),a._v(" "),s("h2",{attrs:{id:"_4-『筛选』过滤器『后面』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-『筛选』过滤器『后面』"}},[a._v("#")]),a._v(" 4.『筛选』过滤器『后面』")]),a._v(" "),s("ul",[s("li",[a._v("筛选过滤器，又称『显示过滤器』")])]),a._v(" "),s("p",[a._v("1、显示过滤器创建『2种方法』")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("输入框创建，快捷键Ctrl+/")])]),a._v(" "),s("li",[s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("http.request.full_uri "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"www.baidu.com"')]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("数据包细节面板创建『就是你查看某个包的细节，你右键那个选中，就能选择』")])])]),a._v(" "),s("p",[a._v("2、表达式规则")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("语法：主题+运算符+值")])]),a._v(" "),s("li",[s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("运算符比如： "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("逻辑关系（3个）下面6种写法都OK")])]),a._v(" "),s("li",[s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("and or not\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])])]),a._v(" "),s("p",[a._v("此外!!:可以使用圆括号来控制了『优先级』")]),a._v(" "),s("h2",{attrs:{id:"_5-wireshark捕获输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-wireshark捕获输出"}},[a._v("#")]),a._v(" 5.Wireshark捕获输出")]),a._v(" "),s("ul",[s("li",[a._v("捕获的数据包如何进行有规则的保存？")])]),a._v(" "),s("h3",{attrs:{id:"_5-1-设置输出文件格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-设置输出文件格式"}},[a._v("#")]),a._v(" 5.1.设置输出文件格式")]),a._v(" "),s("ul",[s("li",[a._v("pcap-ng还是pcap")])]),a._v(" "),s("p",[a._v("可以在选项中设置。容易")]),a._v(" "),s("h3",{attrs:{id:"_5-2-输出文件位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-输出文件位置"}},[a._v("#")]),a._v(" 5.2.输出文件位置")]),a._v(" "),s("h3",{attrs:{id:"_5-3-数据流特别大-会导致文件太大-导致wireshark无法正常打开保存的文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-数据流特别大-会导致文件太大-导致wireshark无法正常打开保存的文件"}},[a._v("#")]),a._v(" 5.3.数据流特别大，会导致文件太大，导致wireshark无法正常打开保存的文件")]),a._v(" "),s("ul",[s("li",[a._v("比如用wireshark抓取某个主机流量的时候，可能这个数据特别大。当然你如果在本地不开任何网络程序的话，可能数据量是非常小的，但是如果你监听大型服务器的话，它的数据流量就是特别大的，如果把数据流量保持，此时会导致，无法打开超大量的文件，会出现卡顿")]),a._v(" "),s("li",[a._v("解决方案：设置自动创建新文件，每隔10秒创建一个文件。")]),a._v(" "),s("li",[s("strong",[a._v("『捕获选项』中修改")])])]),a._v(" "),s("h3",{attrs:{id:"_5-4-使用wireshark进行网络监控-无论硬盘空间多大都有可能会被消耗殆尽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-使用wireshark进行网络监控-无论硬盘空间多大都有可能会被消耗殆尽"}},[a._v("#")]),a._v(" 5.4.使用wireshark进行网络监控，无论硬盘空间多大都有可能会被消耗殆尽")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("『捕获选项』中修改")])]),a._v(" "),s("li",[a._v("解决方案:环形缓存器")])]),a._v(" "),s("h3",{attrs:{id:"_5-5捕获选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5捕获选项"}},[a._v("#")]),a._v(" 5.5捕获选项")]),a._v(" "),s("p",[a._v("显示选项Display option\n解析名称Name Resolution\n自动停止捕获Automatically scrpll during live capture『比如设置抓20个文件的包，就停止』")]),a._v(" "),s("h3",{attrs:{id:"_5-6-使用文件中的保存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-使用文件中的保存"}},[a._v("#")]),a._v(" 5.6.使用文件中的保存")]),a._v(" "),s("ul",[s("li",[a._v("容易，Ctrl+S")])]),a._v(" "),s("h2",{attrs:{id:"_6-wireshark杂项设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-wireshark杂项设置"}},[a._v("#")]),a._v(" 6.Wireshark杂项设置")]),a._v(" "),s("ul",[s("li",[a._v("wireshark中特别边角料，但是也可能绊倒你的杂项设置")])]),a._v(" "),s("h3",{attrs:{id:"_6-1-查看wireshark『内置文件』路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-查看wireshark『内置文件』路径"}},[a._v("#")]),a._v(" 6.1.查看wireshark『内置文件』路径")]),a._v(" "),s("ul",[s("li",[a._v("设置，或者说不是用来配置，而是为了来帮助我们找到具体的文件路径的方式。")]),a._v(" "),s("li",[a._v("我们可以找到，wireshark的所有相关文件，比如说『它的配置文件』和它的使用到的文件路径")])]),a._v(" "),s("p",[a._v("还有，我们这个类似的VScode中装的『插件』啥的，都可以在这个里面看到。还可以看『快捷键』")]),a._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("ul",[s("li",[a._v("网络安全"),s("a",{attrs:{href:"https://www.wangan.com/docs/1006",target:"_blank",rel:"noopener noreferrer"}},[a._v("wireshark中文使用教程"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("W3C中"),s("a",{attrs:{href:"https://www.w3cschool.cn/wireshark/o71m5ozt.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("wireshark"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("wireshark用户手册，"),s("a",{attrs:{href:"https://www.ctolib.com/docs/sfile/wireshark-manual/0.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("中文翻译版"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("小林Coding，"),s("a",{attrs:{href:"https://gitbook.cn/gitchat/activity/5ec68ab2e80cd341fa46d2c0",target:"_blank",rel:"noopener noreferrer"}},[a._v("让你“看见TCP”"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("Github，《计算机网络－自顶向下方法》"),s("a",{attrs:{href:"http://moranzcw.com/Computer-Networking-A-Top-Down-Approach-NOTES/",target:"_blank",rel:"noopener noreferrer"}},[a._v("实验翻译"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("wireshark官网的"),s("a",{attrs:{href:"https://www.wireshark.org/docs/wsdg_html_chunked/",target:"_blank",rel:"noopener noreferrer"}},[a._v("开发者指南"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("C语言中文网-"),s("a",{attrs:{href:"http://c.biancheng.net/view/6379.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("wireshark安装"),s("OutboundLink")],1)]),a._v(" "),s("li",[a._v("[美]Chris Sanders，《"),s("a",{attrs:{href:"https://book.douban.com/subject/21691692/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Wireshark数据包分析实战"),s("OutboundLink")],1),a._v("》")]),a._v(" "),s("li",[a._v("林沛满，《"),s("a",{attrs:{href:"https://book.douban.com/subject/26268767/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Wireshark网络分析就这么简单"),s("OutboundLink")],1),a._v("》")]),a._v(" "),s("li",[a._v("51CTO，"),s("a",{attrs:{href:"https://edu.51cto.com/course/18664.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Wireshark网络分析实践"),s("OutboundLink")],1),a._v("，Xmind版")])])])}),[],!1,null,null,null);s.default=e.exports}}]);