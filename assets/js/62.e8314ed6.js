(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{352:function(s,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"ansi-c语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ansi-c语言"}},[s._v("#")]),s._v(" ANSI C语言")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background:yellow">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[s._v("#")]),s._v(" 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#目录"}},[s._v("目录")])]),t("li",[t("a",{attrs:{href:"#c语言学习的-临界点"}},[s._v("C语言学习的”临界点“")])]),t("li",[t("a",{attrs:{href:"#💬辨析-声明和定义"}},[s._v("💬辨析：声明和定义")])]),t("li",[t("a",{attrs:{href:"#💬辨析-初始化和赋值"}},[s._v("💬辨析：初始化和赋值")])]),t("li",[t("a",{attrs:{href:"#⏰c语言标准历史"}},[s._v("⏰C语言标准历史")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-标准-k-r-c"}},[s._v("1.标准K&R C")])]),t("li",[t("a",{attrs:{href:"#_2-标准ansi-c、iso-c、c89、c90-重点"}},[s._v("2.标准ANSI C、ISO C、C89、C90  （重点）")])]),t("li",[t("a",{attrs:{href:"#_3-c99标准-2000"}},[s._v("3.C99标准（2000）")])]),t("li",[t("a",{attrs:{href:"#_4-c11标准-2011"}},[s._v("4.C11标准（2011）")])])])]),t("li",[t("a",{attrs:{href:"#✅语法篇"}},[s._v("✅语法篇")])]),t("li",[t("a",{attrs:{href:"#c和c-变量命名规则探讨-thinking"}},[s._v("C和C++变量命名规则探讨？🤔")])]),t("li",[t("a",{attrs:{href:"#_1-switch语法⭐️"}},[s._v("1.switch语法⭐️")])]),t("li",[t("a",{attrs:{href:"#⭐️类型转换"}},[s._v("⭐️类型转换?")])]),t("li",[t("a",{attrs:{href:"#✔️参加位运算的数据其类型不能是"}},[s._v("✔️参加位运算的数据其类型不能是？")])]),t("li",[t("a",{attrs:{href:"#_2-常用ascii码值记忆法"}},[s._v("2.常用ASCII码值记忆法")])]),t("li",[t("a",{attrs:{href:"#_3-数组的『初始化方式』⭐️"}},[s._v("3.数组的『初始化方式』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-问题由来"}},[s._v("3.1.问题由来")])]),t("li",[t("a",{attrs:{href:"#_3-2-完全初始化"}},[s._v("3.2.完全初始化")])]),t("li",[t("a",{attrs:{href:"#_2-3-完全不初始化-uninitialized"}},[s._v("2.3.完全不初始化（uninitialized）")])]),t("li",[t("a",{attrs:{href:"#_2-4-不完全初始化"}},[s._v("2.4.不完全初始化")])]),t("li",[t("a",{attrs:{href:"#_2-5-假装初始化-我编的"}},[s._v("2.5.假装初始化（我编的..）")])])])]),t("li",[t("a",{attrs:{href:"#_04-union『c语言中』"}},[s._v("04.union『C语言中』")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-union"}},[s._v("1.union")])]),t("li",[t("a",{attrs:{href:"#_2-union的特点"}},[s._v("2.union的特点")])])])]),t("li",[t("a",{attrs:{href:"#_05-位段-也叫位域-bit-field"}},[s._v("05.位段（也叫位域）Bit field")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1、引言"}},[s._v("1、引言")])]),t("li",[t("a",{attrs:{href:"#_2、语法"}},[s._v("2、语法")])]),t("li",[t("a",{attrs:{href:"#_3、位段的特点和『内存对齐』"}},[s._v("3、位段的特点和『内存对齐』")])])])]),t("li",[t("a",{attrs:{href:"#_06-c语言常量和c-常量"}},[s._v("06.C语言常量和C++常量")]),t("ul",[t("li",[t("a",{attrs:{href:"#_6-1-整数常量"}},[s._v("6.1.整数常量")])]),t("li",[t("a",{attrs:{href:"#_6-2-浮点常量"}},[s._v("6.2.浮点常量")])]),t("li",[t("a",{attrs:{href:"#_6-3-字符常量-a"}},[s._v("6.3.字符常量'a'")])]),t("li",[t("a",{attrs:{href:"#_6-4-字符串常量-a"}},[s._v('6.4.字符串常量"a"')])]),t("li",[t("a",{attrs:{href:"#_6-5-布尔型常量"}},[s._v("6.5.布尔型常量")])])])]),t("li",[t("a",{attrs:{href:"#_07-c语言-static-成员"}},[s._v("07.C语言static成员")])]),t("li",[t("a",{attrs:{href:"#🍀详解c语言中const"}},[s._v("🍀详解C语言中const")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-概述"}},[s._v("1.概述：")])]),t("li",[t("a",{attrs:{href:"#_2-基本用法"}},[s._v("2.基本用法：")])])])]),t("li",[t("a",{attrs:{href:"#参考资料"}},[s._v("参考资料")])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("h2",{attrs:{id:"c语言学习的-临界点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c语言学习的-临界点"}},[s._v("#")]),s._v(" C语言学习的”临界点“")]),s._v(" "),t("p",[s._v("突破学校传统教学C语言桎梏的几个重要知识")]),s._v(" "),t("ul",[t("li",[s._v("1、内存管理『记住内存管理的stack、heap、.bss、.data』")]),s._v(" "),t("li",[s._v("2、指针『1级指针、2级指针作为函数的输入和输出、多级指针定理、函数指针、数组指针、常量指针、源码阅读+工程级项目接口设计』")]),s._v(" "),t("li",[s._v("3、结构体的设计『"),t("strong",[s._v("数据结构的基础")]),s._v("、C++封装思想的基础』")]),s._v(" "),t("li",[s._v("4、数组和指针辨析")]),s._v(" "),t("li",[s._v("5、C语言写错误日志『文件输入输出、传统教学不强化的点』")]),s._v(" "),t("li",[s._v("6、Windows和Linux下的动态链接库设计『大型工程项目基础、Linux下依赖性的来源』")])]),s._v(" "),t("h2",{attrs:{id:"💬辨析-声明和定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#💬辨析-声明和定义"}},[s._v("#")]),s._v(" 💬辨析：声明和定义")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("声明≠定义")])])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("声明")]),s._v("（Declaration）：是指向编译器说明一个变量或函数的信息，包括：名字、类型、初始值等，即声明变量、函数的属性细节；")]),s._v(" "),t("li",[t("strong",[s._v("定义")]),s._v("（Definition）：则指明变量、函数存储在哪里，当定义发生时，系统为变量或函数分配内存单元。")])]),s._v(" "),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://linhongbo.com/posts/difference-between-definition-and-declaration/",target:"_blank",rel:"noopener noreferrer"}},[s._v("声明（Declaration）与定义（Definition）的区别"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"💬辨析-初始化和赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#💬辨析-初始化和赋值"}},[s._v("#")]),s._v(" 💬辨析：初始化和赋值")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("初始化")]),s._v("：在进行定义的时候，给它值是初始化")]),s._v(" "),t("li",[t("strong",[s._v("赋值")]),s._v("：定义之后，换一行或多行，才给它值，是赋值")])]),s._v(" "),t("blockquote",[t("p",[s._v("引申到C++：")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("C++中在class的初始化列表中有的必须写：\n1、const常量，原因是必须初始化，一旦初始化就不能修改了，也就是不能重新赋值\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("第4节、数组的不完全初始化辅助理解上述区别")]),s._v(" "),t("li",[s._v("只有在数组定义时，给数组值才叫初始化")]),s._v(" "),t("li",[t("strong",[s._v("定义")]),s._v("过后，再给数组值叫赋值")])]),s._v(" "),t("h2",{attrs:{id:"⏰c语言标准历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⏰c语言标准历史"}},[s._v("#")]),s._v(" ⏰C语言标准历史")]),s._v(" "),t("blockquote",[t("p",[s._v("参考书籍：《"),t("a",{attrs:{href:"https://book.douban.com/subject/26792521/",target:"_blank",rel:"noopener noreferrer"}},[s._v("C Primer Plus"),t("OutboundLink")],1),s._v("》")])]),s._v(" "),t("ul",[t("li",[s._v("本文将讲解C语言各种标准，并且描述其特点。")]),s._v(" "),t("li",[s._v("用处：帮助在开发中了解编译器支持什么标准，"),t("b",[s._v("更好的分析可能的编译出错原因")]),s._v("，因为，有时候可能"),t("code",[s._v("因为当前编译器支持的标准不同")]),s._v("就会导致编译出错")]),s._v(" "),t("li",[s._v("各种标准细说")])]),s._v(" "),t("h3",{attrs:{id:"_1-标准k-r-c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-标准k-r-c"}},[s._v("#")]),s._v(" 1.标准"),t("code",[s._v("K&R C")])]),s._v(" "),t("ul",[t("li",[s._v("1978年，丹尼斯•里奇（Dennis Ritchie）和布莱恩•柯林汉（Brian Kernighan）合作出版了"),t("b",[s._v("《C程序设计语言》的第一版")]),s._v("。"),t("b",[s._v("书中介绍的C语言标准也被称作“K&R C”")]),s._v("。")])]),s._v(" "),t("h3",{attrs:{id:"_2-标准ansi-c、iso-c、c89、c90-重点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-标准ansi-c、iso-c、c89、c90-重点"}},[s._v("#")]),s._v(" 2.标准ANSI C、ISO C、C89、C90  （重点）")]),s._v(" "),t("blockquote",[t("p",[s._v("(目前，我们说的"),t("b",[s._v("标准C")]),s._v("指的一般就是ANSI C)")]),s._v(" "),t("p",[s._v("典型用书:《C程序设计语言》的"),t("font",{attrs:{color:"red"}},[s._v("第二版")])],1)]),s._v(" "),t("ul",[t("li",[s._v("随着C语言使用得越来越广泛，出现了许多新问题，人们日益强烈地要求对C语言进行标准化。1983年，"),t("b",[s._v("美国国家标准协会（ANSI）")]),s._v("组成了一个委员会，X3J11，为了创立 C 的一套标准。经过漫长而艰苦的过程，该标准于"),t("b",[s._v("1989年")]),s._v("完成，这个版本的语言经常被称作"),t("b",[s._v("ANSI C")]),s._v("，或有时称为"),t("b",[s._v("C89（为了区别C99）")]),s._v("。")]),s._v(" "),t("li",[s._v("在"),t("b",[s._v("1990年")]),s._v("，ANSI C标准（带有"),t("b",[s._v("一些小改动")]),s._v("）被美国国家标准协会（ANSI）采纳为ISO/IEC 9899:1990。这个版本有时候称为"),t("b",[s._v("C90")]),s._v("或者"),t("b",[s._v("ISO C")]),s._v("。")]),s._v(" "),t("li",[s._v("综上，通常情况下，我们不加非常严格的区分，ANSI C、ISO C、C89、C90可以看做是同一种标准。")])]),s._v(" "),t("p",[s._v("传统C语言（K&R C）到 ANSI/ISO标准C语言的"),t("b",[s._v("改进")]),s._v("包括：")]),s._v(" "),t("ul",[t("li",[s._v("增加了真正的标准库")]),s._v(" "),t("li",[s._v("新的预处理命令与特性")]),s._v(" "),t("li",[s._v("函数原型允许在函数申明中指定参数类型")]),s._v(" "),t("li",[s._v("一些新的关键字，包括 const、volatile 与 signed  宽字符、宽字符串与字节多字符")]),s._v(" "),t("li",[s._v("对约定规则、声明和类型检查的许多小改动与澄清")])]),s._v(" "),t("h3",{attrs:{id:"_3-c99标准-2000"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-c99标准-2000"}},[s._v("#")]),s._v(" 3.C99标准（2000）")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("2000年3月，ANSI 采纳了 ISO/IEC 9899:1999 标准。这个标准通常指C99。")]),s._v(" "),t("li",[s._v("C99新增了一些特性:")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("1)"),t("b",[s._v("支持不定长的数组（柔性数组）")]),s._v("，即数组长度可以在运行时决定。")]),s._v(" "),t("li",[s._v("2)变量声明不必放在语句块的开头，for 语句"),t("b",[s._v("提倡写成 for(int i=0;i<100;++i) 的形式")]),s._v("，即i 只在for 语句块内部有效")]),s._v(" "),t("li",[s._v("3)初始化结构的时候允许对特定的元素赋值。")]),s._v(" "),t("li",[s._v("4)允许编译器化简非常数的表达式。")]),s._v(" "),t("li",[s._v("5)"),t("b",[s._v("取消了函数返回类型默认为 int 的规定。")])]),s._v(" "),t("li",[s._v("Tips：但是各个公司对C99的支持所表现出来的兴趣不同。当GCC和其它一些商业编译器支持C99的大部分特性的时候，微软和Borland却似乎对此不感兴趣，他们把更多的精力放在了C++上。")])])])]),s._v(" "),t("p",[s._v("典型的会造成下面情况的发生：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// C99允许在for循环内定义循环变量，而ANSIC C（C89）不允许")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("上面的语句，在ANSI C，是不能通过编译的。因为他不支付，编译后会显示：\n"),t("code",[s._v("[Error] 'for' loop initial declarations are only allowed in C99 or C11 mode")]),s._v("\n但是，从C99开始，就可以编译通过了。\ngcc下用这个方式可以指定用C99标准编译：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("gcc "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-std")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("c99 test.c "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" test.exe\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("Tips：")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("1)另外，事实上，"),t("b",[s._v("不定长数组")]),s._v("的定义早在C的C99标准里就已经被提出，但是"),t("b",[s._v("从来都没在C++标准（C++98、C++03、C++11）里存在过")]),s._v("。因此，"),t("b",[s._v("G++支持不定长数组完全是因为它"),t("font",{attrs:{color:"red",size:"4"}},[s._v("同时支持C99和C++")]),s._v("（对C99标准支持得最好的就是G++了）")],1),s._v("，而VS不怎么支持C99标准那是人尽皆知的，也就理所当然不支持C99的不定长数组了。")]),s._v(" "),t("li",[s._v("2)此外，目前没有编译器可以完全实现C99，而且"),t("b",[s._v("为了兼容性，在写C代码时，通常我们不会去用C99标准")]),s._v("，"),t("b",[s._v("编译器也是默认不使用C99")]),s._v("的，因此C语言的书里说不允许这样定义数组，也是可以理解的。而C++ primer里也这么说，那是因为它说的是事实，C++里根本就不支持不定长数组。")]),s._v(" "),t("li",[s._v("3)大概也是因为如上的原因，所以，"),t("font",{attrs:{color:"red",size:"3"}},[s._v("到目前为止，我们还是认为ANSI C才是标准C")]),s._v("。")],1)])]),s._v(" "),t("h3",{attrs:{id:"_4-c11标准-2011"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-c11标准-2011"}},[s._v("#")]),s._v(" 4.C11标准（2011）")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 在"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2011")]),s._v("年"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("月，ANSI 采纳了 ISO"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("IEC "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9899")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2011")]),s._v(" 标准。这个标准通常即C11，它是C程序语言的最新标准。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 与C99相比，C11有这些变化：\n\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("）对齐处理："),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alignof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("T"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("返回T的对齐方式，"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("aligned_alloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("以指定字节和对齐方式分配内存，头文件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("stdalign"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("定义了这些内容。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Noreturn")]),s._v("："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Noreturn")]),s._v("是个函数修饰符，位置在函数返回类型的前面，声明函数无返回值，有点类似于gcc的"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("__attribute__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("noreturn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，后者在声明语句尾部。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Generic")]),s._v("："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Generic")]),s._v("支持轻量级范型编程，可以把一组具有不同类型而却有相同功能的函数抽象为一个接口。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Static_assert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Static_assert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，静态断言，在编译时刻进行，断言表达式必须是在编译时期可以计算的表达式，而普通的"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("assert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("在运行时刻断言。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("）安全版本的几个函数："),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gets_s")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("取代了"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，原因是后者这个I"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("O函数的实际缓冲区大小不确定，以至于发生常见的缓冲区溢出攻击，类似的函数还有其它的。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fopen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("新模式："),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fopen")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("增加了新的创建、打开模式“x”，在文件锁中比较常用。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("）匿名结构体、联合体。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("）多线程：头文件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("定义了创建和管理线程的函数，新的存储类修饰符"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Thread_local")]),s._v("限定了变量不能在多线程之间共享。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Atomic")]),s._v("类型修饰符和头文件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("stdatomic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("）改进的Unicode支持和头文件"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("uchar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("quick_exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：又一种终止程序的方式，当"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("失败时用以终止程序。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("）复数宏，浮点数宏。\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("）time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h新增timespec结构体，时间单位为纳秒，原来的timeval结构体时间单位为毫秒。 \t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"✅语法篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅语法篇"}},[s._v("#")]),s._v(" ✅语法篇")]),s._v(" "),t("h2",{attrs:{id:"c和c-变量命名规则探讨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c和c-变量命名规则探讨"}},[s._v("#")]),s._v(" C和C++变量命名规则探讨？🤔")]),s._v(" "),t("p",[t("strong",[s._v("变量命名规则")])]),s._v(" "),t("ul",[t("li",[s._v("不能是C语言或者C++的标识符。")]),s._v(" "),t("li",[s._v("区分大小写")]),s._v(" "),t("li",[s._v("变量的第1个字符必须是大小写字母或者下划线。")]),s._v(" "),t("li",[s._v("即，除去第1个字符之外的其他字符是大小写字母，下划线，或数字。")])]),s._v(" "),t("p",[t("strong",[s._v("疑问")]),s._v("：为什么，第3点要求看上去这么奇怪？\n为什么，不直接说，是直接由大小写字母，下划线，数字组成就好了，为何要强调第1个字符，不能是数字？\n看上去，一点都不对称，没有美感")]),s._v(" "),t("p",[t("strong",[s._v("解释")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("想象一下，定义这样一个变量\nint 1=9;//变量名字，要是叫1，那么我们的程序，难道以后，我用1就是9？多尴尬\n\n反观\nchar c='d';\nchar D='c';\n这样的多好，原因是：\n字符在C语言和C++中是有单引号''围着的\n字符串是有双引号\"\"围着的\n\n或许，创造者在变量名取名规则的时候，首先是考虑了\n1)大小写字母，毕竟是人家母语，要是计算机语言和母语由类似之处，多好。\n2)数字，毕竟，阿拉伯数字享誉全球。\n3)下划线，ummm，或许是为了今后的下划线命名法？？？疑问。。\n\n然后发现，前面那样int 1=9;这样奇怪的语句，就规则强化了\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("工程上主流的变量命名法")])]),s._v(" "),t("ul",[t("li",[s._v("下划线命名法（C语言软件设计师常用）")]),s._v(" "),t("li",[s._v("驼峰命名法（Java软件设计师常用）")]),s._v(" "),t("li",[s._v("帕斯卡命名法")]),s._v(" "),t("li",[s._v("匈牙利名")])]),s._v(" "),t("h2",{attrs:{id:"_1-switch语法⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-switch语法⭐️"}},[s._v("#")]),s._v(" 1.switch语法⭐️")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/07016c63465442fe858a1f323eb3fa0e",target:"_blank",rel:"noopener noreferrer"}},[s._v("switch(c)语句中，c不可以是什么类型（）"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("\n    \n选D "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("\n    \n这个题目很好\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v("相当于枚举，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("这些整型都是又穷个数的\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("有无穷多个，因此不能用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("类型\n\n『我在C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("primer上面也看到，只要整型和"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v("』\n    \n\n此外，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v("也不是构造类型，它是一个基本类型，\n    我们可以将一个"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v("作为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v("语句的表达式！！！『C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" primer』说的\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("switch语句判断条件可以接受的数据类型有哪些？")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\nbyte\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v("\n都可以，但是byte不是C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("的。。。Java中好像有\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"⭐️类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⭐️类型转换"}},[s._v("#")]),s._v(" ⭐️类型转换?")]),s._v(" "),t("h4",{attrs:{id:"_1-自动类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-自动类型转换"}},[s._v("#")]),s._v(" （1）自动类型转换")]),s._v(" "),t("p",[s._v("当运算符的两边出现不一致的类型时，会自动转换成较大的类型\n大的意思是能表达的数的范围更大")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("char -> short -> int -> long -> long long")])]),s._v(" "),t("li",[t("code",[s._v("int ->float ->double")])]),s._v(" "),t("li",[s._v("特殊：\n"),t("ul",[t("li",[s._v("1、对于printf，任意小于int的类型会被转换成int")]),s._v(" "),t("li",[s._v("2、但是scanf不会，要输入short，需要"),t("code",[s._v("%hd")]),s._v("『注意事项』")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-强制类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-强制类型转换"}},[s._v("#")]),s._v(" （2）强制类型转换")]),s._v(" "),t("p",[s._v("要把一个量强制转换成另一个类型（通常是较小的类型）")]),s._v(" "),t("p",[s._v("注意，这时候的安全性，小的变量不总能表达大的量")]),s._v(" "),t("ul",[t("li",[s._v("只是从那个变量"),t("strong",[s._v("计算")]),s._v("出了一个新的类型的值。它并不改变那个变量，无论是值还是类型都不改变")])]),s._v(" "),t("h2",{attrs:{id:"✔️参加位运算的数据其类型不能是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✔️参加位运算的数据其类型不能是"}},[s._v("#")]),s._v(" ✔️参加位运算的数据其类型不能是？")]),s._v(" "),t("ul",[t("li",[s._v("牛客网"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44308591&qid=80375#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("无论是float  还是double,在内存中的存储分为三部分：符号位，指数位，尾数位；位运算符对它们没有意义")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("网上找的：\n按位运算是对字节或字中的实际位进行检测、设置或移位"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 它只适用于字符型和整数型变量以及它们的变体"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 对其它数据类型不适用。\n    \nloat、"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("、"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v("等类型不允许直接进行位与操作符啊，可用间接的方法变通，如"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v("取地址（也是"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("符号）转换为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("类型，再用取值操作符（"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("），这样编译器会以为是"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("类型。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_2-常用ascii码值记忆法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-常用ascii码值记忆法"}},[s._v("#")]),s._v(" 2.常用ASCII码值记忆法")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("参考牛客网+自我思考补充")])]),s._v(" "),t("li",[t("p",[s._v("或许以为这个不用记忆，但是在编码的时候，这个还是用到了，而且某些学校考试是会考的。")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("'\\0'")]),s._v("   //ASCII是0")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("' '")]),s._v("   //空格，ASCII是32")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//上面一组已经记熟了。")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'0'")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//ASCII是48")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'A'")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//ASCII是65")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//ASCII是97")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("486")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("597")]),s._v("\n死"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("86")]),s._v("，误久期"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("si ba l"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n此外，"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("486")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("111")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("597")]),s._v("\n    \n常用性质：\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("、空串等于a减A，也就是"),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'a'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'A'")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("' '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编程的时候有人这么用")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"_3-数组的『初始化方式』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-数组的『初始化方式』⭐️"}},[s._v("#")]),s._v(" 3.数组的『初始化方式』⭐️")]),s._v(" "),t("ul",[t("li",[s._v("C语言和C++中数组的初始化")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-问题由来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-问题由来"}},[s._v("#")]),s._v(" 3.1.问题由来")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 把数组全部初始化为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" 把数组全部初始化为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，为什么却失败了呢？\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[t("strong",[s._v("数组的几种初始化方式")])])],1)]),s._v(" "),t("h3",{attrs:{id:"_3-2-完全初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-完全初始化"}},[s._v("#")]),s._v(" 3.2.完全初始化")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("完全初始化（completely initialized）")]),s._v("：给每个元素初始化")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_2-3-完全不初始化-uninitialized"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-完全不初始化-uninitialized"}},[s._v("#")]),s._v(" 2.3.完全不初始化（uninitialized）")]),s._v(" "),t("p",[t("code",[s._v("int a[5];")]),s._v("\n注意：不进行显式初始化的情况下：")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("b",[s._v("未初始化的")]),s._v("全局变量以及静态变量的初始均为0（因为他们都存在.bss段，默认初始化为0）")]),s._v(" "),t("li",[t("b",[s._v("未初始化的")]),s._v("局部变量（自动变量）随机（其实也不叫随机，要是你能够精确的设计上一个释放这块内存的地方存了什么值，你就能自行控制，局部变量处于栈区，其数值是当时内存中的值。）")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output:(不确定的)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//6487736")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4202350")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4202256")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//29")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"_2-4-不完全初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-不完全初始化"}},[s._v("#")]),s._v(" 2.4.不完全初始化")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("不完全初始化（Partly initialized）")]),s._v("（即：部分初始化）")])]),s._v(" "),t("p",[t("code",[s._v("int a[5]={0,1,2};")]),s._v("\nK&R C语言中是这样阐述：")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("b",[s._v("如果初始化表达式的个数比数组元素数少，则对外部变量，静态变量和自动变量来说，没有初始化表达式的元素将被初始化为0。")]),s._v("（至于为什么是初始化为0而不是其他的，原因是.bss的实现机制）")]),s._v(" "),t("li",[s._v("如果初始化表达式的个数比数组元素数多,则是错误的。\n所以，上面数组，前三个元素被初始化为0，1，2，后两个元素被初始化为0。")])])]),s._v(" "),t("p",[s._v("实际上，int a[5]={0};属于不完全初始化，先把第一个元素初始化为0，由于初始化元素个数不够，所以剩余的元素按照规则被初始化为0，虽然都是0，但是它和后面那些0的意义不同（此0非彼0）")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"_2-5-假装初始化-我编的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-假装初始化-我编的"}},[s._v("#")]),s._v(" 2.5.假装初始化（我编的..）")]),s._v(" "),t("ul",[t("li",[s._v("其实这种初始化方式也是『不完全初始化』的一种")]),s._v(" "),t("li",[s._v("但是在ICPC中，很多人这么写")]),s._v(" "),t("li",[t("code",[s._v("int a[10]={};")])]),s._v(" "),t("li",[s._v("编译器自动将"),t("strong",[s._v("所有元素置0")])])]),s._v(" "),t("h2",{attrs:{id:"_04-union『c语言中』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_04-union『c语言中』"}},[s._v("#")]),s._v(" 04.union『C语言中』")]),s._v(" "),t("blockquote",[t("p",[s._v("又叫：共用体（联合）")]),s._v(" "),t("p",[s._v("吐槽：名字真多")])]),s._v(" "),t("h3",{attrs:{id:"_1-union"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-union"}},[s._v("#")]),s._v(" 1.union")]),s._v(" "),t("p",[s._v("union中文翻译为“"),t("code",[s._v("联合")]),s._v("”（又称"),t("code",[s._v("共用体")]),s._v("）")]),s._v(" "),t("ul",[t("li",[s._v("吐槽—没事取这么多名字干啥"),t("code",[s._v("...")]),s._v("（好吧，其实是翻译，每个人有自己的翻译方式）")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("个人倾向于用共用体的名字，因为union共用内存的特点从名字就能直观的看出来，但是也有书上写成联合，所以，我也从各种地方搜集，发现一个还算说得过去的说明，叫“联合”显示union特点的解释。")])])]),s._v(" "),t("ul",[t("li",[s._v("联合：大家联合起来使用同一个空间")])]),s._v(" "),t("h3",{attrs:{id:"_2-union的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-union的特点"}},[s._v("#")]),s._v(" 2.union的特点")]),s._v(" "),t("ul",[t("li",[t("b",[s._v("特点")]),s._v("：使用同一个空间（tips：共用体也有"),t("code",[s._v("内存对齐")]),s._v("！）")]),s._v(" "),t("li",[s._v("你用了，我就不能用了（除非你想使坏，把前面别人要用的给覆盖掉）")]),s._v(" "),t("li",[s._v("PS:共用体，其实表明了计算机学科一个很重要的性质，那就是，其实数据都是0和1，至于为什么后面会有字符型，整型，图片，音频什么的，完全是对这些比特位的解释的不用导致的情况，所以，同样比特的可以解释是1首歌，也可以解释是一张图片（当然，需要你解释这些比特的算法正确）")]),s._v(" "),t("li",[t("strong",[s._v("常用场景")]),s._v(" "),t("ul",[t("li",[s._v("1）这么节省内存，那嵌入式必须首先用起（要是两个不会同时使用的话）")]),s._v(" "),t("li",[s._v("2）网络传输：通信中的数据包会用到共用体，因为不知道对方会发送一个什么过来，用共用体就简单了，定义几种格式的包，收到包之后就可以直接根据包的格式取出数据。")])])])]),s._v(" "),t("h2",{attrs:{id:"_05-位段-也叫位域-bit-field"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_05-位段-也叫位域-bit-field"}},[s._v("#")]),s._v(" 05.位段（也叫位域）"),t("code",[s._v("Bit field")])]),s._v(" "),t("ul",[t("li",[s._v("一种"),t("strong",[s._v("特殊")]),s._v("的"),t("code",[s._v("结构体struct")])])]),s._v(" "),t("h3",{attrs:{id:"_1、引言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、引言"}},[s._v("#")]),s._v(" 1、引言")]),s._v(" "),t("p",[s._v("我们在做单片机的时候。微控制单元（Microcontroller Unit；MCU），又称单片微型计算机（Single Chip Microcomputer ）或者单片机。经常会告诉你第几个比特是什么什么叫停止比特啥的。如何操作呢？后面的数字是说，这个成员占几个比特。其实这种手法在C语言中的实现就可以用我们现在要讲的位段方式。当然，位段并不是这些偏底层的程序实现的唯一应用场景，我们还能将这些用于网络通信等。")]),s._v(" "),t("h3",{attrs:{id:"_2、语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、语法"}},[s._v("#")]),s._v(" 2、语法")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("test")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" tt"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("特点：\n编译器会安排其中的位的排列，"),t("code",[s._v("不具有可移植性")]),s._v("\n当所需的位超过一个int时会采用多个int")]),s._v(" "),t("h3",{attrs:{id:"_3、位段的特点和『内存对齐』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、位段的特点和『内存对齐』"}},[s._v("#")]),s._v(" 3、位段的特点和『内存对齐』")]),s._v(" "),t("p",[s._v("对于位域的定义，有以下几点说明：")]),s._v(" "),t("ul",[t("li",[s._v("（1）一个位域必须存储在同一个字节中，不能跨两个字节。如一个字节所剩空间不够存放另一位域时，应从下一单元起存放该位域。也可以有意使某位域从下一单元开始。")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("wy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//空域")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从一单元开始存放")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在这个位域定义中，a占第一字节的6位，后2位填0表示不使用，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b从第二字节开始，占用4位，c占用4位。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[s._v("（2）由于位域不允许跨两个字节，因此位域的长度不能大于一个字节的长度，也就是不能超过8位二进位。")]),s._v(" "),t("li",[s._v("（3）位域可以无位域名，这时它只用来填充或调整位置。无名的位域是不能使用的。")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("wk")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不能使用")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("从以上述分析可以看出，位域可以看做是一种结构类型，其特点是成员均"),t("b",[s._v("按二进位分配")])]),s._v(" "),t("h2",{attrs:{id:"_06-c语言常量和c-常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_06-c语言常量和c-常量"}},[s._v("#")]),s._v(" 06.C语言常量和C++常量")]),s._v(" "),t("p",[t("font",{staticStyle:{background:"yellow"},attrs:{size:"3"}},[s._v("如果想要真正深入学懂C语言，请使用Linux测试所有以前教材上看不懂的内容，而不是使用Windows，从本文的字符常量，就知道原因了")])],1),s._v(" "),t("ul",[t("li",[s._v("常量：为固定值，在程序执行期间不会改变")]),s._v(" "),t("li",[s._v("可以是任何的基本数据类型，如，整型数字，浮点数字，字符，字符串，布尔值")])]),s._v(" "),t("h3",{attrs:{id:"_6-1-整数常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-整数常量"}},[s._v("#")]),s._v(" 6.1.整数常量")]),s._v(" "),t("ul",[t("li",[s._v("注意：整数常量也可以带“后缀”")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("前缀指定“基数”")]),s._v(" "),t("th",[s._v("后缀是U和L的组合")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("1）0x或0X表示16进制")]),s._v(" "),t("td",[s._v("1）U表示无符号整数（unsigned）")])]),s._v(" "),t("tr",[t("td",[s._v("2）0表示8进制")]),s._v(" "),t("td",[s._v("2）L表示长整数（long）")])]),s._v(" "),t("tr",[t("td",[s._v("3）其余默认为10进制")]),s._v(" "),t("td",[s._v("3）U和L可大，小写（不区分！）")])]),s._v(" "),t("tr",[t("td"),s._v(" "),t("td",[s._v("4）U和L的顺序任意")])])])]),s._v(" "),t("p",[s._v("下面都是合法的")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xFFUL")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法！")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xFFLU")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法！")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0xffLU")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法！")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_6-2-浮点常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-浮点常量"}},[s._v("#")]),s._v(" 6.2.浮点常量")]),s._v(" "),t("p",[s._v("浮点常量：由整数部分，小数点，小数部分和指数部分组成")]),s._v(" "),t("ul",[t("li",[s._v("1）小数形式表示时：必须包含整数部分或小数部分或两种都有")]),s._v(" "),t("li",[s._v("2）用指数形式时：必须包含小数点或指数或两者都有\n"),t("ul",[t("li",[s._v("带符号的指数是用e或E引入的！")])])])]),s._v(" "),t("p",[s._v("合法的如下")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.145")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法，小数形式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("312E5")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法，指数形式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("31415E-5L")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法，指数形式，而31415E-5l   也可以（注意，浮点常量和整数常量规则结合了）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("312e3")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法，指数形式")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"_6-3-字符常量-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-字符常量-a"}},[s._v("#")]),s._v(" 6.3.字符常量'a'")]),s._v(" "),t("p",[s._v("字符常量：是括在单引号中，如果常量是以L"),t("font",{staticStyle:{background:"yellow"}},[s._v("（仅当大写时）开头")]),s._v("，则表示它是一个"),t("strong",[s._v("宽")]),s._v("字符常量（例如 "),t("code",[s._v("L'x'")]),s._v(" ）")],1),s._v(" "),t("p",[s._v("字符常量可以是：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("1）一个普通的字符，例如 "),t("code",[s._v("'x'")])])]),s._v(" "),t("li",[t("p",[s._v("2）一个"),t("strong",[s._v("转义序列")]),s._v("，例如  "),t("code",[s._v("'\\t'")])])]),s._v(" "),t("li",[t("p",[s._v("3）一个通用的字符，例如  "),t("code",[s._v("'\\u02C0'")]),s._v(" "),t("font",{staticStyle:{background:"yellow"}},[s._v("不知道这是啥？我以前做的笔记，自己咋看不懂了，，")])],1)])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("转义序列码")]),s._v(" "),t("th",[s._v("效果")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("'\\a'")]),s._v(" "),t("td",[s._v("警报铃声（打开电脑喇叭，自己听，响一下）")])]),s._v(" "),t("tr",[t("td",[s._v("'\\b'")]),s._v(" "),t("td",[s._v("退格键（注意，“此退格键非彼退格键”，也就是说，和我们键盘上的不一样！）")])]),s._v(" "),t("tr",[t("td",[s._v("'\\f'")]),s._v(" "),t("td",[s._v("换页键（请在Linux下测试这些，在Windows上，这些表现很不一样）")])]),s._v(" "),t("tr",[t("td",[s._v("‘\\r’")]),s._v(" "),t("td",[s._v("回车（注意，“此回车键非彼回车键”，也就是说，和我们键盘上的不一样！）")])]),s._v(" "),t("tr",[t("td",[s._v("'\\t'")]),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td"),s._v(" "),t("td")])])]),s._v(" "),t("h4",{attrs:{id:"_1-测试-b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-测试-b"}},[s._v("#")]),s._v(" （1）测试'\\b'")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa\\b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n上面，似乎输出内容一样？\n    是的，但是意义不一样，而且请观察光标位置\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("table",[t("thead",[t("tr",[t("th",[s._v("代码")]),s._v(" "),t("th",[s._v("效果")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v('printf("aaa\\b");')])]),s._v(" "),t("td",[s._v("aa"),t("u",[s._v("a")]),s._v("      （注意，光标在最后一个a）")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v('printf("aaa");')])]),s._v(" "),t("td",[s._v("aaa"),t("u",[s._v("光标")]),s._v("      （注意，光标在最后一个a之后）")])]),s._v(" "),t("tr",[t("td",[s._v("测试"),t("code",[s._v('printf("aaa\\b1");')])]),s._v(" "),t("td",[s._v("aa1"),t("u",[s._v("光标")]),s._v("       （观察完上面，再测试这个，应该懂了）")])])])]),s._v(" "),t("h3",{attrs:{id:"_6-4-字符串常量-a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-字符串常量-a"}},[s._v("#")]),s._v(" 6.4.字符串常量"),t("code",[s._v('"a"')])]),s._v(" "),t("h3",{attrs:{id:"_6-5-布尔型常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-布尔型常量"}},[s._v("#")]),s._v(" 6.5.布尔型常量")]),s._v(" "),t("h2",{attrs:{id:"_07-c语言static成员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_07-c语言static成员"}},[s._v("#")]),s._v(" 07.C语言"),t("code",[s._v("static")]),s._v("成员")]),s._v(" "),t("ul",[t("li",[s._v("静态成员存在于"),t("strong",[s._v("内存")]),s._v("，非静态成员需要实例化才会分配内存")]),s._v(" "),t("li",[s._v("（注意，也就是在虚拟内存空间中，表示的是"),t("code",[s._v(".bss")]),s._v("和"),t("code",[s._v(".data段")]),s._v("中）")]),s._v(" "),t("li",[s._v("非静态成员的生存期决定于该类的生存期，而静态成员生存期则与程序生命期相同")])]),s._v(" "),t("h2",{attrs:{id:"🍀详解c语言中const"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🍀详解c语言中const"}},[s._v("#")]),s._v(" 🍀详解C语言中const")]),s._v(" "),t("p",[t("font",{attrs:{color:"red",size:"4"}},[s._v("C语言中的const修饰的变量，叫做常变量（奇怪的名字）")])],1),s._v(" "),t("h3",{attrs:{id:"_1-概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[s._v("#")]),s._v(" 1.概述：")]),s._v(" "),t("p",[s._v("Q：C语言中，const关键字限定一个变量为只读，但它是真正意义上的只读吗？\nA：C语言中的并不是的！const虽说是constant的简写，是不变的意思。\n但在C语言中，const并不是说它修饰常量，而是说它限定一个变量为只读。")]),s._v(" "),t("blockquote",[t("ul",[t("li",[t("b",[s._v("C语言")]),s._v("中，const关键字修饰的变量并"),t("b",[s._v("非真正意义完完全全的只读")]),s._v("！")]),s._v(" "),t("li",[s._v("（难怪叫"),t("strong",[s._v("常变量")]),s._v(","),t("font",{attrs:{color:"pink"}},[s._v("因为C语言中const就没有把这个变量变成常量！）")])],1)])]),s._v(" "),t("p",[s._v("Tips："),t("b",[s._v("C++")]),s._v("中则对const关键字进行了加强，使得真的变成了常量（详情见C++中const详解）\n所以，"),t("b",[s._v("我们常说C++中const修饰的变量，叫做const常量。")])]),s._v(" "),t("h3",{attrs:{id:"_2-基本用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本用法"}},[s._v("#")]),s._v(" 2.基本用法：")]),s._v(" "),t("h4",{attrs:{id:"_1-修饰普通变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-修饰普通变量"}},[s._v("#")]),s._v(" （1）修饰普通变量")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//与int const num等价")]),s._v("\nnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译错误，不可再次修改")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("DevC++的C语言编译器编译：\n"),t("code",[s._v("[Error] assignment of read-only variable 'NUM'")]),s._v("\n解释：\n由于使用了const修饰NUM，使得NUM为只读，因此尝试对NUM再次赋值的操作是非法的，编译器将会报错。所以，如果需要使用const修饰一个变量，那么它只能在开始声明时就赋值，否则用"),t("b",[s._v("一般做法")]),s._v("在后面就没有机会了（比如，特别的，C语言中可以用指针间接改变）。")]),s._v(" "),t("h4",{attrs:{id:"_2-修饰数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-修饰数组"}},[s._v("#")]),s._v(" （2）修饰数组")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用const关键字修饰数组，使其元素不允许被改变")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//试图修改arr的内容的操作是非法的，编译器将会报错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" arr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//与int const arr[]等价")]),s._v("\narr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译错误")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("DevC++的C语言编译：\n"),t("code",[s._v("[Error] assignment of read-only location 'arr[2]'")])]),s._v(" "),t("h4",{attrs:{id:"_3-修饰指针-重点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-修饰指针-重点"}},[s._v("#")]),s._v(" （3）修饰指针（重点）")]),s._v(" "),t("p",[s._v("先补充")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("下面这两种写法是等效的的！")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("const int a=3;")]),s._v(" "),t("li",[s._v("int const a=3;")])])])]),s._v(" "),t("p",[s._v("修饰指针的主要有以下几种情况：\n1）const 修饰 *p，"),t("b",[s._v("指向的对象只读")]),s._v("，指针的指向可变:")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("常量指针——指向常量的指针，顾名思义，就是指针指向的是常量，即它不能指向变量，它指向的内容不能被改变，不能通过指针来修改它指向的内容，但是指针自身不是常量，它自身的值可以改变，从而指向另一个常量。")])])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//p是一个指向int类型的const值,与int const *p等价")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译错误，指向的对象是只读的，不可通过p进行改变")]),s._v("\np "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法，改变了p的指向")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("换句话说更加准确：指针P是指向"),t("code",[s._v("const int *")])]),s._v(" "),t("p",[s._v("这里为了便于理解，可认为const修饰的是"),t("em",[s._v("p，通常使用")]),s._v("对指针进行解引用来访问对象，因而该对象是只读的。")]),s._v(" "),t("ul",[t("li",[s._v("此处补充——《C专家编程》书中的一段）")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("cp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Ccp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nccp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Cp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//左操作数是一个指向有const限定符的char的指针。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//右操作数是一个指向没有限定符的char的指针。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//char类型与char类型是相容的，左操作数所指向的类型具有右操作数所指向类型的限定符(无)，再加上自身的限定符(const)。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意，反过来就不能进行赋值。试试下而的代码:")]),s._v("\ncp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ccp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*结果产生编译警告*/")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("解释：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("const char *ccp;")]),s._v("//表示我保证，我不会去改变我指向的那个对象")]),s._v(" "),t("li",[t("code",[s._v("char *cp;")]),s._v("//表示我可以改变我指向的那个对象")]),s._v(" "),t("li",[s._v("我们可以，想想一下一个场景来理解ccp和cp的相互赋值的合法性")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("ccp=cp;//表示，cp告诉ccp说，我给你的对象，我可以改变，我赋值给你，你要是想改也可以。ccp说,我是有原则的，我的原则就是，我不会去改变我指向的那个对象（相容），ccp说，行，随你。")]),s._v(" "),t("li",[s._v("cp=ccp;//表示，ccp告诉cp，我给你的对象，我可舍不得改了，我赋值给你，你可不能改，ccp说，我也是有原则的，我就要改，而它一改，编译器就阻止它说，你这样不行，侵犯了ccp的原则。")])])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("const修饰p，指向的对象可变，"),t("b",[s._v("指针的指向不可变")]),s._v("：")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("指针常量——指针本身是常量。它指向的地址是不可改变的，但地址里的内容可以通过指针改变。它指向的地址将伴其一生，直到生命周期结束。有一点需要注意的是，指针常量在定义时必须同时赋初值。")])])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//p是一个const指针")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//合法，")]),s._v("\np "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译错误，p是一个const指针，只读，不可变")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("指针不可改变指向，指向的内容也不可变")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//p既是一个const指针，同时也指向了int类型的const值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译错误，指向的对象是只读的，不可通过p进行改变")]),s._v("\np "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译错误，p是一个const指针，只读，不可变")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("小结：\nconst放在"),t("em",[s._v("的左侧，限定了该指针指向的对象是只读的；\nconst放在")]),s._v("的右侧，限定了指针本身是只读的，即不可变的。")]),s._v(" "),t("ul",[t("li",[s._v("记忆法：")])]),s._v(" "),t("p",[t("font",{staticStyle:{background:"pink"}},[s._v("const右边修饰谁，就说明谁是不可变的")])],1),s._v(" "),t("p",[s._v("解释：")]),s._v(" "),t("ul",[t("li",[s._v("首先我们去掉类型说明符，查看const右边修饰的内容，上面三种情况去掉类型说明符int之后，如下：")]),s._v(" "),t("li",[t("code",[s._v("const int *p")]),s._v("; //修饰*p，指针p指向的对象"),t("code",[s._v("*p")]),s._v("不可变")]),s._v(" "),t("li",[t("code",[s._v("int * const p;")]),s._v(" //修饰p，指针p本身不可变")]),s._v(" "),t("li",[t("code",[s._v("const int * const p")]),s._v("; //第一个修饰了"),t("code",[s._v("*p")]),s._v("，第二个修饰了"),t("code",[s._v("p")]),s._v("，两者都不可变")]),s._v(" "),t("li",[s._v("此外，这种记忆法，还能帮助记忆先前那两个等价的形式：")])]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("const int NUM = 10; \t//与int const NUM等价")]),s._v(" "),t("li",[s._v("const int *p  = &a;\t\t//与int const *p等价")]),s._v(" "),t("li",[s._v("const int arr[] = {0,0,2,3,4}; \t//与int const arr[]等价")])])]),s._v(" "),t("h4",{attrs:{id:"_4-修饰函数形参-重点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-修饰函数形参-重点"}},[s._v("#")]),s._v(" （4）修饰函数形参（重点）")]),s._v(" "),t("p",[t("b",[s._v("（重点，在函数接口，控制指针只做输入/"),t("em",[s._v("in")]),s._v("/）")])]),s._v(" "),t("p",[s._v("实际上，为我们可以经常发现const关键字的身影，例如很多库函数的声明：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("strncpy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("dest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//字符串拷贝函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("strncmp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("s1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("s2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("size_t")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//字符串比较函数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("观察一个例子：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//test.c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPrint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPrint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'H'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my print:%s\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPrint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("此例子中，我们不希望myPrint函数修改传入的字符串内容，因此入参使用了const限定符，表明传入的字符串是只读的，因此，如果myPrint函数内部如果尝试对str进行修改，将会报错:\n"),t("code",[s._v("error: assignment of read-only location ‘*str’str[0] = 'H';")])]),s._v(" "),t("p",[t("b",[s._v("工程常用做法")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("我们在编码过程中，如果确定传入的指针参数仅用于访问数据，那么应该将其声明为一个指向const限定类型的指针，避免函数内部对数据进行意外地修改!")])]),s._v(" "),t("h4",{attrs:{id:"_5-修饰全局变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-修饰全局变量"}},[s._v("#")]),s._v(" （5）修饰全局变量")]),s._v(" "),t("p",[s._v("我们知道，使用全局变量是一种不安全的做法，因为程序的任何部分都能够对全局数据进行修改。而如果对全局变量增加const限定符（假设该全局数据不希望被修改），就可以避免被程序其他部分修改。这里有两种使用方式。\n1）第一种，在a文件中定义，其他文件中使用外部声明，例如：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a.h")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ARR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义int数组")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b.c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extern")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ARR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意，这里不能再对ARR进行赋值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//后面可以使用ARR")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("2）第二种，在a文件中定义，并使用static修饰，b文件包含a文件，例如：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a.h")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ARR"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义int数组")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b.c")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<a.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//后面可以使用ARR")]),s._v("\n注意，这里必须使用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v("修饰，否则多个文件包含导致编译会出现重复定义的错误。可以尝试一下。（为什么？因为，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v("修饰的变量，要是初始化了是放在"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("data段的，而不是栈区）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("易错点：")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"pink"}},[s._v("Q：C语言中const修饰的变量是真正的只读吗？")])],1),s._v(" "),t("li",[t("font",{staticStyle:{background:"pink"}},[s._v("A：C语言const修饰的变量，可以被间接修改！")])],1)]),s._v(" "),t("p",[s._v("在C语言中，const变量只不过是修饰该变量名，它并不能使内存变为只读。也就是说，我们不能通过变量名再去操作这块内存。但是可以通过其它方法，如指针，通过指针是可以修改被const修饰的那块内存的。")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("DevC++虽然有一个警告：\n"),t("code",[s._v("[Warning] initialization discards 'const' qualifier from pointer target type")]),s._v("\n（[警告]初始化会从指针目标类型中丢弃'const'限定符）\n但是还是可以修改！\n可以看到，我们通过另外定义一个指针变量，将被const修饰的a的值改变了。\t\n此外，对于由于像数组溢出，隐式修改等程序不规范书写造成的运行过程中的修改，编译器是无能为力的，也说明const修饰的变量仍然是具备变量属性的。")]),s._v(" "),t("p",[s._v("我们要知道的是，const关键字告诉了编译器，它修饰的变量不能被改变，如果代码中发现有类似改变该变量的操作，那么编译器就会捕捉这个错误。")]),s._v(" "),t("p",[s._v("那么它在"),t("b",[s._v("实际中的意义之一")]),s._v("是什么呢？\n帮助程序员提前发现问题，避免不该修改的值被意外地修改，但是无法完全保证不被修改！\n也就是说，C语言中"),t("b",[s._v("const关键字是给编译器用的")]),s._v("帮助程序员提早发现可能存在的问题。\n（所以给了个warning？但是却不给error，也是够了。）")]),s._v(" "),t("p",[s._v("从这次的分析中，我们可以获得的思考：\n1）"),t("b",[s._v("不要忽略编译器的警告，除非你很清楚在做什么")]),s._v("。（比如，上面我们用那些方法修改了const修饰的。）\n2）虽然可以通过某种不正规途径修改const修饰的变量，但是在"),t("b",[s._v("工程中")]),s._v("永远不要这么做。\n3）const关键字让编译器帮助我们发现变量不该被修改却被意外修改的错误。")]),s._v(" "),t("p",[t("font",{attrs:{color:"pink"}},[s._v("常见的问题：")]),s._v("\nC语言中:")],1),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxn"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("maxn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//[Error] variably modified 'aa' at file scope")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxn"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("maxn"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//编译出错，[Error] variably modified 'test' at file scope")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在文件范围内可变地修改了“test”，因为数组的下标只接受常量，而C语言中const修饰的变量是个“假的常量”")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当然，上面语法在Ｃ＋＋中是可以的，因为C++对C语言中const关键字进行了加强，使得真的是常量了，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//而且，在C++中，还给const修饰而形成的常量，取名叫做const常量。")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("《C与指针》")]),s._v(" "),t("li",[s._v("《C专家编程》")]),s._v(" "),t("li",[s._v("《C缺陷与陷阱》")]),s._v(" "),t("li",[s._v("《C Primer Plus（第6版)》，"),t("a",{attrs:{href:"https://book.douban.com/search/%E6%99%AE%E6%8B%89%E8%BE%BE",target:"_blank",rel:"noopener noreferrer"}},[s._v("普拉达 (Stephen Prata)"),t("OutboundLink")],1),s._v("/译者: "),t("a",{attrs:{href:"https://book.douban.com/search/%E5%A7%9C%E4%BD%91",target:"_blank",rel:"noopener noreferrer"}},[s._v("姜佑"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("『CSDN C语言讲义』王保民")]),s._v(" "),t("li",[s._v("『C语言指针详解』")]),s._v(" "),t("li",[s._v("『C语言小白变怪兽 v1.0』，严长生，C语言中文网站长")])])])}),[],!1,null,null,null);t.default=r.exports}}]);