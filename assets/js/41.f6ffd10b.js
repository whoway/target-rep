(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{318:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"c-面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-面试题"}},[s._v("#")]),s._v(" C++面试题")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background:yellow">\n<font style="background:pink">\n<font style="background: MediumSpringGreen">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("当一个程序员足够老，他就从工程师变成了历史学家")])],1)]),s._v(" "),t("h2",{attrs:{id:"📑-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📑-目录"}},[s._v("#")]),s._v(" 📑 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#📑-目录"}},[s._v("📑 目录")])]),t("li",[t("a",{attrs:{href:"#✅虚函数"}},[s._v("✅虚函数")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-虚函数表-vtbl"}},[s._v("1.虚函数表vtbl")])]),t("li",[t("a",{attrs:{href:"#_2-构造一个派生类对象的过程"}},[s._v("2.构造一个派生类对象的过程")])]),t("li",[t("a",{attrs:{href:"#_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[s._v("2.1.是先构造父类的「虚表指针」还是先构造父类的「成员」？")])]),t("li",[t("a",{attrs:{href:"#_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[s._v("2.2.「虚表指针」和「构造函数体」那个先被构造？")])]),t("li",[t("a",{attrs:{href:"#_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[s._v("3.c++「运行构造函数」的时候「虚函数表」被构造出来了么？")])]),t("li",[t("a",{attrs:{href:"#_4-析构一个派生类对象的过程"}},[s._v("4.析构一个派生类对象的过程：")])])])]),t("li",[t("a",{attrs:{href:"#✅基础"}},[s._v("✅基础")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-vector是线程安全的吗"}},[s._v("1.vector是线程安全的吗？")])]),t("li",[t("a",{attrs:{href:"#_2-c-是不是类型安全的呢"}},[s._v("2.C++是不是类型安全的呢？")])]),t("li",[t("a",{attrs:{href:"#_3-sizeof-只有1个虚析构函数的空类呢"}},[s._v("3.sizeof只有1个虚析构函数的空类呢？")])]),t("li",[t("a",{attrs:{href:"#_4-构造函数为什么不能是虚函数"}},[s._v("4.构造函数为什么不能是虚函数？")])]),t("li",[t("a",{attrs:{href:"#_5-为何空类的大小不是零"}},[s._v("5.为何空类的大小不是零？")])]),t("li",[t("a",{attrs:{href:"#_6-我能从构造函数调用虚函数吗"}},[s._v("6.我能从构造函数调用虚函数吗？")])]),t("li",[t("a",{attrs:{href:"#_7-内存泄露及解决办法"}},[s._v("7.内存泄露及解决办法：")])]),t("li",[t("a",{attrs:{href:"#_8-怎么检测内存泄漏"}},[s._v("8.怎么检测内存泄漏？")])])])]),t("li",[t("a",{attrs:{href:"#✅平常做题错题"}},[s._v("✅平常做题错题")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-测试"}},[s._v("1.测试")])]),t("li",[t("a",{attrs:{href:"#_2-在-c-语言中-对函数参数默认值描述正确的是"}},[s._v("2.在 c++ 语言中，对函数参数默认值描述正确的是？")])])])]),t("li",[t("a",{attrs:{href:"#✅c-输入输出io"}},[s._v("✅C++输入输出IO")])]),t("li",[t("a",{attrs:{href:"#_1-iostream-的设计初衷"}},[s._v("1.iostream的设计初衷")])]),t("li",[t("a",{attrs:{href:"#_2-iostream-的特点"}},[s._v("2.iostream的特点")])]),t("li",[t("a",{attrs:{href:"#✅c-高阶论题"}},[s._v("✅C++高阶论题")])]),t("li",[t("a",{attrs:{href:"#_1-c-惯用法"}},[s._v("1.C++惯用法")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-raii-资源获取即初始化"}},[s._v("1.1.RAII(资源获取即初始化)")])]),t("li",[t("a",{attrs:{href:"#_1-2-pimpl"}},[s._v("1.2.pImpl")])]),t("li",[t("a",{attrs:{href:"#_1-3-copy-and-swap"}},[s._v("1.3.copy and swap")])])])]),t("li",[t("a",{attrs:{href:"#_2-value-semantics-和-object-semantics"}},[s._v("2.value semantics和object semantics")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-值语义-value-semantics"}},[s._v("2.1.值语义（value semantics）")])]),t("li",[t("a",{attrs:{href:"#_2-2-对象语义-object-semantics"}},[s._v("2.2.对象语义（object semantics）")])]),t("li",[t("a",{attrs:{href:"#_2-3-优点缺点对比"}},[s._v("2.3.优点缺点对比")])])])]),t("li",[t("a",{attrs:{href:"#_3-c-惯用法和-value-semantics-组合拳"}},[s._v("3.C++惯用法和value semantics组合拳")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-c-的值语义是『双刃剑』"}},[s._v("3.1.C++的值语义是『双刃剑』")])]),t("li",[t("a",{attrs:{href:"#_3-3-问题-智能指针"}},[s._v("3.3.问题：智能指针？")])])])]),t("li",[t("a",{attrs:{href:"#_4-c-语言层面高度探讨"}},[s._v("4.C++语言层面高度探讨")])]),t("li",[t("a",{attrs:{href:"#_5-c-的编程范式"}},[s._v("5.C++的编程范式")])]),t("li",[t("a",{attrs:{href:"#_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[s._v("6.c++11、c++14、C++17以及C++20有什么区别呢?")])]),t("li",[t("a",{attrs:{href:"#_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[s._v("7.C和C++在编译时,函数名会怎么变化,那如果是匿名空间呢?")])]),t("li",[t("a",{attrs:{href:"#🔋-参考资料"}},[s._v("🔋 参考资料")])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("h2",{attrs:{id:"✅虚函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅虚函数"}},[s._v("#")]),s._v(" ✅虚函数")]),s._v(" "),t("p",[s._v("本部分，特别是下面5个概念的顺序，不仅仅影响基础概念，而且还会影响，我们对线程安全的理解！！")]),s._v(" "),t("ul",[t("li",[s._v("虚函数表")]),s._v(" "),t("li",[s._v("虚函数指针")]),s._v(" "),t("li",[s._v("成员变量")]),s._v(" "),t("li",[s._v("构造函数")]),s._v(" "),t("li",[s._v("虚构函数")])]),s._v(" "),t("h3",{attrs:{id:"_1-虚函数表vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-虚函数表vtbl"}},[s._v("#")]),s._v(" 1.虚函数表"),t("code",[s._v("vtbl")])]),s._v(" "),t("ol",[t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("编译器在"),t("strong",[s._v("编译时期")]),s._v("为每个带虚函数的「类」创建一份"),t("strong",[s._v("虚函数表")])])],1)]),s._v(" "),t("li",[t("p",[t("strong",[s._v("实例化")]),s._v("对象时, 编译器自动将"),t("strong",[s._v("类对象（object）"),t("strong",[s._v("的")]),s._v("虚表指针")]),s._v("指向这个虚函数表")])])]),s._v(" "),t("ul",[t("li",[s._v("参考自：《收割BAT："),t("a",{attrs:{href:"https://www.nowcoder.com/tutorial/10018/index",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++校招学习路线总结"),t("OutboundLink")],1),s._v("》，特立独行MVP")])]),s._v(" "),t("p",[s._v("意思：")]),s._v(" "),t("p",[s._v("虚函数表，是属于class的。")]),s._v(" "),t("p",[s._v("每个object有属于各自的虚表指针。")]),s._v(" "),t("h3",{attrs:{id:"_2-构造一个派生类对象的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-构造一个派生类对象的过程"}},[s._v("#")]),s._v(" 2.构造一个派生类对象的过程")]),s._v(" "),t("ul",[t("li",[s._v("1.构造"),t("strong",[s._v("基类")]),s._v("部分：\n"),t("ul",[t("li",[s._v("1.将object实例的"),t("strong",[s._v("虚表指针")]),s._v("指向"),t("strong",[s._v("基类的vtbl")])]),s._v(" "),t("li",[s._v("2.构造基类的**「成员变量」**")]),s._v(" "),t("li",[s._v("3."),t("font",{staticStyle:{background:"yellow"}},[s._v("执行基类的「"),t("strong",[s._v("构造函数函数体」")])])],1)])]),s._v(" "),t("li",[s._v("2."),t("strong",[s._v("递归")]),s._v("构造派生类部分：\n"),t("ul",[t("li",[s._v("1.将实例的虚表指针指向"),t("strong",[s._v("派生类vtbl")])]),s._v(" "),t("li",[s._v("2.构造派生类的成员变量")]),s._v(" "),t("li",[s._v("3.执行派生类的构造函数体")])])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<string>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n                       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n                       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a="')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  string s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  D "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("d")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output")]),s._v("\nh@dell"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out\nB constructor\nB"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("f\na"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("496370680")]),s._v("\nD constructor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("h3",{attrs:{id:"_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[s._v("#")]),s._v(" 2.1.是先构造父类的「虚表指针」还是先构造父类的「成员」？")]),s._v(" "),t("ul",[t("li",[s._v("虚表指针")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[s._v("#")]),s._v(" 2.2.「虚表指针」和「构造函数体」那个先被构造？")]),s._v(" "),t("ul",[t("li",[s._v("虚表指针先构造")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<string>")])]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\tstring s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tD "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("d")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出")]),s._v("\nB constructor\nB"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("f\nD constructor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h3",{attrs:{id:"_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[s._v("#")]),s._v(" 3.c++「运行构造函数」的时候「虚函数表」被构造出来了么？")]),s._v(" "),t("ul",[t("li",[s._v("构造出来了。因为「虚函数表」是在"),t("strong",[s._v("编译时")]),s._v("由编译器创建，在"),t("strong",[s._v("运行")]),s._v("时肯定已经创建完成。")])]),s._v(" "),t("h3",{attrs:{id:"_4-析构一个派生类对象的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-析构一个派生类对象的过程"}},[s._v("#")]),s._v(" 4.析构一个派生类对象的过程：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("1."),t("strong",[s._v("递归")]),s._v("析构派生类部分：")]),s._v(" "),t("ul",[t("li",[s._v("1.将实例的"),t("strong",[s._v("虚表指针")]),s._v("指向"),t("strong",[s._v("派生类vtbl")])]),s._v(" "),t("li",[s._v("2.执行派生类的"),t("strong",[s._v("析构函数体")])]),s._v(" "),t("li",[s._v("3.析构派生类的"),t("strong",[s._v("成员变量")])])])]),s._v(" "),t("li",[t("p",[s._v("2.析构基类部分：")]),s._v(" "),t("ul",[t("li",[s._v("1.将实例的"),t("strong",[s._v("虚表指针")]),s._v("指向基类的vtbl")]),s._v(" "),t("li",[s._v("2.执行基类的析构函数函数体")]),s._v(" "),t("li",[s._v("3.析构基类的成员变量")])])])]),s._v(" "),t("h2",{attrs:{id:"✅基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅基础"}},[s._v("#")]),s._v(" ✅基础")]),s._v(" "),t("h3",{attrs:{id:"_1-vector是线程安全的吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-vector是线程安全的吗"}},[s._v("#")]),s._v(" 1.vector是线程安全的吗？")]),s._v(" "),t("ul",[t("li",[s._v("不是线程安全的！")])]),s._v(" "),t("p",[s._v("比如，一个线程是生产者，不断push_back，然后多个线程并发读")]),s._v(" "),t("p",[s._v("​\t由于push_back潜在的内存重新申请和对象复制问题，会导致读方（消费者）的迭代器失效。不一定会产生正确的行为。")]),s._v(" "),t("p",[s._v("解决方式，进行额外的同步。")]),s._v(" "),t("ul",[t("li",[s._v("参考：《Linux多线程服务器端编程》P4")]),s._v(" "),t("li",[s._v("巨人网络")])]),s._v(" "),t("p",[s._v("STL里面还有哪些class不是线程安全的呢？")]),s._v(" "),t("p",[s._v("string、map、vector")]),s._v(" "),t("p",[s._v("map不是线程安全的原因：")]),s._v(" "),t("p",[s._v("比如这样的场景")]),s._v(" "),t("p",[t("strong",[s._v("当有多个写线程对情况下")]),s._v("，并发地插入 map/unordered_map都会引发core dump。")]),s._v(" "),t("h3",{attrs:{id:"_2-c-是不是类型安全的呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-c-是不是类型安全的呢"}},[s._v("#")]),s._v(" 2.C++是不是类型安全的呢？")]),s._v(" "),t("p",[s._v("1、C++"),t("strong",[s._v("不是")]),s._v("类型安全的")]),s._v(" "),t("p",[s._v("2、因为在C++中允许不同类型指针之间进行"),t("strong",[s._v("强制转换")]),s._v("（"),t("code",[s._v("C#")]),s._v("是类型安全的）")]),s._v(" "),t("h3",{attrs:{id:"_3-sizeof只有1个虚析构函数的空类呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-sizeof只有1个虚析构函数的空类呢"}},[s._v("#")]),s._v(" 3."),t("code",[s._v("sizeof")]),s._v("只有1个虚析构函数的空类呢？")]),s._v(" "),t("p",[s._v("1、64位的机器的话，那么就是8Byte，虚函数指针")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sss")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" sss "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"_4-构造函数为什么不能是虚函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-构造函数为什么不能是虚函数"}},[s._v("#")]),s._v(" 4.构造函数为什么不能是虚函数？")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sss")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sss a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" sss "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("ul",[t("li",[s._v("64位机器，64位"),t("code",[s._v("g++")]),s._v(" "),t("ul",[t("li",[s._v("运行报错："),t("code",[s._v("error: constructors cannot be declared virtual [-fpermissive]")])])])])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("constructors cannot be declared virtual [-fpermissive]\n构造函数不能声明为virtual [-fpermissive]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("参考：『Bjarne Stroustrup's C++ Style and Technique FAQ』")]),s._v(" "),t("li",[s._v("参考："),t("a",{attrs:{href:"https://www.stroustrup.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.stroustrup.com/index.html"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("Why don"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("'")]),s._v("t we have "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" constructors"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\nA "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" call is a mechanism to get work done given partial information"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" In particular"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"virtual"')]),s._v(" allows us to call a function knowing only an interfaces "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" the exact type of the object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" To create an object you need complete information"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" In particular"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" you need to know the exact type of what you want to create"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Consequently"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"call to a constructor"')]),s._v(" cannot be "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("为什么我们没有虚拟构造函数？\n1、虚拟调用是在"),t("strong",[s._v("给定部分信息")]),s._v("的情况下完成工作的机制。特别是，“虚拟”允许我们调用一个只知道接口而不知道对象确切类型的函数。\n2、要"),t("strong",[s._v("创建对象")]),s._v("，您需要"),t("strong",[s._v("完整的信息")]),s._v("。特别是，您需要知道您想要创建的内容的确切类型。因此，“对构造函数的调用”不能是虚拟的。")]),s._v(" "),t("h3",{attrs:{id:"_5-为何空类的大小不是零"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-为何空类的大小不是零"}},[s._v("#")]),s._v(" 5.为何空类的大小不是零？")]),s._v(" "),t("ul",[t("li",[s._v("为了"),t("strong",[s._v("确保两个不同对象的地址不同")]),s._v("，必须如此。也正因为如此，new返回的指针总是指向不同的单个对象。我们还是来看代码吧：")]),s._v(" "),t("li",[s._v("参考文献"),t("a",{attrs:{href:"https://www.stroustrup.com/bstechfaq.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Empty a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"impossible: report error to compiler supplier\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"不可能:向编译器供应商报告错误\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    Empty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" Empty"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    Empty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" Empty"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" p2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"impossible: report error to compiler supplier\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"不可能:向编译器供应商报告错误\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我在64位机器，64位g++上，运行了，发现什么都没输出")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("ul",[t("li",[s._v("另外，C++中有一条有趣的规则——空基类并不需要另外一个字节来表示：")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Empty")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("X"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" p2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nice: good optimizer"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nice：很好的优化器"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我在64位机器，64位g++上，运行了，输出了上面的")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("如果上述代码中p1和p2相等，那么"),t("strong",[s._v("说明编译器作了优化")]),s._v("。")]),s._v(" "),t("li",[s._v("这样的优化是安全的，而且非常有用。它允许程序员用空类来表示非常简单的概念，而不需为此付出额外的（空间）代价。一些现代编译器提供了这种“虚基类优化”功能。")])]),s._v(" "),t("h3",{attrs:{id:"_6-我能从构造函数调用虚函数吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-我能从构造函数调用虚函数吗"}},[s._v("#")]),s._v(" 6.我能从构造函数调用虚函数吗？")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("可以。不过你得悠着点")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("当你这样做时，也许你自己都不知道自己在干什么！在构造函数中，虚拟机制尚未发生作用，因为此时overriding尚未发生。万丈高楼平地起，总得先打地基吧？对象的建立也是这样——先把基类构造完毕，然后在此基础上构造派生类。")])]),s._v(" "),t("li",[t("p",[s._v("参考自"),t("a",{attrs:{href:"https://www.stroustrup.com/bstechfaq.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("文章"),t("OutboundLink")],1)])])]),s._v(" "),t("h3",{attrs:{id:"_7-内存泄露及解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-内存泄露及解决办法"}},[s._v("#")]),s._v(" 7.内存泄露及解决办法：")]),s._v(" "),t("p",[s._v("什么是内存泄露？   简单地说就是申请了一块内存空间，"),t("strong",[s._v("使用完毕后没有释放掉")])]),s._v(" "),t("p",[s._v("1、new和malloc申请资源使用 后，没有用delete和free释放；")]),s._v(" "),t("p",[s._v("2、子类继承父类时，父类析构函数不是虚函数。")]),s._v(" "),t("h3",{attrs:{id:"_8-怎么检测内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-怎么检测内存泄漏"}},[s._v("#")]),s._v(" 8.怎么检测内存泄漏？")]),s._v(" "),t("ul",[t("li",[s._v("第一：良好的编码习惯，使用了内存分配的函数，一旦使用完毕,要记得使用其相应的函数释放掉")]),s._v(" "),t("li",[s._v("第二：将分配的内存的指针以链表的形式自行管理，使用完毕之后从链表中删除，程序结束时可检查改这个链表")]),s._v(" "),t("li",[s._v("第三：使用智能指针")]),s._v(" "),t("li",[s._v("第四：一些常见的工具插件，如ccmalloc、Dmalloc、Leaky、"),t("font",{staticStyle:{background:"yellow"}},[s._v("Valgrind")]),s._v("等等")],1)]),s._v(" "),t("h2",{attrs:{id:"✅平常做题错题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅平常做题错题"}},[s._v("#")]),s._v(" ✅平常做题错题")]),s._v(" "),t("h3",{attrs:{id:"_1-测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-测试"}},[s._v("#")]),s._v(" 1.测试")]),s._v(" "),t("ul",[t("li",[s._v("题目参考"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44295104&qid=112041",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%c%c%c\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//以下程序的输出结果是（）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//321")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("牛油的回答")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("2. 运算对象求值顺序不明：\nC++中只有'&&', '||', ',', '?:' 这四个运算符明确了其所属运算对象的求值顺序。\n\n函数调用也是一种运算符\n而实参压栈顺序完全依赖于编译器实现，三个*p++求值顺序不明。\n那么结合第一个问题，假如从左向右压栈结果就是123\n如果换个编译器可能顺序又不同了\n所有选项可能都能有幸成为正确答案\n\n所以，这种表达式是错误的，会产生未定义的行为。\n这种题目真的不该再出。\n\n\n大家看的所谓语言书籍的作者当年基本都是i386的使用者\n这就是大家看到“压栈顺序从右至左”这一说法的原因\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("ul",[t("li",[s._v("我的测试环境64位机器的"),t("code",[s._v("g++")]),s._v("下")]),s._v(" "),t("li",[s._v("实参压栈顺序是『从右到左』")])]),s._v(" "),t("h3",{attrs:{id:"_2-在-c-语言中-对函数参数默认值描述正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-在-c-语言中-对函数参数默认值描述正确的是"}},[s._v("#")]),s._v(" 2.在 c++ 语言中，对函数参数默认值描述正确的是？")]),s._v(" "),t("ul",[t("li",[s._v("题目"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44202421&qid=143523#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("来源"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("A 函数参数的默认值只能设定一个\nB 一个函数的参数若有多个，则参数默认值的设定可以不连续\nC 函数参数必须设定默认值\nD 在设定了参数的默认值后，该参数后面定义的所有参数都必须设定默认值\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("我选择的是D")]),s._v(" "),t("li",[s._v("2020-10.2\n"),t("ul",[t("li",[s._v("我当时的解释：C++语言中，允许在函数的说明或定义时给一个或多个参数指定默认值。"),t("strong",[s._v("参数默认值必须从右向左定义")]),s._v("（入栈的顺序，汇编），即在一个指定了默认值的参数的右边，不能出现没有指定默认值的参数。")])])]),s._v(" "),t("li",[s._v("2021.7月\n"),t("ul",[t("li",[s._v("我对上面的解释：关于汇编的那个事情，我突然记得那时候我学的是X86的汇编")])])])]),s._v(" "),t("h2",{attrs:{id:"✅c-输入输出io"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅c-输入输出io"}},[s._v("#")]),s._v(" ✅C++输入输出IO")]),s._v(" "),t("h2",{attrs:{id:"_1-iostream的设计初衷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-iostream的设计初衷"}},[s._v("#")]),s._v(" 1."),t("code",[s._v("iostream")]),s._v("的设计初衷")]),s._v(" "),t("ul",[t("li",[s._v("对初学者友好")]),s._v(" "),t("li",[s._v("提供一个高效的可扩展的类型安全的IO机制")])]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("iostream")]),s._v("的现状")])]),s._v(" "),t("ul",[t("li",[s._v("在真实的项目中很少用到"),t("code",[s._v("iostream")]),s._v(" "),t("ul",[t("li",[s._v("参考自“陈硕”")])])])]),s._v(" "),t("h2",{attrs:{id:"_2-iostream的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-iostream的特点"}},[s._v("#")]),s._v(" 2."),t("code",[s._v("iostream")]),s._v("的特点")]),s._v(" "),t("ul",[t("li",[s._v("不同于标准库其他class的“值语义(value semantics)”，"),t("code",[s._v("iostream")]),s._v("是“对象语义(object semantics)”\n"),t("ul",[t("li",[s._v("即iostream是"),t("code",[s._v("non-copyable")])]),s._v(" "),t("li",[s._v("iostream禁止拷贝，利用对象的生命期来明确管理资源（如文件）")])])]),s._v(" "),t("li",[t("code",[s._v("iostream")]),s._v("在"),t("strong",[s._v("线程安全")]),s._v("方面没有保证！")])]),s._v(" "),t("h2",{attrs:{id:"✅c-高阶论题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅c-高阶论题"}},[s._v("#")]),s._v(" ✅C++高阶论题")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("术语\n    内存泄漏\nc++编程风格惯用法\n    1.类初始化列表\n    2.枚举类替换命名空间\n    3.RAII(资源获取即初始化)\n    4.copy and swap\n    5.pImpl(指针指向具体实现)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"_1-c-惯用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-c-惯用法"}},[s._v("#")]),s._v(" 1.C++惯用法")]),s._v(" "),t("h3",{attrs:{id:"_1-1-raii-资源获取即初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-raii-资源获取即初始化"}},[s._v("#")]),s._v(" 1.1.RAII(资源获取即初始化)")]),s._v(" "),t("blockquote",[t("p",[s._v("RAII（资源获取即初始化）『"),t("strong",[s._v("R")]),s._v("esource "),t("strong",[s._v("A")]),s._v("cquisition "),t("strong",[s._v("I")]),s._v("s "),t("strong",[s._v("I")]),s._v("nitialization』")])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/RAII",target:"_blank",rel:"noopener noreferrer"}},[s._v("维基百科"),t("OutboundLink")],1),s._v("：RAII")]),s._v(" "),t("li",[s._v("为解决资源管理时的"),t("font",{staticStyle:{background:"yellow"}},[s._v("异常安全性")])],1)]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("它是在一些面向对象语言中的一种惯用法。\n\nRAII源于C++\n在Java，C#，D，Ada，Vala和Rust中也有应用\n1984-1989年期间，比雅尼·斯特劳斯特鲁普和安德鲁·柯尼希在设计C++异常时，为解决资源管理时的异常安全性而使用了该用法[1]，后来比雅尼·斯特劳斯特鲁普将其称为RAII[2]。\n\nRAII要求，资源的有效期与持有资源的对象的生命期严格绑定，即由对象的构造函数完成资源的分配（获取），同时由析构函数完成资源的释放。在这种要求下，只要对象能正确地析构，就不会出现资源泄露问题。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_1-2-pimpl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-pimpl"}},[s._v("#")]),s._v(" 1.2.pImpl")]),s._v(" "),t("blockquote",[t("p",[s._v("pImpl（指向实现的指针）『"),t("strong",[s._v("P")]),s._v("ointer to "),t("strong",[s._v("Impl")]),s._v("ementation』，Implementation，实现，实施")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("是一种 C++ 编程技巧\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("它将类的"),t("strong",[s._v("实现细节")]),s._v("从对象表示中移除，放到一个『"),t("strong",[s._v("分离的类")]),s._v("』中，并以一个『"),t("strong",[s._v("不透明的指针")]),s._v("』进行访问。")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("优点：\n    1、减少依赖项（降低耦合性）：其一减少原类不必要的头文件的依赖，加速编译；其二对Impl类进行修改，无需重新编译原类。\n    2、接口和实现的分离（隐藏了类的实现）：私有成员完全可以隐藏在共有接口之外，给用户一个间接明了的使用接口，尤其适合闭源API设计。\n    3、可使用惰性分配技术：类的某部分实现可以写成按需分配或者实际使用时再分配，从而节省资源。\n\n缺点：\n    1、每个类需要占用小小额外的指针内存。\n\n    2、每个类每次访问具体实现时都要多一个间接指针操作的开销，并且在使用、阅读和调试上都可能有所不便\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[s._v("参考自："),t("a",{attrs:{href:"https://www.cnblogs.com/KillerAery/p/9539705.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("博客园"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"_1-3-copy-and-swap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-copy-and-swap"}},[s._v("#")]),s._v(" 1.3.copy and swap")]),s._v(" "),t("h2",{attrs:{id:"_2-value-semantics和object-semantics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-value-semantics和object-semantics"}},[s._v("#")]),s._v(" 2."),t("code",[s._v("value semantics")]),s._v("和"),t("code",[s._v("object semantics")])]),s._v(" "),t("ul",[t("li",[s._v("参考自：《Linux多线程服务器编程》，使用muduoC++网络库")])]),s._v(" "),t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("仔细理解：书上P482-484")])],1),s._v(" "),t("h3",{attrs:{id:"_2-1-值语义-value-semantics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-值语义-value-semantics"}},[s._v("#")]),s._v(" 2.1.值语义（value semantics）")]),s._v(" "),t("ul",[t("li",[s._v("所谓值语义是指目标对象由源对象拷贝生成，且生成后与源对象完全无关，彼此独立存在，改变互不影响。就像 int 类型变量相互拷贝一样。")]),s._v(" "),t("li",[s._v("value semantics：指的是对象的拷贝与原对象无关")])]),s._v(" "),t("blockquote",[t("p",[s._v("举例：")])]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("C++")]),s._v("的内置类型（"),t("code",[s._v("bool/int/double/char")]),s._v("）都是值语义，标准库里的 "),t("code",[s._v("complex<>")]),s._v("、"),t("code",[s._v("pair<>")]),s._v("、"),t("code",[s._v("vector<>")]),s._v("、"),t("code",[s._v("map<>")]),s._v("、"),t("code",[s._v("string")]),s._v(" 等等类型也都是值语义。")],1),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言中的"),t("code",[s._v("primitive types（基础类型）比如：int 、short、long")]),s._v("也是值语义")],1)]),s._v(" "),t("p",[t("strong",[s._v("拷贝之后就与源对象完全脱离关系")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-对象语义-object-semantics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-对象语义-object-semantics"}},[s._v("#")]),s._v(" 2.2.对象语义（object semantics）")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("别名：")]),s._v("对象语义也叫"),t("strong",[s._v("指针语义")]),s._v("，**引用语义（reference semantics）**等")],1),s._v(" "),t("li",[s._v("通常是指一个目标对象由源对象拷贝生成，但生成后与源对象之间依然共享底层资源，对任何一个的改变都将随之改变另一个。就像包含有指针成员变量的自定义类在默认拷贝构造函数下对其对象之间进行的拷贝。拷贝后目标对象和源对象的指针成员变量仍指向同一块内存数据。如果当其中一个被析构掉后，另一个对象的指针成员就会沦为名副其实的悬垂指针！")])]),s._v(" "),t("p",[s._v("核心理解：”对象语义“这个词中“对象”指的是"),t("font",{staticStyle:{background:"yellow"}},[s._v("『"),t("strong",[s._v("面向对象")]),s._v("』")]),s._v("意义下的对象，并不是我们"),t("font",{staticStyle:{background:"yellow"}},[s._v("『"),t("strong",[s._v("语法意义上class生成的")]),s._v("』")]),s._v("对象，我们的结论是：『面向对象意义下的对象，对象拷贝是禁止的』")],1),s._v(" "),t("ul",[t("li",[s._v("例子：")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("薪资管理系统中，一个对象叫：员工张三\n我们拷贝“员工张三”这个对象是没有意义的！！\n因为员工张三这个对象代表的是一个活生生的人，我们拷贝它是被禁止的。\n\n服务器开发中，也有类似的情况\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("结论："),t("font",{staticStyle:{background:"yellow"}},[s._v('『面向对象』意义下的"对象"是'),t("code",[s._v("non-copyable")]),s._v("（不能够拷贝的）")])],1)]),s._v(" "),t("blockquote",[t("p",[s._v("举例：")])]),s._v(" "),t("ul",[t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言中class对象"),t("font",{staticStyle:{background:"yellow"}},[s._v("都是")]),s._v("“对象语义”")],1),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言没有办法实现『真正的』“值语义”class，只好用"),t("code",[s._v("immutable object")]),s._v("来模拟")],1),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言中有"),t("code",[s._v("value object")]),s._v("一说，按照定义，它实际上是"),t("code",[s._v("immutable object（不可改变的对象）")]),s._v("，比如"),t("code",[s._v("Interger，String，BigInterger")])],1)])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("C++")]),s._v("语言中class本质上是"),t("font",{staticStyle:{background:"yellow"}},[s._v("值语义")]),s._v("，值语义对象，比如"),t("code",[s._v("pair<>，vector<>，string<>")]),s._v("等，都是可修改的（mutable）")],1)])]),s._v(" "),t("h3",{attrs:{id:"_2-3-优点缺点对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优点缺点对比"}},[s._v("#")]),s._v(" 2.3.优点缺点对比")]),s._v(" "),t("p",[s._v("值语义（value semantics）")]),s._v(" "),t("ul",[t("li",[s._v("优点：生命期管理很简单，比如 C++中"),t("code",[s._v("int")]),s._v("类型一样—你不需要操心 int 对象 的生命期。\n"),t("ul",[t("li",[s._v("因为：值语义的对象要么是"),t("code",[s._v("stack object")]),s._v("，要么是"),t("code",[s._v("作为其他object的成员")])])])])]),s._v(" "),t("p",[s._v("对象语义（object semantics）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("缺点：对象语义的object由于不能拷贝，因此我们只能在"),t("font",{staticStyle:{background:"yellow"}},[s._v("C++的实现")]),s._v("是通过’指针“或”引用“来使用它")],1)]),s._v(" "),t("li",[t("p",[t("code",[s._v("immutable")]),s._v("不可修改的")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("mutable")]),s._v("可修改的")])])]),s._v(" "),t("h2",{attrs:{id:"_3-c-惯用法和value-semantics组合拳"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-c-惯用法和value-semantics组合拳"}},[s._v("#")]),s._v(" 3.C++惯用法和"),t("code",[s._v("value semantics")]),s._v("组合拳")]),s._v(" "),t("ul",[t("li",[s._v("值语义，对象语义")]),s._v(" "),t("li",[s._v("RAII")]),s._v(" "),t("li",[s._v("智能指针")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-c-的值语义是『双刃剑』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-c-的值语义是『双刃剑』"}},[s._v("#")]),s._v(" 3.1.C++的值语义是『双刃剑』")]),s._v(" "),t("ul",[t("li",[s._v("由于C++中class本质上是"),t("font",{staticStyle:{background:"yellow"}},[s._v("值语义")]),s._v("，这\n"),t("ul",[t("li",[s._v("才会出现"),t("code",[s._v("object slicing")]),s._v("这种语言独有的问题！！")]),s._v(" "),t("li",[s._v("才会需要程序员注意："),t("code",[s._v("pass-by-value")]),s._v("和"),t("code",[s._v("pass-by-const-reference")]),s._v("的取舍")])])],1),s._v(" "),t("li",[s._v("在其他『面向对象语言』，比如Java中，这都不需要费脑筋。。")])]),s._v(" "),t("p",[s._v("书上P488")]),s._v(" "),t("ul",[t("li",[s._v("值语义是"),t("strong",[s._v("C++语言3大约束之一")]),s._v("，C++的设计初衷是让用户定义的类型（class）能像内置类型（int）一样工作，具有"),t("strong",[s._v("同等")]),s._v("的地位。")])]),s._v(" "),t("h3",{attrs:{id:"_3-3-问题-智能指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-问题-智能指针"}},[s._v("#")]),s._v(" 3.3.问题：智能指针？")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("智能指针既不是『值语义』也不是『对象语义』")])],1),s._v(" "),t("li",[s._v("由于『值语义和对象语义的原因』\n"),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("如果不使用智能指针，用C++做面向对象编程将会困难重重")])],1)])])]),s._v(" "),t("h2",{attrs:{id:"_4-c-语言层面高度探讨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-c-语言层面高度探讨"}},[s._v("#")]),s._v(" 4.C++语言层面高度探讨")]),s._v(" "),t("p",[s._v("C++复杂的根源在于三大约束：")]),s._v(" "),t("ul",[t("li",[s._v("与C的完全兼容")]),s._v(" "),t("li",[s._v("静态类型检查")]),s._v(" "),t("li",[s._v("最高性能")])]),s._v(" "),t("p",[t("strong",[s._v("在三大约束下，C++未能完善对于面向对象思想的支持，未能建立强大的动态能力，从而使得C++在OO这个单项上存在本质缺陷")]),s._v("。")]),s._v(" "),t("ul",[t("li",[s._v("事实上，C++的过程、OB模型相当成熟和稳定")]),s._v(" "),t("li",[s._v("而泛型模型，就单项来说，除了语法丑陋之外也没有大的问题。")]),s._v(" "),t("li",[s._v("缺陷集中体现在OO模型的实现，并因此干扰了其他几个范式的完整程度。\n"),t("ul",[t("li",[s._v("然而，OO的缺陷绝非设计者的偏执，其原因在于三大约束。如果坚持三大约束，则即使再重新设计一次，结果也与今日相差不远。Stroustrup在多种场合表示，对C++的设计没有大的后悔之处，意思就是这个。")]),s._v(" "),t("li",[s._v("侯捷先生早在2001年初即对我说，C++在OO上不及Java，当时体会不深，认为没有大一统的单根类库会使设计更加灵活，后来又认为凭借GP可以抵消OO的不足甚至超越之，现在看来即使不是不可能，这条道路也必然是艰辛异常，成败难以预料。")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("参考自："),t("a",{attrs:{href:"https://blog.csdn.net/myan/article/details/148900",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSDN的myan（孟岩）"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"_5-c-的编程范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-c-的编程范式"}},[s._v("#")]),s._v(" 5.C++的编程范式")]),s._v(" "),t("p",[s._v("5.1.过程式编程")]),s._v(" "),t("p",[s._v("5.2.基于对象编程")]),s._v(" "),t("p",[s._v("5.3.面向对象编程")]),s._v(" "),t("p",[s._v("5.4.泛型编程")]),s._v(" "),t("p",[s._v("5.5.函数式编程")]),s._v(" "),t("h2",{attrs:{id:"_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[s._v("#")]),s._v(" 6.c++11、c++14、C++17以及C++20有什么区别呢?")]),s._v(" "),t("ul",[t("li",[s._v("字节跳动，一面")]),s._v(" "),t("li",[s._v("参考：https://github.com/AnthonyCalandra/modern-cpp-features")])]),s._v(" "),t("blockquote",[t("p",[s._v("C++11")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++11 includes the following new language features:\n\nmove semantics\nvariadic templates\nrvalue references\nforwarding references\ninitializer lists\nstatic assertions\nauto\nlambda expressions\ndecltype\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" aliases\nnullptr\nstrongly-typed enums\nattributes\nconstexpr\ndelegating constructors\nuser-defined literals\nexplicit virtual overrides\nfinal specifier\ndefault functions\ndeleted functions\nrange-based "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" loops\nspecial member functions "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" move semantics\nconverting constructors\nexplicit conversion functions\ninline-namespaces\nnon-static data member initializers\nright angle brackets\nref-qualified member functions\ntrailing "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" types\nnoexcept specifier\nchar32_t and char16_t\nraw string literals\n\n\nC++11 includes the following new library features:\n\nstd::move\nstd::forward\nstd::thread\nstd::to_string\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" traits\nsmart pointers\nstd::chrono\ntuples\nstd::tie\nstd::array\nunordered containers\nstd::make_shared\nstd::ref\nmemory model\nstd::async\nstd::begin/end\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br")])]),t("blockquote",[t("p",[s._v("C++14")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++14 includes the following new language features:\n\nbinary literals\ngeneric lambda expressions\nlambda capture initializers\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" deduction\ndecltype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("auto"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrelaxing constraints on constexpr functions\nvariable templates\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("deprecated"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" attribute\nC++14 includes the following new library features:\n\nuser-defined literals "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" standard library types\ncompile-time integer sequences\nstd::make_unique\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("blockquote",[t("p",[s._v("C++17")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++17 includes the following new language features:\n\ntemplate argument deduction "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" class templates\ndeclaring non-type template parameters with auto\nfolding expressions\nnew rules "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" auto deduction from braced-init-list\nconstexpr lambda\nlambda capture this by value\ninline variables\nnested namespaces\nstructured bindings\nselection statements with initializer\nconstexpr "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v("\nutf-8 character literals\ndirect-list-initialization of enums\nfallthrough, nodiscard, maybe_unused attributes\nC++17 includes the following new library features:\n\nstd::variant\nstd::optional\nstd::any\nstd::string_view\nstd::invoke\nstd::apply\nstd::filesystem\nstd::byte\nsplicing "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" maps and sets\nparallel algorithms\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("blockquote",[t("p",[s._v("C++20")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++20 includes the following new language features:\n\ncoroutines\nconcepts\ndesignated initializers\ntemplate syntax "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" lambdas\nrange-based "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" loop with initializer\nlikely and unlikely attributes\ndeprecate implicit capture of this\nclass types "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" non-type template parameters\nconstexpr virtual functions\nexplicit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nimmediate functions\nusing enum\nlambda capture of parameter pack\nchar8_t\nC++20 includes the following new library features:\n\nconcepts library\nsynchronized buffered outputstream\nstd::span\nbit operations\nmath constants\nstd::is_constant_evaluated\nstd::make_shared supports arrays\nstarts_with and ends_with on strings\ncheck "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" associative container has element\nstd::bit_cast\nstd::midpoint\nstd::to_array\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("h2",{attrs:{id:"_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[s._v("#")]),s._v(" 7.C和C++在编译时,函数名会怎么变化,那如果是匿名空间呢?")]),s._v(" "),t("p",[s._v("在匿名命名空间中声明的名称也将被编译器转换，与编译器为这个匿名命名空间生成的唯一内部名称(即这里的"),t("code",[s._v("__UNIQUE_NAME_)")]),s._v("绑定在一起")]),s._v(" "),t("h2",{attrs:{id:"🔋-参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔋-参考资料"}},[s._v("#")]),s._v(" 🔋 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("孟岩"),t("a",{attrs:{href:"https://blog.csdn.net/myan",target:"_blank",rel:"noopener noreferrer"}},[s._v("在CSDN上的博客"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("《Linux多线程服务端编程》，陈硕")]),s._v(" "),t("li",[s._v("光城，"),t("a",{attrs:{href:"https://light-city.club/sc/",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++那些事"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("重要网站：『"),t("a",{attrs:{href:"https://www.stroustrup.com/bs_faq2.html#virtual-ctor",target:"_blank",rel:"noopener noreferrer"}},[s._v("Bjarne Stroustrup's C++ Style and Technique FAQ"),t("OutboundLink")],1),s._v("』\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.stroustrup.com/bs_faq2.html#virtual-ctor",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.stroustrup.com/bs_faq2.html#virtual-ctor"),t("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);