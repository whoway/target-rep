(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{273:function(s,t,a){s.exports=a.p+"assets/img/成员变量和非成员变量.abeeccdf.png"},274:function(s,t,a){s.exports=a.p+"assets/img/成员函数和非成员函数.18eaed6b.png"},275:function(s,t,a){s.exports=a.p+"assets/img/访问权限.ce788b0d.png"},276:function(s,t,a){s.exports=a.p+"assets/img/class中函数3大概念.43294c4e.png"},325:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"c-面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-面试题"}},[s._v("#")]),s._v(" C++面试题")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background:yellow">\n<font style="background:pink">\n<font style="background: MediumSpringGreen">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("当一个程序员足够老，他就从工程师变成了历史学家")])],1)]),s._v(" "),t("h2",{attrs:{id:"📑-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📑-目录"}},[s._v("#")]),s._v(" 📑 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#📑-目录"}},[s._v("📑 目录")])]),t("li",[t("a",{attrs:{href:"#✅虚函数"}},[s._v("✅虚函数")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-虚函数表-vtbl"}},[s._v("1.虚函数表vtbl")])]),t("li",[t("a",{attrs:{href:"#_2-构造一个「派生类」对象的过程"}},[s._v("2.构造一个「派生类」对象的过程")])]),t("li",[t("a",{attrs:{href:"#_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[s._v("2.1.是先构造父类的「虚表指针」还是先构造父类的「成员」？")])]),t("li",[t("a",{attrs:{href:"#_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[s._v("2.2.「虚表指针」和「构造函数体」那个先被构造？")])]),t("li",[t("a",{attrs:{href:"#_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[s._v("3.c++「运行构造函数」的时候「虚函数表」被构造出来了么？")])]),t("li",[t("a",{attrs:{href:"#_4-析构一个「派生类」object的过程"}},[s._v("4.析构一个「派生类」object的过程")])])])]),t("li",[t("a",{attrs:{href:"#✅基础"}},[s._v("✅基础")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-vector是线程安全的吗"}},[s._v("1.vector是线程安全的吗？")])]),t("li",[t("a",{attrs:{href:"#_2-c-是不是类型安全的呢"}},[s._v("2.C++是不是类型安全的呢？")])]),t("li",[t("a",{attrs:{href:"#_3-sizeof-只有1个虚析构函数的空类呢"}},[s._v("3.sizeof只有1个虚析构函数的空类呢？")])]),t("li",[t("a",{attrs:{href:"#_4-构造函数为什么不能是虚函数"}},[s._v("4.构造函数为什么不能是虚函数？")])]),t("li",[t("a",{attrs:{href:"#_5-为何空类的大小不是零"}},[s._v("5.为何空类的大小不是零？")])]),t("li",[t("a",{attrs:{href:"#_6-我能从构造函数调用虚函数吗"}},[s._v("6.我能从构造函数调用虚函数吗？")])]),t("li",[t("a",{attrs:{href:"#_7-内存泄露及解决办法"}},[s._v("7.内存泄露及解决办法：")])]),t("li",[t("a",{attrs:{href:"#_8-怎么检测内存泄漏"}},[s._v("8.怎么检测内存泄漏？")])]),t("li",[t("a",{attrs:{href:"#_9-初始化顺序"}},[s._v("9.初始化顺序")])])])]),t("li",[t("a",{attrs:{href:"#✅平常做题错题"}},[s._v("✅平常做题错题")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-测试"}},[s._v("1.测试")])]),t("li",[t("a",{attrs:{href:"#_2-在-c-语言中-对函数参数默认值描述正确的是"}},[s._v("2.在 c++ 语言中，对函数参数默认值描述正确的是？")])])])]),t("li",[t("a",{attrs:{href:"#✅c-输入输出io"}},[s._v("✅C++输入输出IO")])]),t("li",[t("a",{attrs:{href:"#_1-iostream-的设计初衷"}},[s._v("1.iostream的设计初衷")])]),t("li",[t("a",{attrs:{href:"#_2-iostream-的特点"}},[s._v("2.iostream的特点")])]),t("li",[t("a",{attrs:{href:"#✅c-高阶论题"}},[s._v("✅C++高阶论题")])]),t("li",[t("a",{attrs:{href:"#_1-c-惯用法"}},[s._v("1.C++惯用法")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-raii-资源获取即初始化"}},[s._v("1.1.RAII(资源获取即初始化)")])]),t("li",[t("a",{attrs:{href:"#_1-2-pimpl"}},[s._v("1.2.pImpl")])]),t("li",[t("a",{attrs:{href:"#_1-3-copy-and-swap"}},[s._v("1.3.copy and swap")])])])]),t("li",[t("a",{attrs:{href:"#_2-value-semantics-和-object-semantics"}},[s._v("2.value semantics和object semantics")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-值语义-value-semantics"}},[s._v("2.1.值语义（value semantics）")])]),t("li",[t("a",{attrs:{href:"#_2-2-对象语义-object-semantics"}},[s._v("2.2.对象语义（object semantics）")])]),t("li",[t("a",{attrs:{href:"#_2-3-优点缺点对比"}},[s._v("2.3.优点缺点对比")])])])]),t("li",[t("a",{attrs:{href:"#_3-c-惯用法和-value-semantics-组合拳"}},[s._v("3.C++惯用法和value semantics组合拳")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-c-的值语义是『双刃剑』"}},[s._v("3.1.C++的值语义是『双刃剑』")])]),t("li",[t("a",{attrs:{href:"#_3-3-问题-智能指针"}},[s._v("3.3.问题：智能指针？")])])])]),t("li",[t("a",{attrs:{href:"#_4-c-语言层面高度探讨"}},[s._v("4.C++语言层面高度探讨")])]),t("li",[t("a",{attrs:{href:"#_5-c-的编程范式"}},[s._v("5.C++的编程范式")])]),t("li",[t("a",{attrs:{href:"#_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[s._v("6.c++11、c++14、C++17以及C++20有什么区别呢?")])]),t("li",[t("a",{attrs:{href:"#_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[s._v("7.C和C++在编译时,函数名会怎么变化,那如果是匿名空间呢?")])]),t("li",[t("a",{attrs:{href:"#_8-萃取-traits-技巧「模版的应用」"}},[s._v("8.萃取 traits 技巧「模版的应用」")])]),t("li",[t("a",{attrs:{href:"#_9-菱形继承「虚基础」"}},[s._v("9.菱形继承「虚基础」")])]),t("li",[t("a",{attrs:{href:"#🔋-参考资料"}},[s._v("🔋 参考资料")])]),t("li",[t("a",{attrs:{href:"#c-核心详解"}},[s._v("C++核心详解")])]),t("li",[t("a",{attrs:{href:"#✅『oob』基于对象的程序设计"}},[s._v("✅『OOB』基于对象的程序设计")])]),t("li",[t("a",{attrs:{href:"#_1-对比-class-struct-union-和-enum"}},[s._v("1.对比class/struct/union和enum")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-class"}},[s._v("1.1.class")])]),t("li",[t("a",{attrs:{href:"#_1-2-struct-『c-中』"}},[s._v("1.2.struct『C++中』")])]),t("li",[t("a",{attrs:{href:"#_1-3-union-『c-中』"}},[s._v("1.3.union『C++中』")])]),t("li",[t("a",{attrs:{href:"#_1-4-enum-『只有它不是特殊的类』"}},[s._v("1.4.enum『只有它不是特殊的类』")])])])]),t("li",[t("a",{attrs:{href:"#_2-类的『成员变量』和『非成员变量』⭐️"}},[s._v("2.类的『成员变量』和『非成员变量』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-成员变量"}},[s._v("2.1.成员变量")])]),t("li",[t("a",{attrs:{href:"#_2-2-非成员变量"}},[s._v("2.2.非成员变量")])])])]),t("li",[t("a",{attrs:{href:"#_3-类的『成员函数』和『非成员函数』⭐️"}},[s._v("3.类的『成员函数』和『非成员函数』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-成员函数"}},[s._v("3.1.成员函数")])]),t("li",[t("a",{attrs:{href:"#_3-2-非成员函数"}},[s._v("3.2.非成员函数")])])])]),t("li",[t("a",{attrs:{href:"#_4-big-three-讲解"}},[s._v("4.Big Three讲解")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-构造函数详解"}},[s._v("4.1.构造函数详解")])]),t("li",[t("a",{attrs:{href:"#_4-2-析构函数详解"}},[s._v("4.2.析构函数详解")])])])]),t("li",[t("a",{attrs:{href:"#_5-访问属性"}},[s._v("5.访问属性")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1-内部访问和对象访问"}},[s._v("5.1.内部访问和对象访问")])])])]),t("li",[t("a",{attrs:{href:"#_6-namespace-命名空间"}},[s._v("6.namespace命名空间")])]),t("li",[t("a",{attrs:{href:"#_7-其余"}},[s._v("7.其余")])]),t("li",[t("a",{attrs:{href:"#✅『oop』面向对象的程序设计"}},[s._v("✅『OOP』面向对象的程序设计")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[s._v("1.1.类型转换函数(类型转换函数-不等于-类型转换构造函数)")])])])]),t("li",[t("a",{attrs:{href:"#_1-辨析overload、override、overwrite⭐️『已解决』"}},[s._v("1.辨析Overload、Override、Overwrite⭐️『已解决』")]),t("ul",[t("li",[t("a",{attrs:{href:"#✅区分overload、overwrite和override"}},[s._v("✅区分Overload、Overwrite和Override")])]),t("li",[t("a",{attrs:{href:"#同一个class里面的成员函数加-不加virtual算不算重载"}},[s._v("同一个class里面的成员函数加/不加virtual算不算重载？")])]),t("li",[t("a",{attrs:{href:"#那下面这样的叫什么"}},[s._v("那下面这样的叫什么？")])])])]),t("li",[t("a",{attrs:{href:"#_2-多态与虚函数"}},[s._v("2.多态与虚函数")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-static-变量的说明"}},[s._v("2.1.static变量的说明")])]),t("li",[t("a",{attrs:{href:"#_2-2-虚函数相关"}},[s._v("2.2.虚函数相关")])]),t("li",[t("a",{attrs:{href:"#_2-2-虚函数能不能inline"}},[s._v("2.2.虚函数能不能inline")])])])]),t("li",[t("a",{attrs:{href:"#_3-『多态神器』-多态3条件"}},[s._v("3.『多态神器』-多态3条件")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-条件1和条件2❎『非多态』"}},[s._v("3.1.条件1和条件2❎『非多态』")])]),t("li",[t("a",{attrs:{href:"#_3-2-条件3❎『非多态』"}},[s._v("3.2.条件3❎『非多态』")])]),t("li",[t("a",{attrs:{href:"#_3-3-虚析构函数"}},[s._v("3.3.虚析构函数")])]),t("li",[t("a",{attrs:{href:"#_3-4-『添加作用域的调用』"}},[s._v("3.4.『添加作用域的调用』")])]),t("li",[t("a",{attrs:{href:"#_3-5-静态绑定的核心理解『易错难点』⭐️"}},[s._v("3.5.静态绑定的核心理解『易错难点』⭐️")])]),t("li",[t("a",{attrs:{href:"#✅上面是难点"}},[s._v("✅上面是难点")])]),t("li",[t("a",{attrs:{href:"#_3-6-const对象"}},[s._v("3.6.const对象")])])])]),t("li",[t("a",{attrs:{href:"#_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[s._v("4.构造函数（ctor）和析构函数（dtor）相关⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[s._v("4.1.C++ 构造函数和析构函数可以是虚函数嘛？")])]),t("li",[t("a",{attrs:{href:"#_4-2-构造函数中调用虚函数会怎么样"}},[s._v("4.2.构造函数中调用虚函数会怎么样？")])]),t("li",[t("a",{attrs:{href:"#_4-3-析构函数中调用虚函数会怎么样"}},[s._v("4.3.析构函数中调用虚函数会怎么样？")])])])]),t("li",[t("a",{attrs:{href:"#⭐️4-『运算符重载』详解"}},[s._v("⭐️4.『运算符重载』详解")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-重载的2种函数类型"}},[s._v("4.1.重载的2种函数类型")])])])]),t("li",[t("a",{attrs:{href:"#谈一谈null-0-nullptr"}},[s._v("谈一谈NULL，0，nullptr")])]),t("li",[t("a",{attrs:{href:"#✅杂谈"}},[s._v("✅杂谈")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-常量表达式"}},[s._v("1.常量表达式")])]),t("li",[t("a",{attrs:{href:"#_2-c-98关键字"}},[s._v("2.C++98关键字")])])])]),t("li",[t("a",{attrs:{href:"#✅常识-非面试"}},[s._v("✅常识-非面试")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-区分c-和c"}},[s._v("1.区分C++和C")])]),t("li",[t("a",{attrs:{href:"#如果使用brk-c-堆内存为什么不连续"}},[s._v("如果使用brk(). C++：堆内存为什么不连续？")])])])]),t("li",[t("a",{attrs:{href:"#引申问题-由new和仅在class上的对象或仅在stack上的对象-⭐️"}},[s._v("引申问题-由new和仅在class上的对象或仅在stack上的对象！⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-如何定义1个『只能』在『堆』上生成对象的类"}},[s._v("1.如何定义1个『只能』在『堆』上生成对象的类？")])]),t("li",[t("a",{attrs:{href:"#_2-如何定义1个『只能』在『-栈-』上生成对象的class"}},[s._v("2.如何定义1个『只能』在『栈』上生成对象的class？")])]),t("li",[t("a",{attrs:{href:"#追问-c-中-为了让某个class只能通过new来创建-那malloc为啥不可以"}},[s._v("追问：C++中，为了让某个class只能通过new来创建？那malloc为啥不可以？")])]),t("li",[t("a",{attrs:{href:"#追问-那c-里面的strcut也是只能用new-不能用malloc吗"}},[s._v("追问：那C++里面的strcut也是只能用new，不能用malloc吗？")])])])]),t("li",[t("a",{attrs:{href:"#c-如何实现多态"}},[s._v("C++如何实现多态？")])]),t("li",[t("a",{attrs:{href:"#静态函数可以加virtual吗"}},[s._v("静态函数可以加virtual吗？")])]),t("li",[t("a",{attrs:{href:"#new是线程安全的吗"}},[s._v("new是线程安全的吗？")])]),t("li",[t("a",{attrs:{href:"#gdb如何调试多线程"}},[s._v("gdb如何调试多线程？")])]),t("li",[t("a",{attrs:{href:"#book-cxx记忆手册"}},[s._v("📖CXX记忆手册")])]),t("li",[t("a",{attrs:{href:"#_1-运算符"}},[s._v("1.运算符")]),t("ul",[t("li",[t("a",{attrs:{href:"#不能重载的5个运算符记忆"}},[s._v("不能重载的5个运算符记忆")])]),t("li",[t("a",{attrs:{href:"#可以重载-但建议不要重载的运算符"}},[s._v("可以重载, 但建议不要重载的运算符")])])])]),t("li",[t("a",{attrs:{href:"#_2-什么是big-three-什么是big-five"}},[s._v("2.什么是big three，什么是big five")])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("h2",{attrs:{id:"✅虚函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅虚函数"}},[s._v("#")]),s._v(" ✅虚函数")]),s._v(" "),t("p",[s._v("本部分，特别是下面5个概念的顺序，不仅仅影响基础概念，而且还会影响，我们对线程安全的理解！！")]),s._v(" "),t("ul",[t("li",[s._v("虚函数表")]),s._v(" "),t("li",[s._v("虚函数指针")]),s._v(" "),t("li",[s._v("成员变量")]),s._v(" "),t("li",[s._v("构造函数")]),s._v(" "),t("li",[s._v("虚构函数")])]),s._v(" "),t("h3",{attrs:{id:"_1-虚函数表vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-虚函数表vtbl"}},[s._v("#")]),s._v(" 1.虚函数表"),t("code",[s._v("vtbl")])]),s._v(" "),t("ol",[t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("编译器在"),t("strong",[s._v("编译时期")]),s._v("为每个带虚函数的「类」创建一份"),t("strong",[s._v("虚函数表")])])],1)]),s._v(" "),t("li",[t("p",[t("strong",[s._v("实例化")]),s._v("对象时, 编译器自动将"),t("strong",[s._v("类对象（object）"),t("strong",[s._v("的")]),s._v("虚表指针")]),s._v("指向这个虚函数表")])])]),s._v(" "),t("ul",[t("li",[s._v("参考自：《收割BAT："),t("a",{attrs:{href:"https://www.nowcoder.com/tutorial/10018/index",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++校招学习路线总结"),t("OutboundLink")],1),s._v("》，特立独行MVP")])]),s._v(" "),t("p",[s._v("意思：")]),s._v(" "),t("p",[s._v("虚函数表，是属于class的。")]),s._v(" "),t("p",[s._v("每个object有属于各自的虚表指针。")]),s._v(" "),t("h3",{attrs:{id:"_2-构造一个「派生类」对象的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-构造一个「派生类」对象的过程"}},[s._v("#")]),s._v(" 2.构造一个「派生类」对象的过程")]),s._v(" "),t("ul",[t("li",[s._v("1.构造"),t("strong",[s._v("基类")]),s._v("部分：\n"),t("ul",[t("li",[s._v("1.将object实例的"),t("strong",[s._v("虚表指针")]),s._v("指向"),t("strong",[s._v("基类的vtbl")])]),s._v(" "),t("li",[s._v("2.构造基类的**「成员变量」**")]),s._v(" "),t("li",[s._v("3."),t("font",{staticStyle:{background:"yellow"}},[s._v("执行基类的「"),t("strong",[s._v("构造函数函数体」")])])],1)])]),s._v(" "),t("li",[s._v("2."),t("strong",[s._v("递归")]),s._v("构造派生类部分：\n"),t("ul",[t("li",[s._v("1.将实例的虚表指针指向"),t("strong",[s._v("派生类vtbl")])]),s._v(" "),t("li",[s._v("2.构造派生类的成员变量")]),s._v(" "),t("li",[s._v("3.执行派生类的构造函数体")])])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<string>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n                       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n                       "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a="')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  string s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  D "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("d")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//output")]),s._v("\nh@dell"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("$ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out\nB constructor\nB"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("f\na"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("496370680")]),s._v("\nD constructor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("h3",{attrs:{id:"_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[s._v("#")]),s._v(" 2.1.是先构造父类的「虚表指针」还是先构造父类的「成员」？")]),s._v(" "),t("ul",[t("li",[s._v("虚表指针")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[s._v("#")]),s._v(" 2.2.「虚表指针」和「构造函数体」那个先被构造？")]),s._v(" "),t("ul",[t("li",[s._v("虚表指针先构造")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<string>")])]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D constructor\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D::f\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" s "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ss"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\tstring s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tD "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("d")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出")]),s._v("\nB constructor\nB"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("f\nD constructor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h3",{attrs:{id:"_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[s._v("#")]),s._v(" 3.c++「运行构造函数」的时候「虚函数表」被构造出来了么？")]),s._v(" "),t("p",[s._v("​\t构造出来了。")]),s._v(" "),t("p",[s._v("​\t因为「虚函数表」是在"),t("strong",[s._v("编译时")]),s._v("由编译器创建，在"),t("strong",[s._v("运行")]),s._v("时肯定已经创建完成。")]),s._v(" "),t("h3",{attrs:{id:"_4-析构一个「派生类」object的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-析构一个「派生类」object的过程"}},[s._v("#")]),s._v(" 4.析构一个「派生类」object的过程")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("1."),t("strong",[s._v("递归")]),s._v("析构派生类部分：")]),s._v(" "),t("ul",[t("li",[s._v("1.将实例的"),t("strong",[s._v("虚表指针")]),s._v("指向"),t("strong",[s._v("派生类vtbl")])]),s._v(" "),t("li",[s._v("2.执行派生类的"),t("strong",[s._v("析构函数体")])]),s._v(" "),t("li",[s._v("3.析构派生类的"),t("strong",[s._v("成员变量")])])])]),s._v(" "),t("li",[t("p",[s._v("2.析构基类部分：")]),s._v(" "),t("ul",[t("li",[s._v("1.将实例的"),t("strong",[s._v("虚表指针")]),s._v("指向基类的vtbl")]),s._v(" "),t("li",[s._v("2.执行基类的析构函数函数体")]),s._v(" "),t("li",[s._v("3.析构基类的成员变量")])])])]),s._v(" "),t("h2",{attrs:{id:"✅基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅基础"}},[s._v("#")]),s._v(" ✅基础")]),s._v(" "),t("h3",{attrs:{id:"_1-vector是线程安全的吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-vector是线程安全的吗"}},[s._v("#")]),s._v(" 1.vector是线程安全的吗？")]),s._v(" "),t("ul",[t("li",[s._v("不是线程安全的！")])]),s._v(" "),t("p",[s._v("比如，一个线程是生产者，不断push_back，然后多个线程并发读")]),s._v(" "),t("p",[s._v("​\t由于push_back潜在的内存重新申请和对象复制问题，会导致读方（消费者）的迭代器失效。不一定会产生正确的行为。")]),s._v(" "),t("p",[s._v("解决方式，进行额外的同步。")]),s._v(" "),t("ul",[t("li",[s._v("参考：《Linux多线程服务器端编程》P4")]),s._v(" "),t("li",[s._v("巨人网络")])]),s._v(" "),t("p",[s._v("STL里面还有哪些class不是线程安全的呢？")]),s._v(" "),t("p",[s._v("string、map、vector")]),s._v(" "),t("p",[s._v("map不是线程安全的原因：")]),s._v(" "),t("p",[s._v("比如这样的场景")]),s._v(" "),t("p",[t("strong",[s._v("当有多个写线程对情况下")]),s._v("，并发地插入 map/unordered_map都会引发core dump。")]),s._v(" "),t("h3",{attrs:{id:"_2-c-是不是类型安全的呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-c-是不是类型安全的呢"}},[s._v("#")]),s._v(" 2.C++是不是类型安全的呢？")]),s._v(" "),t("p",[s._v("1、C++"),t("strong",[s._v("不是")]),s._v("类型安全的")]),s._v(" "),t("p",[s._v("2、因为在C++中允许不同类型指针之间进行"),t("strong",[s._v("强制转换")]),s._v("（"),t("code",[s._v("C#")]),s._v("是类型安全的）")]),s._v(" "),t("h3",{attrs:{id:"_3-sizeof只有1个虚析构函数的空类呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-sizeof只有1个虚析构函数的空类呢"}},[s._v("#")]),s._v(" 3."),t("code",[s._v("sizeof")]),s._v("只有1个虚析构函数的空类呢？")]),s._v(" "),t("p",[s._v("1、64位的机器的话，那么就是8Byte，虚函数指针")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sss")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" sss "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"_4-构造函数为什么不能是虚函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-构造函数为什么不能是虚函数"}},[s._v("#")]),s._v(" 4.构造函数为什么不能是虚函数？")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("sss")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sss")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" argc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("argv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    sss a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" sss "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("ul",[t("li",[s._v("64位机器，64位"),t("code",[s._v("g++")]),s._v(" "),t("ul",[t("li",[s._v("运行报错："),t("code",[s._v("error: constructors cannot be declared virtual [-fpermissive]")])])])])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("constructors cannot be declared virtual [-fpermissive]\n构造函数不能声明为virtual [-fpermissive]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("参考：『Bjarne Stroustrup's C++ Style and Technique FAQ』")]),s._v(" "),t("li",[s._v("参考："),t("a",{attrs:{href:"https://www.stroustrup.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.stroustrup.com/index.html"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("Why don"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("'")]),s._v("t we have "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" constructors"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("\nA "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" call is a mechanism to get work done given partial information"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" In particular"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"virtual"')]),s._v(" allows us to call a function knowing only an interfaces "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" the exact type of the object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" To create an object you need complete information"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" In particular"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" you need to know the exact type of what you want to create"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Consequently"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"call to a constructor"')]),s._v(" cannot be "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("为什么我们没有虚拟构造函数？\n1、虚拟调用是在"),t("strong",[s._v("给定部分信息")]),s._v("的情况下完成工作的机制。特别是，“虚拟”允许我们调用一个只知道接口而不知道对象确切类型的函数。\n2、要"),t("strong",[s._v("创建对象")]),s._v("，您需要"),t("strong",[s._v("完整的信息")]),s._v("。特别是，您需要知道您想要创建的内容的确切类型。因此，“对构造函数的调用”不能是虚拟的。")]),s._v(" "),t("h3",{attrs:{id:"_5-为何空类的大小不是零"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-为何空类的大小不是零"}},[s._v("#")]),s._v(" 5.为何空类的大小不是零？")]),s._v(" "),t("ul",[t("li",[s._v("为了"),t("strong",[s._v("确保两个不同对象的地址不同")]),s._v("，必须如此。也正因为如此，new返回的指针总是指向不同的单个对象。我们还是来看代码吧：")]),s._v(" "),t("li",[s._v("参考文献"),t("a",{attrs:{href:"https://www.stroustrup.com/bstechfaq.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Empty")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Empty a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"impossible: report error to compiler supplier\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"不可能:向编译器供应商报告错误\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    Empty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" Empty"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    Empty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" Empty"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" p2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"impossible: report error to compiler supplier\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"不可能:向编译器供应商报告错误\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我在64位机器，64位g++上，运行了，发现什么都没输出")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("ul",[t("li",[s._v("另外，C++中有一条有趣的规则——空基类并不需要另外一个字节来表示：")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Empty")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("X"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" p2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nice: good optimizer"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nice：很好的优化器"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我在64位机器，64位g++上，运行了，输出了上面的")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("如果上述代码中p1和p2相等，那么"),t("strong",[s._v("说明编译器作了优化")]),s._v("。")]),s._v(" "),t("li",[s._v("这样的优化是安全的，而且非常有用。它允许程序员用空类来表示非常简单的概念，而不需为此付出额外的（空间）代价。一些现代编译器提供了这种“虚基类优化”功能。")])]),s._v(" "),t("h3",{attrs:{id:"_6-我能从构造函数调用虚函数吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-我能从构造函数调用虚函数吗"}},[s._v("#")]),s._v(" 6.我能从构造函数调用虚函数吗？")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("可以。不过你得悠着点")]),s._v("。")])]),s._v(" "),t("li",[t("p",[s._v("当你这样做时，也许你自己都不知道自己在干什么！在构造函数中，虚拟机制尚未发生作用，因为此时overriding尚未发生。万丈高楼平地起，总得先打地基吧？对象的建立也是这样——先把基类构造完毕，然后在此基础上构造派生类。")])]),s._v(" "),t("li",[t("p",[s._v("参考自"),t("a",{attrs:{href:"https://www.stroustrup.com/bstechfaq.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("文章"),t("OutboundLink")],1)])])]),s._v(" "),t("h3",{attrs:{id:"_7-内存泄露及解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-内存泄露及解决办法"}},[s._v("#")]),s._v(" 7.内存泄露及解决办法：")]),s._v(" "),t("p",[s._v("什么是内存泄露？   简单地说就是申请了一块内存空间，"),t("strong",[s._v("使用完毕后没有释放掉")])]),s._v(" "),t("p",[s._v("1、new和malloc申请资源使用 后，没有用delete和free释放；")]),s._v(" "),t("p",[s._v("2、子类继承父类时，父类析构函数不是虚函数。")]),s._v(" "),t("h3",{attrs:{id:"_8-怎么检测内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-怎么检测内存泄漏"}},[s._v("#")]),s._v(" 8.怎么检测内存泄漏？")]),s._v(" "),t("ul",[t("li",[s._v("第一：良好的编码习惯，使用了内存分配的函数，一旦使用完毕,要记得使用其相应的函数释放掉")]),s._v(" "),t("li",[s._v("第二：将分配的内存的指针以链表的形式自行管理，使用完毕之后从链表中删除，程序结束时可检查改这个链表")]),s._v(" "),t("li",[s._v("第三：使用智能指针")]),s._v(" "),t("li",[s._v("第四：一些常见的工具插件，如ccmalloc、Dmalloc、Leaky、"),t("font",{staticStyle:{background:"yellow"}},[s._v("Valgrind")]),s._v("等等")],1)]),s._v(" "),t("h3",{attrs:{id:"_9-初始化顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-初始化顺序"}},[s._v("#")]),s._v(" 9.初始化顺序")]),s._v(" "),t("p",[s._v("​\t在C++中，初始化顺序是按照"),t("strong",[s._v("定义")]),s._v("的顺序来进行的。比如，如果一个类有三个成员变量，那么它们将"),t("strong",[s._v("按照定义的顺序")]),s._v("进行初始化。构造函数只是用来"),t("strong",[s._v("指定初始化值")]),s._v("的，而"),t("strong",[s._v("不是")]),s._v("指定初始化"),t("strong",[s._v("顺序")]),s._v("的。")]),s._v(" "),t("h2",{attrs:{id:"✅平常做题错题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅平常做题错题"}},[s._v("#")]),s._v(" ✅平常做题错题")]),s._v(" "),t("h3",{attrs:{id:"_1-测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-测试"}},[s._v("#")]),s._v(" 1.测试")]),s._v(" "),t("ul",[t("li",[s._v("题目参考"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44295104&qid=112041",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%c%c%c\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//以下程序的输出结果是（）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//321")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("牛油的回答")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("2. 运算对象求值顺序不明：\nC++中只有'&&', '||', ',', '?:' 这四个运算符明确了其所属运算对象的求值顺序。\n\n函数调用也是一种运算符\n而实参压栈顺序完全依赖于编译器实现，三个*p++求值顺序不明。\n那么结合第一个问题，假如从左向右压栈结果就是123\n如果换个编译器可能顺序又不同了\n所有选项可能都能有幸成为正确答案\n\n所以，这种表达式是错误的，会产生未定义的行为。\n这种题目真的不该再出。\n\n\n大家看的所谓语言书籍的作者当年基本都是i386的使用者\n这就是大家看到“压栈顺序从右至左”这一说法的原因\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("ul",[t("li",[s._v("我的测试环境64位机器的"),t("code",[s._v("g++")]),s._v("下")]),s._v(" "),t("li",[s._v("实参压栈顺序是『从右到左』")])]),s._v(" "),t("h3",{attrs:{id:"_2-在-c-语言中-对函数参数默认值描述正确的是"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-在-c-语言中-对函数参数默认值描述正确的是"}},[s._v("#")]),s._v(" 2.在 c++ 语言中，对函数参数默认值描述正确的是？")]),s._v(" "),t("ul",[t("li",[s._v("题目"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44202421&qid=143523#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("来源"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("A 函数参数的默认值只能设定一个\nB 一个函数的参数若有多个，则参数默认值的设定可以不连续\nC 函数参数必须设定默认值\nD 在设定了参数的默认值后，该参数后面定义的所有参数都必须设定默认值\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("我选择的是D")]),s._v(" "),t("li",[s._v("2020-10.2\n"),t("ul",[t("li",[s._v("我当时的解释：C++语言中，允许在函数的说明或定义时给一个或多个参数指定默认值。"),t("strong",[s._v("参数默认值必须从右向左定义")]),s._v("（入栈的顺序，汇编），即在一个指定了默认值的参数的右边，不能出现没有指定默认值的参数。")])])]),s._v(" "),t("li",[s._v("2021.7月\n"),t("ul",[t("li",[s._v("我对上面的解释：关于汇编的那个事情，我突然记得那时候我学的是X86的汇编")])])])]),s._v(" "),t("h2",{attrs:{id:"✅c-输入输出io"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅c-输入输出io"}},[s._v("#")]),s._v(" ✅C++输入输出IO")]),s._v(" "),t("h2",{attrs:{id:"_1-iostream的设计初衷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-iostream的设计初衷"}},[s._v("#")]),s._v(" 1."),t("code",[s._v("iostream")]),s._v("的设计初衷")]),s._v(" "),t("ul",[t("li",[s._v("对初学者友好")]),s._v(" "),t("li",[s._v("提供一个高效的可扩展的类型安全的IO机制")])]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("iostream")]),s._v("的现状")])]),s._v(" "),t("ul",[t("li",[s._v("在真实的项目中很少用到"),t("code",[s._v("iostream")]),s._v(" "),t("ul",[t("li",[s._v("参考自“陈硕”")])])])]),s._v(" "),t("h2",{attrs:{id:"_2-iostream的特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-iostream的特点"}},[s._v("#")]),s._v(" 2."),t("code",[s._v("iostream")]),s._v("的特点")]),s._v(" "),t("ul",[t("li",[s._v("不同于标准库其他class的“值语义(value semantics)”，"),t("code",[s._v("iostream")]),s._v("是“对象语义(object semantics)”\n"),t("ul",[t("li",[s._v("即iostream是"),t("code",[s._v("non-copyable")])]),s._v(" "),t("li",[s._v("iostream禁止拷贝，利用对象的生命期来明确管理资源（如文件）")])])]),s._v(" "),t("li",[t("code",[s._v("iostream")]),s._v("在"),t("strong",[s._v("线程安全")]),s._v("方面没有保证！")])]),s._v(" "),t("h2",{attrs:{id:"✅c-高阶论题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅c-高阶论题"}},[s._v("#")]),s._v(" ✅C++高阶论题")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("术语\n    内存泄漏\nc++编程风格惯用法\n    1.类初始化列表\n    2.枚举类替换命名空间\n    3.RAII(资源获取即初始化)\n    4.copy and swap\n    5.pImpl(指针指向具体实现)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"_1-c-惯用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-c-惯用法"}},[s._v("#")]),s._v(" 1.C++惯用法")]),s._v(" "),t("h3",{attrs:{id:"_1-1-raii-资源获取即初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-raii-资源获取即初始化"}},[s._v("#")]),s._v(" 1.1.RAII(资源获取即初始化)")]),s._v(" "),t("blockquote",[t("p",[s._v("RAII（资源获取即初始化）『"),t("strong",[s._v("R")]),s._v("esource "),t("strong",[s._v("A")]),s._v("cquisition "),t("strong",[s._v("I")]),s._v("s "),t("strong",[s._v("I")]),s._v("nitialization』")])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/RAII",target:"_blank",rel:"noopener noreferrer"}},[s._v("维基百科"),t("OutboundLink")],1),s._v("：RAII")]),s._v(" "),t("li",[s._v("为解决资源管理时的"),t("font",{staticStyle:{background:"yellow"}},[s._v("异常安全性")])],1)]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("它是在一些面向对象语言中的一种惯用法。\n\nRAII源于C++\n在Java，C#，D，Ada，Vala和Rust中也有应用\n1984-1989年期间，比雅尼·斯特劳斯特鲁普和安德鲁·柯尼希在设计C++异常时，为解决资源管理时的异常安全性而使用了该用法[1]，后来比雅尼·斯特劳斯特鲁普将其称为RAII[2]。\n\nRAII要求，资源的有效期与持有资源的对象的生命期严格绑定，即由对象的构造函数完成资源的分配（获取），同时由析构函数完成资源的释放。在这种要求下，只要对象能正确地析构，就不会出现资源泄露问题。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_1-2-pimpl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-pimpl"}},[s._v("#")]),s._v(" 1.2.pImpl")]),s._v(" "),t("blockquote",[t("p",[s._v("pImpl（指向实现的指针）『"),t("strong",[s._v("P")]),s._v("ointer to "),t("strong",[s._v("Impl")]),s._v("ementation』，Implementation，实现，实施")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("是一种 C++ 编程技巧\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("它将类的"),t("strong",[s._v("实现细节")]),s._v("从对象表示中移除，放到一个『"),t("strong",[s._v("分离的类")]),s._v("』中，并以一个『"),t("strong",[s._v("不透明的指针")]),s._v("』进行访问。")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("优点：\n    1、减少依赖项（降低耦合性）：其一减少原类不必要的头文件的依赖，加速编译；其二对Impl类进行修改，无需重新编译原类。\n    2、接口和实现的分离（隐藏了类的实现）：私有成员完全可以隐藏在共有接口之外，给用户一个间接明了的使用接口，尤其适合闭源API设计。\n    3、可使用惰性分配技术：类的某部分实现可以写成按需分配或者实际使用时再分配，从而节省资源。\n\n缺点：\n    1、每个类需要占用小小额外的指针内存。\n\n    2、每个类每次访问具体实现时都要多一个间接指针操作的开销，并且在使用、阅读和调试上都可能有所不便\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[s._v("参考自："),t("a",{attrs:{href:"https://www.cnblogs.com/KillerAery/p/9539705.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("博客园"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"_1-3-copy-and-swap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-copy-and-swap"}},[s._v("#")]),s._v(" 1.3.copy and swap")]),s._v(" "),t("h2",{attrs:{id:"_2-value-semantics和object-semantics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-value-semantics和object-semantics"}},[s._v("#")]),s._v(" 2."),t("code",[s._v("value semantics")]),s._v("和"),t("code",[s._v("object semantics")])]),s._v(" "),t("ul",[t("li",[s._v("参考自：《Linux多线程服务器编程》，使用muduoC++网络库")])]),s._v(" "),t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("仔细理解：书上P482-484")])],1),s._v(" "),t("h3",{attrs:{id:"_2-1-值语义-value-semantics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-值语义-value-semantics"}},[s._v("#")]),s._v(" 2.1.值语义（value semantics）")]),s._v(" "),t("ul",[t("li",[s._v("所谓值语义是指目标对象由源对象拷贝生成，且生成后与源对象完全无关，彼此独立存在，改变互不影响。就像 int 类型变量相互拷贝一样。")]),s._v(" "),t("li",[s._v("value semantics：指的是对象的拷贝与原对象无关")])]),s._v(" "),t("blockquote",[t("p",[s._v("举例：")])]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("C++")]),s._v("的内置类型（"),t("code",[s._v("bool/int/double/char")]),s._v("）都是值语义，标准库里的 "),t("code",[s._v("complex<>")]),s._v("、"),t("code",[s._v("pair<>")]),s._v("、"),t("code",[s._v("vector<>")]),s._v("、"),t("code",[s._v("map<>")]),s._v("、"),t("code",[s._v("string")]),s._v(" 等等类型也都是值语义。")],1),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言中的"),t("code",[s._v("primitive types（基础类型）比如：int 、short、long")]),s._v("也是值语义")],1)]),s._v(" "),t("p",[t("strong",[s._v("拷贝之后就与源对象完全脱离关系")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-对象语义-object-semantics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-对象语义-object-semantics"}},[s._v("#")]),s._v(" 2.2.对象语义（object semantics）")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("别名：")]),s._v("对象语义也叫"),t("strong",[s._v("指针语义")]),s._v("，**引用语义（reference semantics）**等")],1),s._v(" "),t("li",[s._v("通常是指一个目标对象由源对象拷贝生成，但生成后与源对象之间依然共享底层资源，对任何一个的改变都将随之改变另一个。就像包含有指针成员变量的自定义类在默认拷贝构造函数下对其对象之间进行的拷贝。拷贝后目标对象和源对象的指针成员变量仍指向同一块内存数据。如果当其中一个被析构掉后，另一个对象的指针成员就会沦为名副其实的悬垂指针！")])]),s._v(" "),t("p",[s._v("核心理解：”对象语义“这个词中“对象”指的是"),t("font",{staticStyle:{background:"yellow"}},[s._v("『"),t("strong",[s._v("面向对象")]),s._v("』")]),s._v("意义下的对象，并不是我们"),t("font",{staticStyle:{background:"yellow"}},[s._v("『"),t("strong",[s._v("语法意义上class生成的")]),s._v("』")]),s._v("对象，我们的结论是：『面向对象意义下的对象，对象拷贝是禁止的』")],1),s._v(" "),t("ul",[t("li",[s._v("例子：")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("薪资管理系统中，一个对象叫：员工张三\n我们拷贝“员工张三”这个对象是没有意义的！！\n因为员工张三这个对象代表的是一个活生生的人，我们拷贝它是被禁止的。\n\n服务器开发中，也有类似的情况\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("结论："),t("font",{staticStyle:{background:"yellow"}},[s._v('『面向对象』意义下的"对象"是'),t("code",[s._v("non-copyable")]),s._v("（不能够拷贝的）")])],1)]),s._v(" "),t("blockquote",[t("p",[s._v("举例：")])]),s._v(" "),t("ul",[t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言中class对象"),t("font",{staticStyle:{background:"yellow"}},[s._v("都是")]),s._v("“对象语义”")],1),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言没有办法实现『真正的』“值语义”class，只好用"),t("code",[s._v("immutable object")]),s._v("来模拟")],1),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Java")]),s._v("语言中有"),t("code",[s._v("value object")]),s._v("一说，按照定义，它实际上是"),t("code",[s._v("immutable object（不可改变的对象）")]),s._v("，比如"),t("code",[s._v("Interger，String，BigInterger")])],1)])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("C++")]),s._v("语言中class本质上是"),t("font",{staticStyle:{background:"yellow"}},[s._v("值语义")]),s._v("，值语义对象，比如"),t("code",[s._v("pair<>，vector<>，string<>")]),s._v("等，都是可修改的（mutable）")],1)])]),s._v(" "),t("h3",{attrs:{id:"_2-3-优点缺点对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-优点缺点对比"}},[s._v("#")]),s._v(" 2.3.优点缺点对比")]),s._v(" "),t("p",[s._v("值语义（value semantics）")]),s._v(" "),t("ul",[t("li",[s._v("优点：生命期管理很简单，比如 C++中"),t("code",[s._v("int")]),s._v("类型一样—你不需要操心 int 对象 的生命期。\n"),t("ul",[t("li",[s._v("因为：值语义的对象要么是"),t("code",[s._v("stack object")]),s._v("，要么是"),t("code",[s._v("作为其他object的成员")])])])])]),s._v(" "),t("p",[s._v("对象语义（object semantics）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("缺点：对象语义的object由于不能拷贝，因此我们只能在"),t("font",{staticStyle:{background:"yellow"}},[s._v("C++的实现")]),s._v("是通过’指针“或”引用“来使用它")],1)]),s._v(" "),t("li",[t("p",[t("code",[s._v("immutable")]),s._v("不可修改的")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("mutable")]),s._v("可修改的")])])]),s._v(" "),t("h2",{attrs:{id:"_3-c-惯用法和value-semantics组合拳"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-c-惯用法和value-semantics组合拳"}},[s._v("#")]),s._v(" 3.C++惯用法和"),t("code",[s._v("value semantics")]),s._v("组合拳")]),s._v(" "),t("ul",[t("li",[s._v("值语义，对象语义")]),s._v(" "),t("li",[s._v("RAII")]),s._v(" "),t("li",[s._v("智能指针")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-c-的值语义是『双刃剑』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-c-的值语义是『双刃剑』"}},[s._v("#")]),s._v(" 3.1.C++的值语义是『双刃剑』")]),s._v(" "),t("ul",[t("li",[s._v("由于C++中class本质上是"),t("font",{staticStyle:{background:"yellow"}},[s._v("值语义")]),s._v("，这\n"),t("ul",[t("li",[s._v("才会出现"),t("code",[s._v("object slicing")]),s._v("这种语言独有的问题！！")]),s._v(" "),t("li",[s._v("才会需要程序员注意："),t("code",[s._v("pass-by-value")]),s._v("和"),t("code",[s._v("pass-by-const-reference")]),s._v("的取舍")])])],1),s._v(" "),t("li",[s._v("在其他『面向对象语言』，比如Java中，这都不需要费脑筋。。")])]),s._v(" "),t("p",[s._v("书上P488")]),s._v(" "),t("ul",[t("li",[s._v("值语义是"),t("strong",[s._v("C++语言3大约束之一")]),s._v("，C++的设计初衷是让用户定义的类型（class）能像内置类型（int）一样工作，具有"),t("strong",[s._v("同等")]),s._v("的地位。")])]),s._v(" "),t("h3",{attrs:{id:"_3-3-问题-智能指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-问题-智能指针"}},[s._v("#")]),s._v(" 3.3.问题：智能指针？")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("智能指针既不是『值语义』也不是『对象语义』")])],1),s._v(" "),t("li",[s._v("由于『值语义和对象语义的原因』\n"),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("如果不使用智能指针，用C++做面向对象编程将会困难重重")])],1)])])]),s._v(" "),t("h2",{attrs:{id:"_4-c-语言层面高度探讨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-c-语言层面高度探讨"}},[s._v("#")]),s._v(" 4.C++语言层面高度探讨")]),s._v(" "),t("p",[s._v("C++复杂的根源在于三大约束：")]),s._v(" "),t("ul",[t("li",[s._v("与C的完全兼容")]),s._v(" "),t("li",[s._v("静态类型检查")]),s._v(" "),t("li",[s._v("最高性能")])]),s._v(" "),t("p",[t("strong",[s._v("在三大约束下，C++未能完善对于面向对象思想的支持，未能建立强大的动态能力，从而使得C++在OO这个单项上存在本质缺陷")]),s._v("。")]),s._v(" "),t("ul",[t("li",[s._v("事实上，C++的过程、OB模型相当成熟和稳定")]),s._v(" "),t("li",[s._v("而泛型模型，就单项来说，除了语法丑陋之外也没有大的问题。")]),s._v(" "),t("li",[s._v("缺陷集中体现在OO模型的实现，并因此干扰了其他几个范式的完整程度。\n"),t("ul",[t("li",[s._v("然而，OO的缺陷绝非设计者的偏执，其原因在于三大约束。如果坚持三大约束，则即使再重新设计一次，结果也与今日相差不远。Stroustrup在多种场合表示，对C++的设计没有大的后悔之处，意思就是这个。")]),s._v(" "),t("li",[s._v("侯捷先生早在2001年初即对我说，C++在OO上不及Java，当时体会不深，认为没有大一统的单根类库会使设计更加灵活，后来又认为凭借GP可以抵消OO的不足甚至超越之，现在看来即使不是不可能，这条道路也必然是艰辛异常，成败难以预料。")])])])]),s._v(" "),t("blockquote",[t("p",[s._v("参考自："),t("a",{attrs:{href:"https://blog.csdn.net/myan/article/details/148900",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSDN的myan（孟岩）"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"_5-c-的编程范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-c-的编程范式"}},[s._v("#")]),s._v(" 5.C++的编程范式")]),s._v(" "),t("p",[s._v("5.1.过程式编程")]),s._v(" "),t("p",[s._v("5.2.基于对象编程")]),s._v(" "),t("p",[s._v("5.3.面向对象编程")]),s._v(" "),t("p",[s._v("5.4.泛型编程")]),s._v(" "),t("p",[s._v("5.5.函数式编程")]),s._v(" "),t("h2",{attrs:{id:"_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[s._v("#")]),s._v(" 6.c++11、c++14、C++17以及C++20有什么区别呢?")]),s._v(" "),t("ul",[t("li",[s._v("字节跳动，一面")]),s._v(" "),t("li",[s._v("参考：https://github.com/AnthonyCalandra/modern-cpp-features")])]),s._v(" "),t("blockquote",[t("p",[s._v("C++11")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++11 includes the following new language features:\n\nmove semantics\nvariadic templates\nrvalue references\nforwarding references\ninitializer lists\nstatic assertions\nauto\nlambda expressions\ndecltype\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" aliases\nnullptr\nstrongly-typed enums\nattributes\nconstexpr\ndelegating constructors\nuser-defined literals\nexplicit virtual overrides\nfinal specifier\ndefault functions\ndeleted functions\nrange-based "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" loops\nspecial member functions "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" move semantics\nconverting constructors\nexplicit conversion functions\ninline-namespaces\nnon-static data member initializers\nright angle brackets\nref-qualified member functions\ntrailing "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" types\nnoexcept specifier\nchar32_t and char16_t\nraw string literals\n\n\nC++11 includes the following new library features:\n\nstd::move\nstd::forward\nstd::thread\nstd::to_string\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" traits\nsmart pointers\nstd::chrono\ntuples\nstd::tie\nstd::array\nunordered containers\nstd::make_shared\nstd::ref\nmemory model\nstd::async\nstd::begin/end\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br")])]),t("blockquote",[t("p",[s._v("C++14")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++14 includes the following new language features:\n\nbinary literals\ngeneric lambda expressions\nlambda capture initializers\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" deduction\ndecltype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("auto"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrelaxing constraints on constexpr functions\nvariable templates\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("deprecated"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" attribute\nC++14 includes the following new library features:\n\nuser-defined literals "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" standard library types\ncompile-time integer sequences\nstd::make_unique\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("blockquote",[t("p",[s._v("C++17")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++17 includes the following new language features:\n\ntemplate argument deduction "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" class templates\ndeclaring non-type template parameters with auto\nfolding expressions\nnew rules "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" auto deduction from braced-init-list\nconstexpr lambda\nlambda capture this by value\ninline variables\nnested namespaces\nstructured bindings\nselection statements with initializer\nconstexpr "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v("\nutf-8 character literals\ndirect-list-initialization of enums\nfallthrough, nodiscard, maybe_unused attributes\nC++17 includes the following new library features:\n\nstd::variant\nstd::optional\nstd::any\nstd::string_view\nstd::invoke\nstd::apply\nstd::filesystem\nstd::byte\nsplicing "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" maps and sets\nparallel algorithms\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("blockquote",[t("p",[s._v("C++20")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("C++20 includes the following new language features:\n\ncoroutines\nconcepts\ndesignated initializers\ntemplate syntax "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" lambdas\nrange-based "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" loop with initializer\nlikely and unlikely attributes\ndeprecate implicit capture of this\nclass types "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" non-type template parameters\nconstexpr virtual functions\nexplicit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nimmediate functions\nusing enum\nlambda capture of parameter pack\nchar8_t\nC++20 includes the following new library features:\n\nconcepts library\nsynchronized buffered outputstream\nstd::span\nbit operations\nmath constants\nstd::is_constant_evaluated\nstd::make_shared supports arrays\nstarts_with and ends_with on strings\ncheck "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" associative container has element\nstd::bit_cast\nstd::midpoint\nstd::to_array\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("h2",{attrs:{id:"_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[s._v("#")]),s._v(" 7.C和C++在编译时,函数名会怎么变化,那如果是匿名空间呢?")]),s._v(" "),t("p",[s._v("​\t在匿名命名空间中声明的名称也将被编译器转换，与编译器为这个匿名命名空间生成的唯一内部名称(即这里的"),t("code",[s._v("__UNIQUE_NAME_)")]),s._v("绑定在一起")]),s._v(" "),t("h2",{attrs:{id:"_8-萃取-traits-技巧「模版的应用」"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-萃取-traits-技巧「模版的应用」"}},[s._v("#")]),s._v(" 8.萃取 traits 技巧「模版的应用」")]),s._v(" "),t("p",[s._v("​\t 面试时候，大概回答：traits，一种模板偏特化的应用。《STL源码剖析》一书中提到"),t("strong",[s._v("Traits编程技法")]),s._v("，它的作用是获取型别(associated type)的特性。")]),s._v(" "),t("ul",[t("li",[s._v("参考资料：https://mp.weixin.qq.com/s/rPh9PfTjPCROj1EmWHA6nw")])]),s._v(" "),t("p",[s._v("在 STL 编程中，容器和算法是独立设计的，即数据结构和算法是独立设计的，连接容器和算法的桥梁就是迭代器了，迭代器使其独立设计成为可能")]),s._v(" "),t("p",[s._v("​\t这样讲比较抽象，到底什么是相应型别")]),s._v(" "),t("p",[s._v("​\t或者到底什么时候需要用到Traits编程技法呢？")]),s._v(" "),t("p",[s._v("​\ttraits 是模板元编程中的一个非常重要的概念，它可以"),t("strong",[s._v("萃取")]),s._v("类型中的许多重要信息，利于 我们在"),t("strong",[s._v("编译期")]),s._v("提早做出决断。")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("traits，又被叫做特性萃取技术")]),s._v("，说得简单点就是提取“被传进的对象”对应的返回类型，让同一个接口实现对应的功能。因为STL的算法和容器是分离的，两者通过迭代器链接。算法的实现并不知道自己被传进来什么。萃取器相当于在接口和实现之间加一层封装，来隐藏一些细节并协助调用合适的方法，这需要一些技巧（例如，偏特化）。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("template")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typename")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TraitsHelper")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" T ret_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回值")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" T par_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对应的值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("template")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TraitsHelper")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//模版偏特化")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ret_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" par_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("template")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TraitsHelper")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" ret_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" par_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("template")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typename")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n     TraitsHelper"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("ret_type  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//借助传入的T，走一遍偏特化的路径，完美就能获得一个返回值类型")]),s._v("\n       \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Compute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" TraitsHelper"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("T"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("par_type d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这样完美的Compute函数，就能根据不能类型的类型，进行不同的处理！")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n     T mData"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("ul",[t("li",[s._v("【C++模版之旅】"),t("a",{attrs:{href:"https://blog.csdn.net/my_business/article/details/7891687",target:"_blank",rel:"noopener noreferrer"}},[s._v("神奇的Traits"),t("OutboundLink")],1),s._v("「解释得最简单」")]),s._v(" "),t("li",[s._v("参考资料：https://yosef-gao.github.io/2016/10/05/cpp-traits/「举例」")]),s._v(" "),t("li",[s._v("第 3 章 类型特征萃取，C++11/14高级编程，Boost程序库探秘，http://www.tup.tsinghua.edu.cn/upload/books/yz/069426-01.pdf")])]),s._v(" "),t("h2",{attrs:{id:"_9-菱形继承「虚基础」"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-菱形继承「虚基础」"}},[s._v("#")]),s._v(" 9.菱形继承「虚基础」")]),s._v(" "),t("ul",[t("li",[s._v("CSDN"),t("a",{attrs:{href:"https://blog.csdn.net/jackystudio/article/details/17877219",target:"_blank",rel:"noopener noreferrer"}},[s._v("解释得不错"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("​\t菱形继承是多重继承中跑不掉的，Java拿掉了多重继承，辅之以接口。C++中虽然没有明确说明接口这种东西，但是只有纯虚函数的类可以看作Java中的接口。")]),s._v(" "),t("p",[s._v("​\t如下是菱形继承的代码。")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printA")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("D")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    D d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h2",{attrs:{id:"🔋-参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔋-参考资料"}},[s._v("#")]),s._v(" 🔋 参考资料")]),s._v(" "),t("ul",[t("li",[s._v("孟岩"),t("a",{attrs:{href:"https://blog.csdn.net/myan",target:"_blank",rel:"noopener noreferrer"}},[s._v("在CSDN上的博客"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("《Linux多线程服务端编程》，陈硕")]),s._v(" "),t("li",[s._v("光城，"),t("a",{attrs:{href:"https://light-city.club/sc/",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++那些事"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("重要网站：『"),t("a",{attrs:{href:"https://www.stroustrup.com/bs_faq2.html#virtual-ctor",target:"_blank",rel:"noopener noreferrer"}},[s._v("Bjarne Stroustrup's C++ Style and Technique FAQ"),t("OutboundLink")],1),s._v("』\n"),t("ul",[t("li",[t("a",{attrs:{href:"https://www.stroustrup.com/bs_faq2.html#virtual-ctor",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.stroustrup.com/bs_faq2.html#virtual-ctor"),t("OutboundLink")],1)])])])]),s._v(" "),t("h2",{attrs:{id:"c-核心详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-核心详解"}},[s._v("#")]),s._v(" C++核心详解")]),s._v(" "),t("p",[s._v("学C++的利器：")]),s._v(" "),t("ul",[t("li",[s._v("this指针不是object的一部分")]),s._v(" "),t("li",[s._v("虚函数表属于class\n"),t("ul",[t("li",[s._v("每个object有属于各自的"),t("strong",[s._v("虚函数表指针")])])])]),s._v(" "),t("li",[s._v("静态绑定和动态绑定")]),s._v(" "),t("li",[s._v("内存管理")]),s._v(" "),t("li",[s._v("《STL源码剖析》")])]),s._v(" "),t("h2",{attrs:{id:"✅『oob』基于对象的程序设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅『oob』基于对象的程序设计"}},[s._v("#")]),s._v(" ✅『OOB』基于对象的程序设计")]),s._v(" "),t("h2",{attrs:{id:"_1-对比class-struct-union和enum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-对比class-struct-union和enum"}},[s._v("#")]),s._v(" 1.对比"),t("code",[s._v("class/struct/union")]),s._v("和"),t("code",[s._v("enum")])]),s._v(" "),t("ul",[t("li",[s._v("class")]),s._v(" "),t("li",[s._v("struct")]),s._v(" "),t("li",[s._v("union")]),s._v(" "),t("li",[s._v("enum『枚举类型"),t("strong",[s._v("是1种基本类型")]),s._v("，不是1种构造类型，因为它不能再分解为任何其他基本类型，比如，"),t("code",[s._v("class")]),s._v("，"),t("code",[s._v("struct")]),s._v("，"),t("code",[s._v("union")]),s._v("』")])]),s._v(" "),t("h3",{attrs:{id:"_1-1-class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-class"}},[s._v("#")]),s._v(" 1.1."),t("code",[s._v("class")])]),s._v(" "),t("p",[s._v("1、继承：默认是『private继承』\n2、内部可以放成员变量，成员函数，默认成员变量访问控制是：『private』\n3、成员函数分类：\n有』构造函数\n有』析构函数\n有』虚函数")]),s._v(" "),t("h3",{attrs:{id:"_1-2-struct『c-中』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-struct『c-中』"}},[s._v("#")]),s._v(" 1.2."),t("code",[s._v("struct")]),s._v("『C++中』")]),s._v(" "),t("blockquote",[t("p",[s._v("本质："),t("strong",[s._v("是一种class")])])]),s._v(" "),t("p",[s._v("1、继承：默认是『public继承』\n2、内部可以放成员变量，成员函数，默认成员变量访问控制是：『public』\n3、成员函数分类：\n有』构造函数\n有』析构函数\n有』虚函数")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a="')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die AAA"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPoly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*AAA******"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//struct B : private A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//下面的写法，等价于，struct B : public A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("888")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b="')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die BBB"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPoly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*BBBB******"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//因为加上了system("pause");所以需要下面这样挂掉B，才能知道B的析构函数被调用')]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tA one"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t\tB two"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\ttwo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n\t\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" pointer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tpointer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPoly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br")])]),t("h3",{attrs:{id:"_1-3-union『c-中』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-union『c-中』"}},[s._v("#")]),s._v(" 1.3."),t("code",[s._v("union")]),s._v("『C++中』")]),s._v(" "),t("blockquote",[t("p",[s._v("本质：它是一种"),t("strong",[s._v("特殊的类")])])]),s._v(" "),t("ul",[t("li",[s._v("参考《后台开发》")])]),s._v(" "),t("p",[s._v("1、继承：『不可以继承』继承自别人/能给别人继承都不可以\n2、内部可以放成员变量，成员函数，默认成员变量访问控制是：『public』\n3、成员函数分类：\n有』构造函数\n有』析构函数\n"),t("strong",[s._v("不可以有』虚函数")])]),s._v(" "),t("h3",{attrs:{id:"_1-4-enum『只有它不是特殊的类』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-enum『只有它不是特殊的类』"}},[s._v("#")]),s._v(" 1.4."),t("code",[s._v("enum")]),s._v("『只有它不是特殊的类』")]),s._v(" "),t("p",[s._v("1、枚举类型"),t("strong",[s._v("是1种基本类型")]),s._v("，不是1种构造类型")]),s._v(" "),t("p",[s._v("2、因为它不能再分解为任何其他基本类型『比如，"),t("code",[s._v("class")]),s._v("，"),t("code",[s._v("struct")]),s._v("，"),t("code",[s._v("union")]),s._v("』")]),s._v(" "),t("h2",{attrs:{id:"_2-类的『成员变量』和『非成员变量』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-类的『成员变量』和『非成员变量』⭐️"}},[s._v("#")]),s._v(" 2.类的『成员变量』和『非成员变量』⭐️")]),s._v(" "),t("img",{attrs:{src:a(273)}}),s._v(" "),t("h3",{attrs:{id:"_2-1-成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-成员变量"}},[s._v("#")]),s._v(" 2.1.成员变量")]),s._v(" "),t("p",[t("strong",[s._v("书中记载")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("nonstatic member 非静态成员\n"),t("ul",[t("li",[s._v("普通数据成员")]),s._v(" "),t("li",[s._v("const数据成员")])])]),s._v(" "),t("li",[s._v("static member 静态成员")])]),s._v(" "),t("p",[t("strong",[s._v("static成员变量")])]),s._v(" "),t("ul",[t("li",[s._v("c++的一个类中『"),t("strong",[s._v("声明")]),s._v("』一个static成员变量，static是加了访问控制的全局变量，不被继承")]),s._v(" "),t("li",[s._v("类和子类对象，static变量占有一份内存")])]),s._v(" "),t("blockquote",[t("p",[s._v("重点理解："),t("strong",[s._v("静态成员变量的初始化一定要在『类外』")])])]),s._v(" "),t("p",[s._v("原因： 因为静态成员变量本身在main函数未开始时已经存在。不要让成员变量的初始化依赖于对象。不用对象，难到就不能用这一变量了吗？如果将初始化放在类内。那么"),t("strong",[s._v("当不声明对象时")]),s._v("，无法使用这一静态变量。编译器报错为‘undeclared identifier’")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("类中的声明和定义辨析：（重点、难点）\n笔者的看法是：\n1、逻辑上说明是一起，只能表示可以『声明』在一起。（声明的门槛很低）\n2、具体内存在哪分配，这个决定『能不能在类内』进行『定义』\n\n比如：\n1、友元函数在『类内』声明，不能在『类内』定义，能在『类外』定义\n2、static成员变量在『类内』声明，不能在『类内』定义，能在『类外』定义\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("blockquote",[t("p",[s._v("参考自："),t("a",{attrs:{href:"https://www.huaweicloud.com/articles/4637f3d11eb3fd9a38e017041e23e50a.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("华为云"),t("OutboundLink")],1)])]),s._v(" "),t("p",[t("strong",[s._v("static和非static特点")])]),s._v(" "),t("ul",[t("li",[s._v("静态成员存在于"),t("strong",[s._v("内存")]),s._v("，非静态成员需要实例化才会分配内存（注意，也就是在虚拟内存空间中，表示的是.bss和.data段中）")]),s._v(" "),t("li",[s._v("非静态成员的生存期决定于该类的生存期，而静态成员生存期则与程序生命期相同")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-非成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-非成员变量"}},[s._v("#")]),s._v(" 2.2.非成员变量")]),s._v(" "),t("h2",{attrs:{id:"_3-类的『成员函数』和『非成员函数』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-类的『成员函数』和『非成员函数』⭐️"}},[s._v("#")]),s._v(" 3.类的『成员函数』和『非成员函数』⭐️")]),s._v(" "),t("img",{attrs:{src:a(274)}}),s._v(" "),t("blockquote",[t("p",[s._v("我的"),t("a",{attrs:{href:"http://naotu.baidu.com/file/02d2413a51829d0c29226a23718613ad?token=d83f2eb1c2d887a6",target:"_blank",rel:"noopener noreferrer"}},[s._v("百度脑图"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("说明：成员函数的分类，需要考虑排序组合，"),t("strong",[s._v("是很多，很复杂")]),s._v("的，不然就只能一个一个维度去分类。")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-成员函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-成员函数"}},[s._v("#")]),s._v(" 3.1.成员函数")]),s._v(" "),t("ul",[t("li",[s._v("到底什么是成员函数？")]),s._v(" "),t("li",[s._v("类的成员函数：是定义为"),t("strong",[s._v("类的一部分")]),s._v("的函数，有时也被称为方法。（C++primer第5版，P20）")]),s._v(" "),t("li",[s._v("各类函数中：构造函数、析构函数、拷贝初始化构造函数等是类的成员函数。")]),s._v(" "),t("li",[s._v("成员函数分下面3类（应该说是2类，纯虚函数属于虚函数的子集的话）")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("1、非虚函数（non-virtual 函数）：\n你『不希望』派生类（derived class）重新定义 (override, 复写) 它.\n\n\n\n2、虚函数（virtual 函數）：\n你希望 derived class 重新定义 (override, 复写) 它，且你对它已有『默认』定义。\n3、纯虚函数（pure virtual 函數）：\n你希望 derived class 『一定』要重新定义 (override 复写)\n它，你对它沒有默认定义。\n\nPS：我们把不是纯的虚函数的虚函数叫作（impure virtual函数）\nPS：在语法上，我们只要在任何一个函数前面加上virtual这样一个关键字，它就成为一个虚函数。\n数据可以被继承下来，就是占它用了内存。\n函数的继承如何理解？但是不应该从内存角度理解，函数的继承，继承的是调用权利\n\nPS：其实纯虚函数是可以有定义的！！\n> 出处：《C++Primer》中文版第五版541页第22行。\n我们可以为纯虚函数提供定义，不过函数体『必须定义在类的外部』。若定义在类的内部，会出现错误：pure-specifier on function-definition。\n》 虚函数是可以定义『在类的内部的』，外部也可以！\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("blockquote",[t("p",[s._v("参考自：侯捷")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("override")]),s._v("这个术语，在这个主题不能随便用！！")])]),s._v(" "),t("li",[t("p",[s._v("这个术语，"),t("strong",[s._v("一定是用在『虚函数』被重新定义，才能够叫（override）")])])]),s._v(" "),t("li",[t("p",[s._v("🐾"),t("font",{staticStyle:{background:"yellow"}},[s._v("无法继承的『static成员函数』")])],1)]),s._v(" "),t("li",[t("p",[t("strong",[s._v("纯虚函数")]),s._v("：只提供一个"),t("strong",[s._v("接口")]),s._v("，具体实现方法需要"),t("strong",[s._v("派生类")]),s._v("自己去实现，纯虚函数本身不可以有实现")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("非虚函数")]),s._v("：提供接口，并且强制"),t("strong",[s._v("实现")]),s._v("方法")])])]),s._v(" "),t("blockquote",[t("p",[s._v("根据《"),t("strong",[s._v("深度探索C++对象模型")]),s._v("》一书所说：")])]),s._v(" "),t("p",[s._v("原始的“C with Classes”只支持，"),t("strong",[s._v("（Nonstatic member function）非静态成员函数")])]),s._v(" "),t("p",[t("strong",[s._v("（Virtual function）虚函数")]),s._v("，是在20世纪80年代中期加入进来的。")]),s._v(" "),t("p",[t("strong",[s._v("（Static member function）静态成员函数")]),s._v("是最后被引入的一种函数类型!")]),s._v(" "),t("p",[s._v("书中说道："),t("font",{staticStyle:{background:"pink"}},[s._v("C++支持3种类型的**（member function）成员函数**")]),s._v("『记住下面的』")],1),s._v(" "),t("ul",[t("li",[s._v("1、static member function")]),s._v(" "),t("li",[s._v("2、nonstatic member function\n"),t("ul",[t("li",[s._v("1、普通的成员函数")]),s._v(" "),t("li",[s._v("2、const成员函数")])])]),s._v(" "),t("li",[s._v("3、virtual member function")])]),s._v(" "),t("p",[s._v("成员函数中"),t("strong",[s._v("易错")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("由于成员函数中的const成员函数，const"),t("strong",[s._v("实际")]),s._v("上修饰的是"),t("strong",[s._v("this指针")]),s._v("。")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("所以"),t("strong",[s._v("在成员函数")]),s._v("中，"),t("strong",[s._v("static")]),s._v("和"),t("strong",[s._v("const不能同时")]),s._v("修饰同一个成员函数")]),s._v("，因为==static成员函数"),t("strong",[s._v("没有this指针")]),s._v("==。")],1)]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这行没错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxn"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//修饰变量，这行却没错")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n    \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//下面会出错，[Error] static member function 'static void A::demo()' cannot have cv-qualifier")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" \n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h3",{attrs:{id:"_3-2-非成员函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-非成员函数"}},[s._v("#")]),s._v(" 3.2.非成员函数")]),s._v(" "),t("h4",{attrs:{id:"_3-2-1-友元函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-友元函数"}},[s._v("#")]),s._v(" 3.2.1.友元函数")]),s._v(" "),t("ul",[t("li",[s._v("注意："),t("font",{staticStyle:{background:"yellow"}},[s._v("友元函数不是类的成员函数！")]),s._v("（"),t("strong",[s._v("欢聚时代")]),s._v("）")],1)]),s._v(" "),t("p",[s._v("1、友元函数的『"),t("strong",[s._v("声明")]),s._v("』可以放在类"),t("strong",[s._v("声明")]),s._v("的任何地方，不受访问限定关键字private、protected、public的限制")]),s._v(" "),t("p",[s._v("2、尽管友元函数的"),t("strong",[s._v("原型")]),s._v("有在"),t("strong",[s._v("类的定义")]),s._v("中出现过，但是"),t("strong",[s._v("友元函数并不是成员函数")]),s._v("。")]),s._v(" "),t("p",[s._v("3、友元是一种"),t("strong",[s._v("定义在类外部")]),s._v("的普通函数（友元函数既可以在类的内部，也可以在类的外部定义《"),t("strong",[s._v("C++primer")]),s._v("》中说了），但它需要在类体内进行"),t("strong",[s._v("说明『声明』")]),s._v("，为了与该类的成员函数加以区别，在说明时前面加以关键字friend")]),s._v(" "),t("blockquote",[t("p",[s._v("参考自：菜鸟教程"),t("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-friend-functions.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++ 友元函数"),t("OutboundLink")],1)])]),s._v(" "),t("h4",{attrs:{id:"_3-2-2-友元"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-友元"}},[s._v("#")]),s._v(" 3.2.2.友元")]),s._v(" "),t("p",[s._v("1、『"),t("font",{staticStyle:{background:"yellow"}},[s._v("友元函数是不能被继承的")]),s._v("——解释，你父亲的朋友不能继承给你？』，"),t("font",{staticStyle:{background:"yellow"}},[s._v("友元函数"),t("strong",[s._v("没有this指针")])]),s._v("。")],1),s._v(" "),t("p",[s._v("2、友元只是破坏了类的隐藏性和封装性，"),t("font",{staticStyle:{background:"yellow"}},[s._v("可以直接调用，不需要通过对象或者指针")])],1),s._v(" "),t("h2",{attrs:{id:"_4-big-three讲解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-big-three讲解"}},[s._v("#")]),s._v(" 4."),t("code",[s._v("Big Three")]),s._v("讲解")]),s._v(" "),t("p",[s._v("参考自：侯捷的说法，好像来自《C++ Primer》")]),s._v(" "),t("h3",{attrs:{id:"_4-1-构造函数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-构造函数详解"}},[s._v("#")]),s._v(" 4.1.构造函数详解")]),s._v(" "),t("h4",{attrs:{id:"_1-普通ctor-普通构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-普通ctor-普通构造函数"}},[s._v("#")]),s._v(" 1.普通ctor（普通构造函数）")]),s._v(" "),t("ul",[t("li",[s._v("1、无参的普通构造函数")]),s._v(" "),t("li",[s._v("2、"),t("strong",[s._v("有参")]),s._v("的普通构造函数\n"),t("ul",[t("li",[s._v("（1）"),t("strong",[s._v("类型转换")]),s._v("构造函数：只有"),t("strong",[s._v("1个参数")]),s._v("的普通构造函数一般都可以称作『类型转换构造函数』")]),s._v(" "),t("li",[s._v("（2）其他"),t("strong",[s._v("有参")]),s._v("的普通构造函数")])])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    \t\n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//无参的『普通构造函数』")]),s._v("\n  \n  \t\n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//有参的『普通构造函数』，并且由于只有1个参数，也叫『类型转换构造函数』")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          \tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Int Constructor calles"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//拷贝构造函数，原因是参数是『本类类型的引用』")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Copy ctor"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h4",{attrs:{id:"_2-copy-ctor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-copy-ctor"}},[s._v("#")]),s._v(" 2.copy ctor")]),s._v(" "),t("p",[s._v("copy ctor又称：复制构造函数，拷贝构造函数，拷贝"),t("strong",[s._v("初始化")]),s._v("构造函数")]),s._v(" "),t("p",[s._v("分为：")]),s._v(" "),t("p",[s._v("1、默认的『copy ctor』")]),s._v(" "),t("p",[s._v("2、如果你自行编写了新的copy ctor，那么默认的copy ctor就不存在了")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("Demo "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("c2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//会调用copy ctor，初始化")]),s._v("\n\nDemo c2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//会调用copy ctor，注意是初始化，不是赋值！")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_4-2-析构函数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-析构函数详解"}},[s._v("#")]),s._v(" 4.2.析构函数详解")]),s._v(" "),t("h4",{attrs:{id:"_4-2-1-有无virtual"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-有无virtual"}},[s._v("#")]),s._v(" 4.2.1.有无virtual")]),s._v(" "),t("p",[s._v("1、"),t("strong",[s._v("没有")]),s._v("virtual的析构函数，又称："),t("strong",[s._v("一般")]),s._v("的析构函数")]),s._v(" "),t("p",[s._v("2、"),t("strong",[s._v("有")]),s._v("virtual的析构函数")]),s._v(" "),t("p",[s._v("tips：析构时注意区别 "),t("code",[s._v("delete")]),s._v(" 和 "),t("code",[s._v("delete[]")])]),s._v(" "),t("h4",{attrs:{id:"_4-2-2-是否私有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-是否私有"}},[s._v("#")]),s._v(" 4.2.2.是否私有")]),s._v(" "),t("p",[s._v("在C++中，为了让某个类"),t("strong",[s._v("只能通过new来创建")]),s._v("（即如果直接创建对象，编译器将报错）")]),s._v(" "),t("ul",[t("li",[s._v("应该将"),t("strong",[s._v("析构函数设为"),t("font",{staticStyle:{background:"pink"}},[s._v("私有")])],1)])]),s._v(" "),t("h2",{attrs:{id:"_5-访问属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-访问属性"}},[s._v("#")]),s._v(" 5.访问属性")]),s._v(" "),t("h3",{attrs:{id:"_5-1-内部访问和对象访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-内部访问和对象访问"}},[s._v("#")]),s._v(" 5.1.内部访问和对象访问")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("类的成员有三种访问属性，分别是public、protected、private，[子类能够访问的成员](https://www.nowcoder.com/test/question/done?tid=44308742&qid=1618#summary)是\n")])])]),t("blockquote",[t("p",[s._v("参考牛客的答案：")])]),s._v(" "),t("img",{attrs:{src:a(275)}}),s._v(" "),t("h2",{attrs:{id:"_6-namespace命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-namespace命名空间"}},[s._v("#")]),s._v(" 6."),t("code",[s._v("namespace")]),s._v("命名空间")]),s._v(" "),t("p",[s._v("namespace，是指标识符的各种可见范围")]),s._v(" "),t("p",[s._v("C++标准程序库中的所有标识符都被定义于一个名为"),t("code",[s._v("std")]),s._v("的namespace中。")]),s._v(" "),t("p",[s._v("1、"),t("code",[s._v("<iostream>")]),s._v("和<iostream.h>格式不一样，前者没有后缀，实际上，在你的编译器include文件夹里面可以看到，二者是两个文件，打开文件就会发现，里面的代码是不一样的。")]),s._v(" "),t("p",[s._v("2、后缀为.h的头文件c++标准已经明确提出不支持了，早些的实现将标准库功能定义在"),t("strong",[s._v("全局空间")]),s._v("里，声明在带.h后缀的头文件里，c++标准为了和C区别开，也为了正确使用命名空间，规定头文件不使用后缀.h。")]),s._v(" "),t("p",[s._v("3、因此。命名空间主要是将全局空间『"),t("strong",[s._v("划分")]),s._v("为更加小块的全局空间』")]),s._v(" "),t("h2",{attrs:{id:"_7-其余"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-其余"}},[s._v("#")]),s._v(" 7.其余")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("1、一个基类的声明中有纯虚函数，该基类派生类一定不再是抽象类（说法错误！）\n")])])]),t("p",[s._v("原因：如果在派生类中"),t("strong",[s._v("没有")]),s._v("对所有纯虚函数进行定义，则此派生类仍然是抽象类，不能用来定义对象。所以A错.")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("2、构造函数**不能**被覆盖\n")])])]),t("h2",{attrs:{id:"✅『oop』面向对象的程序设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅『oop』面向对象的程序设计"}},[s._v("#")]),s._v(" ✅『OOP』面向对象的程序设计")]),s._v(" "),t("p",[s._v("1、面向对象的三大基本特征：封装、继承、多态")]),s._v(" "),t("p",[s._v("2、面向对象的五大基本原则：")]),s._v(" "),t("p",[s._v("单一职责原则、开放封闭原则、里氏替换原则、依赖倒置原则、接口隔离原则")]),s._v(" "),t("h3",{attrs:{id:"_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[s._v("#")]),s._v(" 1.1.类型转换函数(类型转换函数-不等于-类型转换构造函数)")]),s._v(" "),t("p",[s._v("1、带"),t("strong",[s._v("非默认参数")]),s._v("的构造函数可以把"),t("strong",[s._v("基本类型数据")]),s._v("转换成类类型对象。")]),s._v(" "),t("p",[s._v("2、『类型转换函数』可以把类类型对象转换为其他指定类型对象。")]),s._v(" "),t("p",[s._v("3、『类型转换函数』只能定义为一个类的成员函数，"),t("strong",[s._v("不能")]),s._v("定义为类的"),t("strong",[s._v("友元函数。")])]),s._v(" "),t("h2",{attrs:{id:"_1-辨析overload、override、overwrite⭐️『已解决』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-辨析overload、override、overwrite⭐️『已解决』"}},[s._v("#")]),s._v(" 1.辨析Overload、Override、Overwrite⭐️『已解决』")]),s._v(" "),t("h4",{attrs:{id:"_1-1-函数名称相同和重载不是一回事-比如全局函数和class里面的函数-作用域都不一样了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-函数名称相同和重载不是一回事-比如全局函数和class里面的函数-作用域都不一样了"}},[s._v("#")]),s._v(" 1.1.函数名称相同和重载不是一回事！比如全局函数和class里面的函数，作用域都不一样了")]),s._v(" "),t("ul",[t("li",[s._v("函数名称相同，参赛列表相同，但是也可以不是重载、重写、重定义")])]),s._v(" "),t("p",[s._v("如下，是2个不同的函数！他们的"),t("strong",[s._v("作用域都不一样")]),s._v("！")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//a.cpp")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//b.cpp")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h4",{attrs:{id:"_1-2-重载-overload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-重载-overload"}},[s._v("#")]),s._v(" 1.2."),t("strong",[s._v("重载(Overload)")]),s._v("：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("在同一作用域内")]),s._v("，函数名相同，函数的参数个数、参数类型或参数顺序三者中必须至少有一种不同。函数返回值的类型可以相同，也可以不相同。比如：发生在一个类内部。")]),s._v(" "),t("p",[s._v("郑莉：C++允许功能相近的函数在"),t("strong",[s._v("相同的作用域内")]),s._v("以相同函数名声明。从而形成重载。方便使用记忆。")]),s._v(" "),t("p",[s._v("《"),t("strong",[s._v("C++ Primer")]),s._v("》P206，如果“"),t("strong",[s._v("同一作用域")]),s._v("”内的几个函数名字相同但“形参列表”不同，我们称之为重载（"),t("strong",[s._v("overloaded")]),s._v("）函数")])])]),s._v(" "),t("h4",{attrs:{id:"_1-3-重写-override-「我觉得翻译为覆盖更好-」"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-重写-override-「我觉得翻译为覆盖更好-」"}},[s._v("#")]),s._v(" 1.3."),t("strong",[s._v("重写(Override)")]),s._v("：「我觉得翻译为"),t("strong",[s._v("覆盖")]),s._v("更好！」")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('也叫做**覆盖**，也叫**复写**，一般发生在子类和父类继承关系之间「发生在继承这种类型的不同作用域」。子类**重新定义**父类中有相同名称和参数的<font style="background: yellow">『**虚函数**』</font>\n')])])]),t("h4",{attrs:{id:"_1-4-隐藏-hide-好像还有人说overwrite是重定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-隐藏-hide-好像还有人说overwrite是重定义"}},[s._v("#")]),s._v(" 1.4.**隐藏（hide）**好像还有人说overwrite是重定义")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('子类**重新定义**父类中有相同名称的<font style="background: yellow">『**非虚函数**』 </font>( 参数列表可以不同 ) ，指派生类的函数**屏蔽**了与其同名的基类函数。可以理解成发生在继承中的重载。\n')])])]),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://blog.csdn.net/u010275850/article/details/45583705",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++_重载、重写和重定义的区别"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("PS：但是，从很多英语教材上面，来说，重定义和重写都是单词（override），理解参考第4节")]),s._v(" "),t("ul",[t("li",[s._v("子类重新定义父类虚函数的方法叫做覆写")]),s._v(" "),t("li",[s._v("多态是为了"),t("strong",[s._v("接口")]),s._v("重用，封装和继承是为了代码重用")])]),s._v(" "),t("p",[s._v("是的，override和overwrite是同一个概念。Override指的是在继承类中重写父类的方法，而overwrite指的是覆盖源文件中的内容。例如，在"),t("strong",[s._v("Java中")]),s._v("，如果在子类中重写父类的方法，就可以使用"),t("strong",[s._v("override关键字")]),s._v("，而如果要覆盖文件中的内容，就可以使用"),t("strong",[s._v("overwrite关键字")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"✅区分overload、overwrite和override"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅区分overload、overwrite和override"}},[s._v("#")]),s._v(" ✅区分Overload、Overwrite和Override")]),s._v(" "),t("ul",[t("li",[s._v("注意，由于这3个词的翻译很尴尬，众说纷纭，我们直接考虑单词来")]),s._v(" "),t("li",[s._v("『记忆版』")])]),s._v(" "),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://blog.csdn.net/jszhangyili/article/details/7570311",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSDN的jszhangyili博客"),t("OutboundLink")],1)])]),s._v(" "),t("img",{attrs:{src:a(276)}}),s._v(" "),t("blockquote",[t("p",[s._v("都是在函数名相同的时候，都不考虑返回值的情况下，我们讨论下面3组")])]),s._v(" "),t("ul",[t("li",[s._v("Overload\n"),t("ul",[t("li",[t("strong",[s._v("相同作用域")]),s._v("『可以不是class中』\n"),t("ul",[t("li",[s._v("参数相同，如果在class中，这样写就很奇怪了，"),t("font",{staticStyle:{background:"yellow"}},[s._v("报错")])],1),s._v(" "),t("li",[s._v("参数不同，就是重载")])])])])]),s._v(" "),t("li",[s._v("Override『显然是继承才有这个概念！whoway』覆写\n"),t("ul",[t("li",[s._v("==继承==体系，不同作用域")]),s._v(" "),t("li",[s._v("基类该函数是虚函数")]),s._v(" "),t("li",[s._v("参数相同")])])]),s._v(" "),t("li",[s._v("Overwrite\n"),t("ul",[t("li",[s._v("继承体系，不同作用域\n"),t("ul",[t("li",[s._v("情况1：参数不同，无论基类该函数是不是虚函数")]),s._v(" "),t("li",[s._v("情况2：参数相同，基类如果是『非虚函数』，那么就意味着在派生类中"),t("strong",[s._v("重新定义")]),s._v("一个函数，"),t("font",{staticStyle:{background:"yellow"}},[s._v("也就是非多态")])],1)])])])])]),s._v(" "),t("h3",{attrs:{id:"同一个class里面的成员函数加-不加virtual算不算重载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同一个class里面的成员函数加-不加virtual算不算重载"}},[s._v("#")]),s._v(" 同一个class里面的成员函数加/不加virtual算不算重载？")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("val")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"non-virtual=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"virtual=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BBB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    A a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br")])]),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentosLinux apue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# g++ demo.cpp ")]),s._v("\ndemo.cpp:15:18: error: ‘virtual void A::test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("’ cannot be ⭐️overloaded「重载」⭐️\n     virtual void test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                  ^\ndemo.cpp:11:10: error: with ‘void A::test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("’\n     void test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("如上，"),t("code",[s._v("virtual void A::test()")]),s._v("不能被"),t("strong",[s._v("重载！！")])])]),s._v(" "),t("h3",{attrs:{id:"那下面这样的叫什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#那下面这样的叫什么"}},[s._v("#")]),s._v(" 那下面这样的叫什么？")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"global=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("val")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"virtual=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    A a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("​")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("在上面的代码中，全局的`test()`函数和类`A`中的`test()`函数**虽然具有相同的名称**，但它们**所在作用域不同**，**就像两个不同文件里面的作用域分别都叫test**，因此它们不是函数的重载（overloading）。实际上，全局的`test()`函数和类`A`中的`test()`函数属于**两个不同的函数**。\n\n全局的`test()`函数和类`A`中的`test()`函数是两个不同的函数，它们没有重载的关系，也没有覆盖或重写的关系!\n\n因为函数重载，强调了，要在同一作用域。\n")])])]),t("h4",{attrs:{id:"chatgpt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chatgpt"}},[s._v("#")]),s._v(" chatgpt")]),s._v(" "),t("p",[s._v("那给我区别一下C++里面的Overload、Override、Overwrite")]),s._v(" "),t("p",[s._v("在C++中，"),t("code",[s._v("Overload")]),s._v("、"),t("code",[s._v("Override")]),s._v("和"),t("code",[s._v("Overwrite")]),s._v("都是与函数有关的概念，它们分别表示不同的含义：")]),s._v(" "),t("ol",[t("li",[s._v("Overload（重载）：是指在"),t("strong",[s._v("同一作用域")]),s._v("内，定义多个函数名相同但参数列表不同的函数。C++允许在同一个作用域内定义多个同名函数，只要它们的参数列表不同，这就是函数重载。重载的目的是为了提高代码的复用性和可读性。")]),s._v(" "),t("li",[s._v("Override（覆盖）：是指在==派生类==中重新定义（或覆盖）基类中的==虚函数==。当一个派生类重定义了一个虚函数时，它将覆盖基类中的函数，从而在运行时调用派生类的函数而不是基类的函数。这样做可以实现运行时多态性，从而允许以统一的方式操作不同类型的对象。")]),s._v(" "),t("li",[s._v("Overwrite（覆盖）：是指在==派生类==中定义与基类中的==非虚函数同名==的函数。当派生类定义一个与基类中的非虚函数同名的函数时，该函数将覆盖基类中的函数，从而在运行时调用派生类的函数而不是基类的函数。由于C++不支持非虚函数的多态性，因此覆盖非虚函数往往不是一个好的编程实践，容易导致意外的行为。")])]),s._v(" "),t("p",[s._v("我觉得回答还好！")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("总的来说，我觉得这些区别，可能是这么比较，但是像**编译器**可能还是会将像：同一个class里面的成员函数加/不加virtual算重载，虽然是同一作用域，但是参数列表不是一样吗？「但是这样又破除了，咋们对这些的理解」\n")])])]),t("h2",{attrs:{id:"_2-多态与虚函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-多态与虚函数"}},[s._v("#")]),s._v(" 2.多态与虚函数")]),s._v(" "),t("h3",{attrs:{id:"_2-1-static变量的说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-static变量的说明"}},[s._v("#")]),s._v(" 2.1."),t("code",[s._v("static")]),s._v("变量的说明")]),s._v(" "),t("p",[s._v("c++的一个类中声明一个"),t("strong",[s._v("static成员变量")]),s._v("，下面描述正确的是")]),s._v(" "),t("ul",[t("li",[s._v("static是加了"),t("strong",[s._v("访问控制")]),s._v("的全局变量，『"),t("strong",[s._v("不被继承")]),s._v("』，类和子类对象，static变量占有一份内存")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-虚函数相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-虚函数相关"}},[s._v("#")]),s._v(" 2.2.虚函数相关")]),s._v(" "),t("ul",[t("li",[s._v("1、（static）静态函数不可以是虚函数『虚成员函数不可能是static 成员函数』")]),s._v(" "),t("li",[s._v("2、（inline）虚函数可以声明为inline，但是编译器不会将其作为inline函数处理『有的选择题故意为难，但是其实"),t("strong",[s._v("虚函数是可以声明为inline的，但是分情况")]),s._v("』』")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inline")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("尽管以上写法是没有语法错误的，并且可以执行，但其实test函数已经不是内联函数了，因为inline只是对编译器的一个建议而已。搞清本质就好。\n")])])]),t("h3",{attrs:{id:"_2-2-虚函数能不能inline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-虚函数能不能inline"}},[s._v("#")]),s._v(" 2.2.虚函数能不能inline")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("Q:虚函数不能内联，但是语法不出错？\n\nA:不是的，虚函数在『『没有表现多态的时候』』是可以内联的，表现多态的时候不能\n\n『没有表现多态的时候』:内联只是对编译器的一种请求，是否真正内联要看编译器的处理，虚函数是可以内联的，但是编译器不会响应内联请求，即他会忽略内联说明，将其当做普通虚函数处理。\n\n有说法说：\n虚函数不可以内联，因为虚函数是在运行期的时候确定具体调用的函数，内联是在编译期的时候进行代码展开，两者冲突，所以没有一起使用的做法。『『这是不严谨的』』\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"_3-『多态神器』-多态3条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-『多态神器』-多态3条件"}},[s._v("#")]),s._v(" 3.『多态神器』-多态3条件")]),s._v(" "),t("ul",[t("li",[s._v("『『"),t("code",[s._v("动态绑定3条件")]),s._v("』』")])]),s._v(" "),t("blockquote",[t("p",[s._v("C++编译器，看到一个函数调用，他有2个考量，静态还是动态绑定：")])]),s._v(" "),t("ul",[t("li",[s._v("静态被编译成："),t("code",[s._v("call")])]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("动态绑定：符合某些条件就会做动态绑定，"),t("strong",[s._v("3个条件")])])],1)]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("、通过指针来调用『注意，引用显然也是的，因为底层也是指针』\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("、这个指针是向上转型up cast了。『比如，派生类赋值给基类指针，基类指针调用』\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("、调用虚函数\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_3-1-条件1和条件2❎『非多态』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-条件1和条件2❎『非多态』"}},[s._v("#")]),s._v(" 3.1.条件1和条件2❎『非多态』")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题1.")])]),s._v(" "),t("li",[t("p",[s._v("牛客上配套习题："),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44172669&qid=15197#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("题解：")])]),s._v(" "),t("li",[t("p",[s._v("这一题中，最后一个c，是相当于强制类型转换，『或许叫：向下转型？？』，然后没有通过指针来调用")])]),s._v(" "),t("li",[t("p",[s._v("用牛油的一个解释：动态绑定（多态）只有在指针和引用时才有效，其他情况下无效。")])])]),s._v(" "),t("h3",{attrs:{id:"_3-2-条件3❎『非多态』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-条件3❎『非多态』"}},[s._v("#")]),s._v(" 3.2.条件3❎『非多态』")]),s._v(" "),t("ul",[t("li",[s._v("例题2.")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mytest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"AAA"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mytest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BBB"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mytest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出的是AAA")]),s._v("\n    \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("ul",[t("li",[s._v("本题不是动态绑定原因分析：")]),s._v(" "),t("li",[s._v("1、通过指针来调用『注意，引用显然也是的，因为底层也是指针』\n"),t("ul",[t("li",[s._v("满足，用了"),t("code",[s._v("p->mytest();")])])])]),s._v(" "),t("li",[s._v("2、这个指针是向上转型up cast了『比如，派生类赋值给基类指针，基类指针调用』\n"),t("ul",[t("li",[s._v("满足，A是B的基类")])])]),s._v(" "),t("li",[s._v("3、调用虚函数❎不满足\n"),t("ul",[t("li",[s._v("因为p指针是A类型的，但是在classA中该函数还不是『虚函数』，因此次数，不能走偏移vptr的路径，想走虚函数指针—虚函数表的路径走不通。只能老老实实转换为调用"),t("code",[s._v("A::test()")]),s._v("这个非虚函数")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-3-虚析构函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-虚析构函数"}},[s._v("#")]),s._v(" 3.3.虚析构函数")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题3")])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("虚析构函数：是为了解决基类的指针指向派生类对象，并且用『基类指针』删除派生类对象。")])],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pa "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" pa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出是：1 4 6 3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("考察的是对继承体系中的构造和析构函数调用顺序的理解。")])]),s._v(" "),t("li",[t("p",[s._v("在调用new B()的时候，因为B继承A，所以会首先调用其父类的构造函数，输出1")])]),s._v(" "),t("li",[t("p",[s._v("然后调用自己的构造函数，输出4")])]),s._v(" "),t("li",[t("p",[s._v("//析构的时候，是会调用的")])]),s._v(" "),t("li",[t("p",[s._v("对比，下面，如果去除掉A的析构函数的，虚函数")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("输出为：1 4 3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("原因：\n"),t("ul",[t("li",[t("strong",[s._v("静态绑定，this指针直接调用了A的析构")]),s._v("，B的没有。")]),s._v(" "),t("li",[s._v("很显然，有的时候，会出问题。")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-4-『添加作用域的调用』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-『添加作用域的调用』"}},[s._v("#")]),s._v(" 3.4.『添加作用域的调用』")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题4")])]),s._v(" "),t("li",[t("p",[s._v("多态情况下，不调用多态")])]),s._v(" "),t("li",[t("p",[s._v("牛客网"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44308742&qid=180817#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("题目"),t("OutboundLink")],1),s._v("：")])])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("类B是类A的公有派生类，类A和类B中都定义了虚函数func(),p是一个指向类A对象的指针，则p->A::func()将（）？\n\n正确答案: C   你的答案: C (正确)\n\nA\t调用类B中函数func()\nB\t即调用类A中函数，也调用类B中的函数\nC\t调用类A中函数func()\nD\t根据p所指的对象类型而确定调用类A中或类B中的函数func()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("不论指针p是属于类A还是类B，也不论指针p指向的对象属于类A还是类B(当然，不能用类B的指针指向类A的对象)，"),t("strong",[s._v("因为加了作用域说明符"),t("code",[s._v("A::")]),s._v("，因此都只会调用类A的函数")]),s._v("。")])]),s._v(" "),t("h3",{attrs:{id:"_3-5-静态绑定的核心理解『易错难点』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-静态绑定的核心理解『易错难点』⭐️"}},[s._v("#")]),s._v(" 3.5.静态绑定的核心理解『易错难点』⭐️")]),s._v(" "),t("ul",[t("li",[s._v("例题5")]),s._v(" "),t("li",[s._v("易错的题目"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44470246&qid=44536#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test A"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意『这是个幌子』")]),s._v("\n\tpA"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[s._v("有4个选项")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('问你选什么？\nA    编译出错\nB    程序运行奔溃\nC    输出"test A"\nD    输出乱码\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("答案选C："),t("strong",[s._v('输出"test A"')])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711202412877.png",alt:"image-20210711202412877"}})]),s._v(" "),t("ul",[t("li",[s._v("原因：\n"),t("ul",[t("li",[s._v("因为"),t("strong",[s._v("对于非虚成员函数，Ｃ++这门语言是静态绑定的")]),s._v("。")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("这也是Ｃ++语言和其它语言Java, Python的一个显著区别")])],1),s._v(" "),t("li",[t("code",[s._v("//pA->test();")]),s._v("这语句的意图是：调用对象 pA 的 test 成员函数。如果这句话在Java或Python等动态绑定的语言之中，编译器生成的代码大概是：\n"),t("ul",[t("li",[s._v("找到 pA 的 test 成员函数，调用它。（注意，这里的找到是程序运行的时候才找的，这也是所谓动态绑定的含义：运行时才绑定这个函数名与其对应的实际代码。有些地方也称这种机制为迟绑定，晚绑定。）")])])]),s._v(" "),t("li",[s._v("但是对于C++。为了保证程序的运行时效率，Ｃ++的设计者认为凡是编译时能确定的事情，就不要拖到运行时再查找了。所以C++的编译器看到这句话会这么干：\n"),t("ul",[t("li",[s._v("１：查找 pA 的类型，发现它有一个非虚的成员函数叫 test 。（编译器干的）")]),s._v(" "),t("li",[s._v("２：找到了，在这里生成一个函数调用，直接调"),t("code",[s._v("A:: test ( pA )")]),s._v("。")])])]),s._v(" "),t("li",[s._v("所以到了运行时，由于 test ()函数里面并没有任何需要解引用 pA 指针的代码，所以真实情况下也不会引发"),t("code",[s._v("segment fault")]),s._v("。\n"),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("这里对成员函数的解析，和查找其对应的代码的工作都是在编译阶段完成而非运行时完成的，这就是所谓的静态绑定，也叫早绑定。正确理解C++的静态绑定可以理解一些特殊情况下C++的行为。『贼容易错』")])],1)])])])])]),s._v(" "),t("h3",{attrs:{id:"✅上面是难点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅上面是难点"}},[s._v("#")]),s._v(" ✅上面是难点")]),s._v(" "),t("ul",[t("li",[s._v("因为"),t("strong",[s._v("对于非虚成员函数，Ｃ++这门语言是静态绑定的")]),s._v("。")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("这也是Ｃ++语言和其它语言Java, Python的一个显著区别")])],1)]),s._v(" "),t("h3",{attrs:{id:"_3-6-const对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-const对象"}},[s._v("#")]),s._v(" 3.6.const对象")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题6")])]),s._v(" "),t("li",[t("p",[s._v("题目来源和"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44470458&qid=1318#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考资料"),t("OutboundLink")],1)])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A::f() "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A::f() const "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f() "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//还是虚函数！，只是说，覆盖了，其实是vitual")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f() const "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ta"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//多态")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//先转换为const指针，由于只能调用const函数，所以不是多态了「因为此时不需要借助vptr去偏移了」")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//B::f() A::f() const")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出前面是因为多态")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出后面是因为不是多态！！！（注意）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("ul",[t("li",[s._v("解释原因")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("由于"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("在基类中声明为虚的，则p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("根据『对象类型』"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("调用"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，\n  此时编译器对虚方法使用动态联编，输出"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。\n    \n由于"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("在基类中未声明为虚的，故p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" 『根据指针类型』"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("调用"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("，此时编译器对非虚方法使用静态联编，输出"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("C++ primer告诉我们，P537")]),s._v(" "),t("p",[s._v("当我们在派生类中覆盖某个虚函数时，可以再次使用virtual关键字指出该函数的性质，然而"),t("strong",[s._v("这么做并非必须")]),s._v("！因为，"),t("strong",[s._v("基类中的虚函数，在派生类中隐含的也是1个虚函数！")])])])]),s._v(" "),t("h2",{attrs:{id:"_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[s._v("#")]),s._v(" 4.构造函数（ctor）和析构函数（dtor）相关⭐️")]),s._v(" "),t("h3",{attrs:{id:"_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[s._v("#")]),s._v(" 4.1.C++ 构造函数和析构函数可以是虚函数嘛？")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("构造函数"),t("strong",[s._v("不可以")]),s._v("是虚函数")]),s._v(" "),t("p",[s._v("因为虚函数只有和类的对象结合才能体现多态性，"),t("strong",[s._v("构造函数被调用时，类对象还没有完成建立")]),s._v("，所以无意义。")])]),s._v(" "),t("li",[t("p",[s._v("析构函数"),t("strong",[s._v("可以且常常")]),s._v("是虚函数")])])]),s._v(" "),t("p",[s._v("在多个派生类中如果动态分配了内存，虚析构函数可以分别释放。不然有可能造成内存泄漏。")]),s._v(" "),t("p",[s._v("虚析构函数是为了解决：基类的指针指向派生类对象，并用基类的指针删除派生类对象。")]),s._v(" "),t("blockquote",[t("p",[s._v("参考自：《面向对象技术与Visual C++学习指导》，甘玲， 邱劲，张璞")])]),s._v(" "),t("ul",[t("li",[s._v("参考代码：http://c.biancheng.net/view/269.html")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CShape")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//基类")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CShape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CShape::destrutor"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CRectangle")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CShape")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//派生类")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" w"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" h"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//宽度和高度")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CRectangle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CRectangle::destrutor"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    CShape"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" CRectangle"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v('输出结果说明，`delete p;`只引发了 CShape 类的析构函数被调用，没有引发 CRectangle 类的析构函数被调用。这是因为该语句是「静态联编」的，<font style="background:pink">**编译器编译到此时，「不可能知道此时 p 到底指向哪个类型的对象」**，它**只根据 p 的类型是 `CShape *` 来决定应该调用 CShape 类的析构函数**</font>。\n\n按理说，`delete p;`会导致一个 CRectangle 类的对象消亡，应该调用 CRectangle 类的析构函数才符合逻辑，否则有可能引发程序的问题。\n\n例如，假设程序需要对 CRetangle 类的对象进行计数，如果此处不调用 CRetangle 类的析构函数，就会导致计数不正确。\n\n再如，假设 CRectangle 类的对象在存续期间进行了动态内存分配，而释放内存的操作都是在析构函数中进行的，如果此处不调用 CRetangle 类的析构函数，就会导致被释放的对象中动态分配的内存以后再也没有机会回收。\n')])])]),t("p",[s._v("综上所述，人们希望"),t("code",[s._v("delete p;")]),s._v("这样的语句能够聪明地根据 p 所指向的对象执行相应的析构函数。实际上，这也是多态。为了在这种情况下实现多态，"),t("a",{attrs:{href:"http://c.biancheng.net/cplus/",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++"),t("OutboundLink")],1),s._v(" 规定，需要将基类的析构函数声明为虚函数，即虚析构函数。")]),s._v(" "),t("h3",{attrs:{id:"_4-2-构造函数中调用虚函数会怎么样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-构造函数中调用虚函数会怎么样"}},[s._v("#")]),s._v(" 4.2.构造函数中调用虚函数会怎么样？")]),s._v(" "),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://www.huaweicloud.com/articles/ce10c517a25e175c5ab5d0c751c0319c.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("华为云博客：构造函数和析构函数中可以调用调用虚函数吗"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("１.　从语法上讲，调用完全没有问题。\n２.　但是从效果上看，往往不能达到需要的目的。")]),s._v(" "),t("ul",[t("li",[s._v("《Effective C++ 》条款9：永远不要在构造函数或析构函数中调用虚函数")])]),s._v(" "),t("p",[s._v("为什么不能在析构和构造函数中调用呢,实际上这样做是不会报错的(试过了),但是不建议这样用")]),s._v(" "),t("p",[s._v("书上,其实就是作者告诉你"),t("strong",[s._v("构造函数和析构函数中调用虚函数不会呈现出多态")])]),s._v(" "),t("p",[s._v("因为父类对象会在子类之前进行构造，此时子类部分的数据成员还未初始化， 因此调用子类的虚函数是不安全的，故而C++不会进行动态联编。")]),s._v(" "),t("h3",{attrs:{id:"_4-3-析构函数中调用虚函数会怎么样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-析构函数中调用虚函数会怎么样"}},[s._v("#")]),s._v(" 4.3.析构函数中调用虚函数会怎么样？")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("**不要**在析构函数中调用虚函数的原因：\n\n析构函数是用来销毁一个对象的，在销毁一个对象时，先调用子类的析构函数，然后再调用基类的析构函数。\n\n所以**在调用基类的析构函数时，派生类对象的数据成员已经“销毁”，这个时再调用子类的虚函数已经没有意义了**。\n")])])]),t("h2",{attrs:{id:"⭐️4-『运算符重载』详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⭐️4-『运算符重载』详解"}},[s._v("#")]),s._v(" ⭐️4.『运算符重载』详解")]),s._v(" "),t("p",[s._v("（本质还是函数重载）")]),s._v(" "),t("h3",{attrs:{id:"_4-1-重载的2种函数类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-重载的2种函数类型"}},[s._v("#")]),s._v(" 4.1.重载的2种函数类型")]),s._v(" "),t("ul",[t("li",[s._v("1、成员函数")]),s._v(" "),t("li",[s._v("2、友元函数『属于，非成员函数』")])]),s._v(" "),t("p",[s._v("易错：有的运算符，"),t("strong",[s._v("只能重载")]),s._v("为『成员函数』")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" \t\t\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重载，下标运算符，比如重载后，返回当前vetor中的元素，需要this指针，而非成员函数是没有this指针的233")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重载，函数调用运算符，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("\n上面"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("个，『只能』通过成员函数进行重载\n我的理解，备注如上\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"谈一谈null-0-nullptr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谈一谈null-0-nullptr"}},[s._v("#")]),s._v(" 谈一谈NULL，0，nullptr")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v(" nullptr是**一个编译期常量，其类型为nullptr_t**。 它既不是整型类型，也不是指针类型； 在模板推导中，nullptr被推导为nullptr_t类型，仍**可隐式转为指针**\n")])])]),t("p",[s._v("在C中NULL是什么，在C的头文件中，通常定义如下：")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("但是在C++中，它是这样定义的：")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")])])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("或者你可以在stddef.h看到完整的这段：")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("undef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("defined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__cplusplus"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  ")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//C++里面")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//大概是C里面")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("也就是说，在C++中，NULL不过也是0罢了，把它当成空指针只是一个无可奈何的选择罢了。")]),s._v(" "),t("p",[s._v("那么为什么在C++和C中不一样呢？因为C++中不能将"),t("code",[s._v("void *")]),s._v("类型的指针"),t("strong",[s._v("隐式转换")]),s._v("成其他指针类型，从下面的例子可以看出来：")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//null.cpp")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"12345"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("编译：")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ g+ -o null null.cpp\nnull.cpp: In function 'int main()':\nnull.cpp:5:17: error: invalid conversion from 'void*' to 'int*' [-fpermissive]\n  int *a = (void*)p;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("所以不能将NULL定义为(void*)0。")]),s._v(" "),t("p",[s._v("nullptr并非整型类别，甚至也不是指针类型，但是能转换成任意指针类型。nullptr的实际类型是std:nullptr_t。")]),s._v(" "),t("p",[t("strong",[s._v("std::nullptr_t")]),s._v(" 是空指针字面量 "),t("a",{attrs:{href:"https://www.apiref.com/cpp-zh/cpp/language/nullptr.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[s._v("nullptr")]),t("OutboundLink")],1),s._v(" 的类型。它是既非指针类型亦非指向成员指针类型的独立类型。")]),s._v(" "),t("p",[s._v("参考资料：https://www.apiref.com/cpp-zh/cpp/types/nullptr_t.html")]),s._v(" "),t("p",[s._v("这个新特性特别有助于避免将空指针解释为整数值发生的错误。")]),s._v(" "),t("p",[s._v("nullptr是一个新的关键字。它会自动转换为一个指针类型，但"),t("strong",[s._v("不会转换为任何整数类型")]),s._v("。它的类型是std::nullptr_t，所以你现在甚至可以重载传递空指针的操作。std::nullptr_t算作一个"),t("strong",[s._v("基本数据类型")])]),s._v(" "),t("h2",{attrs:{id:"✅杂谈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅杂谈"}},[s._v("#")]),s._v(" ✅杂谈")]),s._v(" "),t("h3",{attrs:{id:"_1-常量表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-常量表达式"}},[s._v("#")]),s._v(" 1.常量表达式")]),s._v(" "),t("ul",[t("li",[s._v("《"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=43575799&qid=67992",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++Primer"),t("OutboundLink")],1),s._v("》")])]),s._v(" "),t("h3",{attrs:{id:"_2-c-98关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-c-98关键字"}},[s._v("#")]),s._v(" 2.C++98关键字")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("1、"),t("code",[s._v("static")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("修改变量或函数存储的形式，比如"),t("code",[s._v(".data")]),s._v("，"),t("code",[s._v(".bss")])])]),s._v(" "),t("li",[t("p",[s._v("作用是：穿透作用域、『C++ primer PXX好像是这么说的』")])]),s._v(" "),t("li",[t("p",[s._v("参考：牛客网："),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44308658&qid=14302#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("关于static用途说法正确的是"),t("OutboundLink")],1),s._v("？")])])])]),s._v(" "),t("li",[t("p",[s._v("2、"),t("code",[s._v("const")])]),s._v(" "),t("ul",[t("li",[s._v("修改变量or函数的只读方式")])])]),s._v(" "),t("li",[t("p",[s._v("3、"),t("code",[s._v("inline")])])]),s._v(" "),t("li",[t("p",[s._v("建议在“编译期”，直接将整个函数的代码插入调用语句处")])]),s._v(" "),t("li",[t("p",[s._v("4、"),t("code",[s._v("friend")])]),s._v(" "),t("ul",[t("li",[s._v("声明友元，包括，友元函数，友元类")])])])]),s._v(" "),t("h2",{attrs:{id:"✅常识-非面试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅常识-非面试"}},[s._v("#")]),s._v(" ✅常识-非面试")]),s._v(" "),t("h3",{attrs:{id:"_1-区分c-和c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-区分c-和c"}},[s._v("#")]),s._v(" 1.区分C++和C")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("C和C++从来就不是一个东西！C++部分兼容C\n")])])]),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("中没有的C99"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("C11特性\n    虽然在过去C或多或少可以看作是C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("的子集，但是C99标准增加了一些C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("没有的新特性\n下面列出了一些只有C99"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("C11中才有的特性"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\t\n\t指定初始化器"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t复合初始化器"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Compound initializer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t受限指针"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" Restricted pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("即，restric指针"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n  变长数组"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t伸缩型数组成员"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t带可变数量参数的宏。\n\n注意\n以上所列只是在特定时期内的情况，随着时间的推移和C、C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("的不断发展，列表中的项会有所增减。\n    例如，C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("新增的一个特性就与『C99的变长数组』类似。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ul",[t("li",[s._v("参考自：《C Primer Plus》P730")])]),s._v(" "),t("h3",{attrs:{id:"如果使用brk-c-堆内存为什么不连续"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如果使用brk-c-堆内存为什么不连续"}},[s._v("#")]),s._v(" 如果使用brk(). C++：堆内存为什么不连续？")]),s._v(" "),t("ul",[t("li",[s._v("栈中的内存是操作系统自动分配的，可以理解成是连续的\n"),t("ul",[t("li",[s._v("堆的内存分配是因为我们malloc空间的时候，申请的空间的大小不一样造成了碎片。使用malloc的时候系统内部有一个"),t("strong",[s._v("空闲内存映射表")]),s._v("，系统会自动查找空闲内存中的第一个合适大小的空间分配")]),s._v(" "),t("li",[s._v("分配和释放不一定什么时候发生。内核有自己申请内存的算法。当然不一定是连续的，如果想连续就一起申请")]),s._v(" "),t("li",[s._v("malloc 通过 "),t("strong",[s._v("brk()")]),s._v(" 方式申请的内存，free 释放内存的时候，=="),t("strong",[s._v("并不会把内存归还给操作系统，而是缓存在 malloc 的内存池中，待下次使用")]),s._v("；==\n"),t("ul",[t("li",[s._v("随着系统频繁地 malloc 和 free ，尤其对于小块内存，堆内将产生越来越多不可用的碎片，导致“内存泄露”。而这种“泄露”现象使用 valgrind 是无法检测出来的。")])])]),s._v(" "),t("li",[s._v("malloc 通过 "),t("strong",[s._v("mmap()")]),s._v(" 方式申请的内存，free 释放内存的时候，"),t("strong",[s._v("会把内存归还给操作系统，内存得到真正的释放")]),s._v("。")])])])]),s._v(" "),t("p",[s._v("我的理解，就是先前brk的可能没还给操作系统，然后我们就继续申请，然后")]),s._v(" "),t("h2",{attrs:{id:"引申问题-由new和仅在class上的对象或仅在stack上的对象-⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引申问题-由new和仅在class上的对象或仅在stack上的对象-⭐️"}},[s._v("#")]),s._v(" 引申问题-由new和仅在class上的对象或仅在stack上的对象！⭐️")]),s._v(" "),t("h3",{attrs:{id:"_1-如何定义1个『只能』在『堆』上生成对象的类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何定义1个『只能』在『堆』上生成对象的类"}},[s._v("#")]),s._v(" 1.如何定义1个『只能』在『堆』上生成对象的类？")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("在C++中，为了让某个class**只能通过new（不能通过malloc）**来创建（即如果直接创建对象，编译器将报错），应该\n")])])]),t("ul",[t("li",[s._v("将『析构函数』设为『"),t("strong",[s._v("私有")]),s._v("』")]),s._v(" "),t("li",[s._v("原因：C++是静态，如果在栈上分配，那是编译期间（静态）就搞定了构造和析构的"),t("strong",[s._v("汇编")]),s._v("！\n"),t("ul",[t("li",[t("p",[s._v("只要把某个步骤截断！比如构造函数or析构函数，但是构造函数为私有的话，意味着只有类的成员函数或友元函数才能调用该构造函数，比如单例模式「引申到单例模式的代码」")]),s._v(" "),t("p",[s._v("原因：C++ 是"),t("strong",[s._v("静态绑定语言")]),s._v("，编译器管理"),t("strong",[s._v("栈")]),s._v("上对象的生命周期，编译器在为类对象分配栈空间时，会"),t("strong",[s._v("先检查")]),s._v("class的"),t("strong",[s._v("析构函数的访问性")]),s._v("。若析构函数不可访问，则不能在栈上创建对象。")])])])])]),s._v(" "),t("h3",{attrs:{id:"_2-如何定义1个『只能』在『栈』上生成对象的class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何定义1个『只能』在『栈』上生成对象的class"}},[s._v("#")]),s._v(" 2.如何定义1个『只能』在『"),t("strong",[s._v("栈")]),s._v("』上生成对象的class？")]),s._v(" "),t("p",[s._v("将这个class的operator new和delete重载为『"),t("strong",[s._v("私有")]),s._v("』")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("原因：在堆上生成class的object，使用new关键字操作。（不能使用malloc，所以不要阻断）\n")])])]),t("ul",[t("li",[s._v("看过源代码知道过程是3步！")]),s._v(" "),t("li",[s._v("1、使用operator new在『堆』上找可用的内存，分配给对象")]),s._v(" "),t("li",[s._v("2、类型转换")]),s._v(" "),t("li",[s._v("3、调用构造函数生成对象")]),s._v(" "),t("li",[s._v("所以，如果将new操作设置为『私有』，那么第1阶段就不能完成。『就不能在堆上生成对象』")])]),s._v(" "),t("h3",{attrs:{id:"追问-c-中-为了让某个class只能通过new来创建-那malloc为啥不可以"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#追问-c-中-为了让某个class只能通过new来创建-那malloc为啥不可以"}},[s._v("#")]),s._v(" 追问：C++中，为了让某个class只能通过new来创建？那malloc为啥不可以？")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("`new`关键字会调用类的**构造函数**，而`malloc`只是简单地分配内存。那你后续咋构造函数？这问题就转换为\n")])])]),t("h3",{attrs:{id:"追问-那c-里面的strcut也是只能用new-不能用malloc吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#追问-那c-里面的strcut也是只能用new-不能用malloc吗"}},[s._v("#")]),s._v(" 追问：那C++里面的strcut也是只能用new，不能用malloc吗？")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("是的！因为C++里面的struct底层也是结构体实现\n")])])]),t("h2",{attrs:{id:"c-如何实现多态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-如何实现多态"}},[s._v("#")]),s._v(" C++如何实现多态？")]),s._v(" "),t("p",[s._v("多态是用虚函数来实现，结合"),t("strong",[s._v("动态绑定")])]),s._v(" "),t("p",[s._v("C++的多态性用一句话概括就是：")]),s._v(" "),t("p",[s._v("在基类的函数前加上virtual关键字，在派生类中override该函数，运行时将会根据对象的实际类型来调用相应的函数。")]),s._v(" "),t("p",[s._v("如果对象类型是派生类，就调用派生类的函数；如果对象类型是基类，就调用基类的函数。")]),s._v(" "),t("h2",{attrs:{id:"静态函数可以加virtual吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态函数可以加virtual吗"}},[s._v("#")]),s._v(" 静态函数可以加virtual吗？")]),s._v(" "),t("p",[s._v("不可以！virtual用在继承体系中。")]),s._v(" "),t("h2",{attrs:{id:"new是线程安全的吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new是线程安全的吗"}},[s._v("#")]),s._v(" new是线程安全的吗？")]),s._v(" "),t("p",[s._v("赵4老师：new和delete线程安全不安全还决定于链接的是否支持多线程的库。")]),s._v(" "),t("p",[s._v("libc中有非线程安全/线程安全两个版本malloc函数")]),s._v(" "),t("ul",[t("li",[s._v("参考资料：[About thread safety in malloc and free "),t("a",{attrs:{href:"https://stackoverflow.com/questions/987444/about-thread-safety-in-malloc-and-free",target:"_blank",rel:"noopener noreferrer"}},[s._v("duplicate]"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"gdb如何调试多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gdb如何调试多线程"}},[s._v("#")]),s._v(" gdb如何调试多线程？")]),s._v(" "),t("ul",[t("li",[s._v("安装pstack，使用"),t("code",[s._v("pstack pid")])]),s._v(" "),t("li",[s._v("pstree好像默认又")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("//查看当前运行的进程\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" a.out\n//查看当前运行的轻量级进程\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -aL"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" a.out\n//查看主线程和新线程的关系\npstree "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" 主线程id\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("参考资料："),t("a",{attrs:{href:"https://blog.csdn.net/zhangye3017/article/details/80382496",target:"_blank",rel:"noopener noreferrer"}},[s._v("线程的查看以及利用gdb调试多线程"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"cxx记忆手册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cxx记忆手册"}},[s._v("#")]),s._v(" 📖CXX记忆手册")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#📑-目录"}},[s._v("📑 目录")])]),t("li",[t("a",{attrs:{href:"#✅虚函数"}},[s._v("✅虚函数")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-虚函数表-vtbl"}},[s._v("1.虚函数表vtbl")])]),t("li",[t("a",{attrs:{href:"#_2-构造一个「派生类」对象的过程"}},[s._v("2.构造一个「派生类」对象的过程")])]),t("li",[t("a",{attrs:{href:"#_2-1-是先构造父类的「虚表指针」还是先构造父类的「成员」"}},[s._v("2.1.是先构造父类的「虚表指针」还是先构造父类的「成员」？")])]),t("li",[t("a",{attrs:{href:"#_2-2-「虚表指针」和「构造函数体」那个先被构造"}},[s._v("2.2.「虚表指针」和「构造函数体」那个先被构造？")])]),t("li",[t("a",{attrs:{href:"#_3-c-「运行构造函数」的时候「虚函数表」被构造出来了么"}},[s._v("3.c++「运行构造函数」的时候「虚函数表」被构造出来了么？")])]),t("li",[t("a",{attrs:{href:"#_4-析构一个「派生类」object的过程"}},[s._v("4.析构一个「派生类」object的过程")])])])]),t("li",[t("a",{attrs:{href:"#✅基础"}},[s._v("✅基础")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-vector是线程安全的吗"}},[s._v("1.vector是线程安全的吗？")])]),t("li",[t("a",{attrs:{href:"#_2-c-是不是类型安全的呢"}},[s._v("2.C++是不是类型安全的呢？")])]),t("li",[t("a",{attrs:{href:"#_3-sizeof-只有1个虚析构函数的空类呢"}},[s._v("3.sizeof只有1个虚析构函数的空类呢？")])]),t("li",[t("a",{attrs:{href:"#_4-构造函数为什么不能是虚函数"}},[s._v("4.构造函数为什么不能是虚函数？")])]),t("li",[t("a",{attrs:{href:"#_5-为何空类的大小不是零"}},[s._v("5.为何空类的大小不是零？")])]),t("li",[t("a",{attrs:{href:"#_6-我能从构造函数调用虚函数吗"}},[s._v("6.我能从构造函数调用虚函数吗？")])]),t("li",[t("a",{attrs:{href:"#_7-内存泄露及解决办法"}},[s._v("7.内存泄露及解决办法：")])]),t("li",[t("a",{attrs:{href:"#_8-怎么检测内存泄漏"}},[s._v("8.怎么检测内存泄漏？")])]),t("li",[t("a",{attrs:{href:"#_9-初始化顺序"}},[s._v("9.初始化顺序")])])])]),t("li",[t("a",{attrs:{href:"#✅平常做题错题"}},[s._v("✅平常做题错题")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-测试"}},[s._v("1.测试")])]),t("li",[t("a",{attrs:{href:"#_2-在-c-语言中-对函数参数默认值描述正确的是"}},[s._v("2.在 c++ 语言中，对函数参数默认值描述正确的是？")])])])]),t("li",[t("a",{attrs:{href:"#✅c-输入输出io"}},[s._v("✅C++输入输出IO")])]),t("li",[t("a",{attrs:{href:"#_1-iostream-的设计初衷"}},[s._v("1.iostream的设计初衷")])]),t("li",[t("a",{attrs:{href:"#_2-iostream-的特点"}},[s._v("2.iostream的特点")])]),t("li",[t("a",{attrs:{href:"#✅c-高阶论题"}},[s._v("✅C++高阶论题")])]),t("li",[t("a",{attrs:{href:"#_1-c-惯用法"}},[s._v("1.C++惯用法")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-raii-资源获取即初始化"}},[s._v("1.1.RAII(资源获取即初始化)")])]),t("li",[t("a",{attrs:{href:"#_1-2-pimpl"}},[s._v("1.2.pImpl")])]),t("li",[t("a",{attrs:{href:"#_1-3-copy-and-swap"}},[s._v("1.3.copy and swap")])])])]),t("li",[t("a",{attrs:{href:"#_2-value-semantics-和-object-semantics"}},[s._v("2.value semantics和object semantics")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-值语义-value-semantics"}},[s._v("2.1.值语义（value semantics）")])]),t("li",[t("a",{attrs:{href:"#_2-2-对象语义-object-semantics"}},[s._v("2.2.对象语义（object semantics）")])]),t("li",[t("a",{attrs:{href:"#_2-3-优点缺点对比"}},[s._v("2.3.优点缺点对比")])])])]),t("li",[t("a",{attrs:{href:"#_3-c-惯用法和-value-semantics-组合拳"}},[s._v("3.C++惯用法和value semantics组合拳")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-c-的值语义是『双刃剑』"}},[s._v("3.1.C++的值语义是『双刃剑』")])]),t("li",[t("a",{attrs:{href:"#_3-3-问题-智能指针"}},[s._v("3.3.问题：智能指针？")])])])]),t("li",[t("a",{attrs:{href:"#_4-c-语言层面高度探讨"}},[s._v("4.C++语言层面高度探讨")])]),t("li",[t("a",{attrs:{href:"#_5-c-的编程范式"}},[s._v("5.C++的编程范式")])]),t("li",[t("a",{attrs:{href:"#_6-c-11、c-14、c-17以及c-20有什么区别呢"}},[s._v("6.c++11、c++14、C++17以及C++20有什么区别呢?")])]),t("li",[t("a",{attrs:{href:"#_7-c和c-在编译时-函数名会怎么变化-那如果是匿名空间呢"}},[s._v("7.C和C++在编译时,函数名会怎么变化,那如果是匿名空间呢?")])]),t("li",[t("a",{attrs:{href:"#_8-萃取-traits-技巧「模版的应用」"}},[s._v("8.萃取 traits 技巧「模版的应用」")])]),t("li",[t("a",{attrs:{href:"#_9-菱形继承「虚基础」"}},[s._v("9.菱形继承「虚基础」")])]),t("li",[t("a",{attrs:{href:"#🔋-参考资料"}},[s._v("🔋 参考资料")])]),t("li",[t("a",{attrs:{href:"#c-核心详解"}},[s._v("C++核心详解")])]),t("li",[t("a",{attrs:{href:"#✅『oob』基于对象的程序设计"}},[s._v("✅『OOB』基于对象的程序设计")])]),t("li",[t("a",{attrs:{href:"#_1-对比-class-struct-union-和-enum"}},[s._v("1.对比class/struct/union和enum")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-class"}},[s._v("1.1.class")])]),t("li",[t("a",{attrs:{href:"#_1-2-struct-『c-中』"}},[s._v("1.2.struct『C++中』")])]),t("li",[t("a",{attrs:{href:"#_1-3-union-『c-中』"}},[s._v("1.3.union『C++中』")])]),t("li",[t("a",{attrs:{href:"#_1-4-enum-『只有它不是特殊的类』"}},[s._v("1.4.enum『只有它不是特殊的类』")])])])]),t("li",[t("a",{attrs:{href:"#_2-类的『成员变量』和『非成员变量』⭐️"}},[s._v("2.类的『成员变量』和『非成员变量』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-成员变量"}},[s._v("2.1.成员变量")])]),t("li",[t("a",{attrs:{href:"#_2-2-非成员变量"}},[s._v("2.2.非成员变量")])])])]),t("li",[t("a",{attrs:{href:"#_3-类的『成员函数』和『非成员函数』⭐️"}},[s._v("3.类的『成员函数』和『非成员函数』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-成员函数"}},[s._v("3.1.成员函数")])]),t("li",[t("a",{attrs:{href:"#_3-2-非成员函数"}},[s._v("3.2.非成员函数")])])])]),t("li",[t("a",{attrs:{href:"#_4-big-three-讲解"}},[s._v("4.Big Three讲解")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-构造函数详解"}},[s._v("4.1.构造函数详解")])]),t("li",[t("a",{attrs:{href:"#_4-2-析构函数详解"}},[s._v("4.2.析构函数详解")])])])]),t("li",[t("a",{attrs:{href:"#_5-访问属性"}},[s._v("5.访问属性")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1-内部访问和对象访问"}},[s._v("5.1.内部访问和对象访问")])])])]),t("li",[t("a",{attrs:{href:"#_6-namespace-命名空间"}},[s._v("6.namespace命名空间")])]),t("li",[t("a",{attrs:{href:"#_7-其余"}},[s._v("7.其余")])]),t("li",[t("a",{attrs:{href:"#✅『oop』面向对象的程序设计"}},[s._v("✅『OOP』面向对象的程序设计")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[s._v("1.1.类型转换函数(类型转换函数-不等于-类型转换构造函数)")])])])]),t("li",[t("a",{attrs:{href:"#_1-辨析overload、override、overwrite⭐️『已解决』"}},[s._v("1.辨析Overload、Override、Overwrite⭐️『已解决』")]),t("ul",[t("li",[t("a",{attrs:{href:"#✅区分overload、overwrite和override"}},[s._v("✅区分Overload、Overwrite和Override")])]),t("li",[t("a",{attrs:{href:"#同一个class里面的成员函数加-不加virtual算不算重载"}},[s._v("同一个class里面的成员函数加/不加virtual算不算重载？")])]),t("li",[t("a",{attrs:{href:"#那下面这样的叫什么"}},[s._v("那下面这样的叫什么？")])])])]),t("li",[t("a",{attrs:{href:"#_2-多态与虚函数"}},[s._v("2.多态与虚函数")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-static-变量的说明"}},[s._v("2.1.static变量的说明")])]),t("li",[t("a",{attrs:{href:"#_2-2-虚函数相关"}},[s._v("2.2.虚函数相关")])]),t("li",[t("a",{attrs:{href:"#_2-2-虚函数能不能inline"}},[s._v("2.2.虚函数能不能inline")])])])]),t("li",[t("a",{attrs:{href:"#_3-『多态神器』-多态3条件"}},[s._v("3.『多态神器』-多态3条件")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-条件1和条件2❎『非多态』"}},[s._v("3.1.条件1和条件2❎『非多态』")])]),t("li",[t("a",{attrs:{href:"#_3-2-条件3❎『非多态』"}},[s._v("3.2.条件3❎『非多态』")])]),t("li",[t("a",{attrs:{href:"#_3-3-虚析构函数"}},[s._v("3.3.虚析构函数")])]),t("li",[t("a",{attrs:{href:"#_3-4-『添加作用域的调用』"}},[s._v("3.4.『添加作用域的调用』")])]),t("li",[t("a",{attrs:{href:"#_3-5-静态绑定的核心理解『易错难点』⭐️"}},[s._v("3.5.静态绑定的核心理解『易错难点』⭐️")])]),t("li",[t("a",{attrs:{href:"#✅上面是难点"}},[s._v("✅上面是难点")])]),t("li",[t("a",{attrs:{href:"#_3-6-const对象"}},[s._v("3.6.const对象")])])])]),t("li",[t("a",{attrs:{href:"#_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[s._v("4.构造函数（ctor）和析构函数（dtor）相关⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[s._v("4.1.C++ 构造函数和析构函数可以是虚函数嘛？")])]),t("li",[t("a",{attrs:{href:"#_4-2-构造函数中调用虚函数会怎么样"}},[s._v("4.2.构造函数中调用虚函数会怎么样？")])]),t("li",[t("a",{attrs:{href:"#_4-3-析构函数中调用虚函数会怎么样"}},[s._v("4.3.析构函数中调用虚函数会怎么样？")])])])]),t("li",[t("a",{attrs:{href:"#⭐️4-『运算符重载』详解"}},[s._v("⭐️4.『运算符重载』详解")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-重载的2种函数类型"}},[s._v("4.1.重载的2种函数类型")])])])]),t("li",[t("a",{attrs:{href:"#谈一谈null-0-nullptr"}},[s._v("谈一谈NULL，0，nullptr")])]),t("li",[t("a",{attrs:{href:"#✅杂谈"}},[s._v("✅杂谈")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-常量表达式"}},[s._v("1.常量表达式")])]),t("li",[t("a",{attrs:{href:"#_2-c-98关键字"}},[s._v("2.C++98关键字")])])])]),t("li",[t("a",{attrs:{href:"#✅常识-非面试"}},[s._v("✅常识-非面试")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-区分c-和c"}},[s._v("1.区分C++和C")])]),t("li",[t("a",{attrs:{href:"#如果使用brk-c-堆内存为什么不连续"}},[s._v("如果使用brk(). C++：堆内存为什么不连续？")])])])]),t("li",[t("a",{attrs:{href:"#引申问题-由new和仅在class上的对象或仅在stack上的对象-⭐️"}},[s._v("引申问题-由new和仅在class上的对象或仅在stack上的对象！⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-如何定义1个『只能』在『堆』上生成对象的类"}},[s._v("1.如何定义1个『只能』在『堆』上生成对象的类？")])]),t("li",[t("a",{attrs:{href:"#_2-如何定义1个『只能』在『-栈-』上生成对象的class"}},[s._v("2.如何定义1个『只能』在『栈』上生成对象的class？")])]),t("li",[t("a",{attrs:{href:"#追问-c-中-为了让某个class只能通过new来创建-那malloc为啥不可以"}},[s._v("追问：C++中，为了让某个class只能通过new来创建？那malloc为啥不可以？")])]),t("li",[t("a",{attrs:{href:"#追问-那c-里面的strcut也是只能用new-不能用malloc吗"}},[s._v("追问：那C++里面的strcut也是只能用new，不能用malloc吗？")])])])]),t("li",[t("a",{attrs:{href:"#c-如何实现多态"}},[s._v("C++如何实现多态？")])]),t("li",[t("a",{attrs:{href:"#静态函数可以加virtual吗"}},[s._v("静态函数可以加virtual吗？")])]),t("li",[t("a",{attrs:{href:"#new是线程安全的吗"}},[s._v("new是线程安全的吗？")])]),t("li",[t("a",{attrs:{href:"#gdb如何调试多线程"}},[s._v("gdb如何调试多线程？")])]),t("li",[t("a",{attrs:{href:"#book-cxx记忆手册"}},[s._v("📖CXX记忆手册")])]),t("li",[t("a",{attrs:{href:"#_1-运算符"}},[s._v("1.运算符")]),t("ul",[t("li",[t("a",{attrs:{href:"#不能重载的5个运算符记忆"}},[s._v("不能重载的5个运算符记忆")])]),t("li",[t("a",{attrs:{href:"#可以重载-但建议不要重载的运算符"}},[s._v("可以重载, 但建议不要重载的运算符")])])])]),t("li",[t("a",{attrs:{href:"#_2-什么是big-three-什么是big-five"}},[s._v("2.什么是big three，什么是big five")])])])]),t("p"),s._v(" "),t("p",[s._v("[toc]")]),s._v(" "),t("h2",{attrs:{id:"_1-运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-运算符"}},[s._v("#")]),s._v(" 1.运算符")]),s._v(" "),t("h3",{attrs:{id:"不能重载的5个运算符记忆"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不能重载的5个运算符记忆"}},[s._v("#")]),s._v(" 不能重载的5个运算符记忆")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("**百度**招聘考过\n")])])]),t("ul",[t("li",[s._v("1、第1个，也是我们常常忘记是运算符的"),t("code",[s._v("sizeof")])]),s._v(" "),t("li",[s._v("2、其他4个，记住只要挂"),t("code",[s._v(".")]),s._v("的运算符"),t("strong",[s._v("均不能被重载")])])]),s._v(" "),t("blockquote",[t("p",[s._v("第2点，参考自用户讨论：@"),t("a",{attrs:{href:"https://www.nowcoder.com/profile/2887214",target:"_blank",rel:"noopener noreferrer"}},[s._v("牛客2887214号"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("不能重载的总共五个：\n（"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v("（类成员访问运算符） \n（"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" .*"')]),s._v("（类成员指针访问运算符） \n（"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"::"')]),s._v("（域运算符） \n（"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"siezof"')]),s._v("（长度运算符） \n（"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" ?:"')]),s._v("（条件运算符）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"可以重载-但建议不要重载的运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可以重载-但建议不要重载的运算符"}},[s._v("#")]),s._v(" 可以重载, 但建议不要重载的运算符")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("`&&`和`||`很建议不要重载『会出点问题』\n")])])]),t("p",[s._v("1、因为，重载运算符，也就意味着靠函数重载来完成，操作数会作为『函数参数，传递』\n2、C++的『函数参数都会被求值，无法实现（短路规则）』")]),s._v(" "),t("h2",{attrs:{id:"_2-什么是big-three-什么是big-five"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是big-three-什么是big-five"}},[s._v("#")]),s._v(" 2.什么是big three，什么是big five")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("big three指的是\n")])])]),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("拷贝构造函数\n赋值构造函数\n\n析构函数（侯捷说还有构造函数，但是C++ primer这2种说法都有）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("big five指的是\n")])])]),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("copy 构造函数 + mov语意的拷贝构造函数\ncopy 赋值构造函数+ mov语意的赋值构造函数\n\n析构函数（侯捷说还有构造函数，但是C++ primer这2种说法都有）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);