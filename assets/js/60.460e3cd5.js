(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{347:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"内存对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存对齐"}},[s._v("#")]),s._v(" 内存对齐")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background: yellow">\n<font style="background:pink">\n<font style="background: MediumSpringGreen">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[s._v("#")]),s._v(" 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#目录"}},[s._v("目录")])]),t("li",[t("a",{attrs:{href:"#_0-参考资料『记忆』⭐️"}},[s._v("0.参考资料『记忆』⭐️")])]),t("li",[t("a",{attrs:{href:"#_1-内存对齐前述❎"}},[s._v("1.内存对齐前述❎")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-是否可以强制不内存对齐"}},[s._v("1.1.是否可以强制不内存对齐？")])])])]),t("li",[t("a",{attrs:{href:"#_2-前置-可移植性-基本类型的对齐数"}},[s._v("2.前置—可移植性(基本类型的对齐数)")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-记忆『核心』⭐️"}},[s._v("2.1.记忆『核心』⭐️")])])])]),t("li",[t("a",{attrs:{href:"#测试环境"}},[s._v("测试环境")])]),t("li",[t("a",{attrs:{href:"#_2-实验观察内存对齐❎"}},[s._v("2.实验观察内存对齐❎")])]),t("li",[t("a",{attrs:{href:"#_3-结构体内存对齐规则『核心』"}},[s._v("3.结构体内存对齐规则『核心』")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-3-自然对齐和规则1-基本类型对齐"}},[s._v("3.3.自然对齐和规则1：基本类型对齐")])]),t("li",[t("a",{attrs:{href:"#_3-2-规则对齐和规则2-struct-和-union-的数据成员对齐规则"}},[s._v("3.2.规则对齐和规则2：struct和union的数据成员对齐规则")])]),t("li",[t("a",{attrs:{href:"#_3-3-综合方法"}},[s._v("3.3.综合方法")])]),t("li",[t("a",{attrs:{href:"#_3-4-坑点"}},[s._v("3.4.坑点：")])])])]),t("li",[t("a",{attrs:{href:"#_5-杠筋"}},[s._v("5.杠筋？")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1-测试环境-推翻第2条规则-♻️"}},[s._v("5.1.测试环境（推翻第2条规则）♻️??")])])])]),t("li",[t("a",{attrs:{href:"#_3-典例解释"}},[s._v("3.典例解释")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-单个-struct-『good解释⭐️"}},[s._v("3.1.单个struct『Good解释⭐️")])]),t("li",[t("a",{attrs:{href:"#_3-2-单个-union-『复杂内存对齐分析-面试-』"}},[s._v("3.2.单个union『复杂内存对齐分析（面试）』")])]),t("li",[t("a",{attrs:{href:"#_3-3-单个位段"}},[s._v("3.3.单个位段")])]),t("li",[t("a",{attrs:{href:"#_3-4-数组和指针组合『难题』"}},[s._v("3.4.数组和指针组合『难题』")])])])]),t("li",[t("a",{attrs:{href:"#c-反汇编与逆向分析技术揭秘-内存对齐p207"}},[s._v("C++反汇编与逆向分析技术揭秘-内存对齐P207")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-假式-计算公式"}},[s._v("1.假式-计算公式")])]),t("li",[t("a",{attrs:{href:"#_1-1-空class"}},[s._v("1.1.空class")])]),t("li",[t("a",{attrs:{href:"#_1-2-静态数据成员"}},[s._v("1.2.静态数据成员")])]),t("li",[t("a",{attrs:{href:"#_1-3-内存对齐"}},[s._v("1.3.内存对齐")])]),t("li",[t("a",{attrs:{href:"#_2-总结上述"}},[s._v("2.总结上述")])])])]),t("li",[t("a",{attrs:{href:"#总结-内存对齐"}},[s._v("总结-内存对齐")])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("p",[t("strong",[s._v("2022年6月24日，星期五，于编译器公司")])]),s._v(" "),t("ul",[t("li",[s._v("总的来说，这类面试题，是不够严谨的，这个和具体的编译器实现有关。而编译器的实现又可能基于CPU啥的。\n"),t("ul",[t("li",[s._v("建议，面试的时候，自行#pragma pack(4)和8去进行考虑讲解")]),s._v(" "),t("li",[s._v("如果问到默认的对齐值，就说，和"),t("strong",[s._v("编译器版本")]),s._v("和"),t("strong",[s._v("OS")]),s._v("有关")])])])]),s._v(" "),t("h2",{attrs:{id:"_0-参考资料『记忆』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-参考资料『记忆』⭐️"}},[s._v("#")]),s._v(" 0.参考资料『记忆』⭐️")]),s._v(" "),t("ul",[t("li",[s._v("1.转载"),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5NTY1MjY0MQ==&mid=2650753100&idx=4&sn=10fb278995426d9c5bcc07309d39c6f1&chksm=befedd0289895414c5e3b3ed0a952d3a0438e15e85e992129773b349b8e8f9b8590c6fc9167a&mpshare=1&scene=23&srcid=1005yjd59tg3vG08SxTS9Rnm&sharer_sharetime=1601910589841&sharer_shareid=7d02bdfe8ee477ab2b773f2df63f3163#rd",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门（PS：此文章中有错误的地方，下面自行改正了）"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("2.CSDN官方转载，"),t("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MjM5MjAwODM4MA==&mid=2650793413&idx=3&sn=c0f6071b066b36440987dcbca4a64a91&chksm=bea7941689d01d00c5a53fb09fdb22ff14d056534bbec112d10847f3c3562bb81a3bdcb5ebd9&mpshare=1&scene=23&srcid=03070oITnw7pdgZ3yeCUirqz&sharer_sharetime=1615116737628&sharer_shareid=7d02bdfe8ee477ab2b773f2df63f3163#rd",target:"_blank",rel:"noopener noreferrer"}},[s._v("技术让梦想更伟大"),t("OutboundLink")],1),s._v("『很不错』")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("记忆下面的核心：已知"),t("code",[s._v("#pragma pack(n)就能全部解决")])]),s._v(" "),t("ul",[t("li",[s._v("1』32位编译器"),t("code",[s._v("#pragma pack(4)")]),s._v("，64位编译"),t("code",[s._v("#pragma pack(8)")])]),s._v(" "),t("li",[s._v("2、3.结构体总大小为最大对齐数的整数倍"),t("font",{staticStyle:{background:"yellow"}},[s._v("（max（各个成员变量的"),t("strong",[s._v("由（规则2）获得的对齐数大小")]),s._v("））")]),s._v("\n（每个成员变量都有自己的对齐数）『是的，这个才是核心！后边我对有个测试的判断，写错了』")],1),s._v(" "),t("li",[s._v("比如理解就是\n"),t("ul",[t("li",[t("code",[s._v("int")]),s._v("类型在"),t("code",[s._v("16")]),s._v("位机器上，是2个字节和2个字节『而不是4个字节』")]),s._v(" "),t("li",[t("code",[s._v("double")]),s._v("在"),t("code",[s._v("32")]),s._v("位机器上，是4个字节和4个字节『而不是8个字节』（"),t("strong",[s._v("2022年，6月24于编译器公司觉得，不对！）")])])])]),s._v(" "),t("li",[s._v("注意："),t("font",{staticStyle:{background:"yellow"}},[s._v("讲字节对齐的时候，不告知CPU位数和操作系统和编译器位数就是耍流氓！")])],1)])],1)]),s._v(" "),t("h2",{attrs:{id:"_1-内存对齐前述❎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存对齐前述❎"}},[s._v("#")]),s._v(" 1.内存对齐前述❎")]),s._v(" "),t("p",[s._v("原因:"),t("font",{attrs:{color:"red"}},[s._v("现代的计算机中，有一个内存对齐的要求")])],1),s._v(" "),t("p",[t("b",[s._v("PS：现代计算机中内存空间都是按照字节划分的，所以图示中一个黑色的长条代表一个字节。 ")])]),s._v(" "),t("p",[s._v("例:有些平台"),t("b",[s._v("每次读都是从偶地址")]),s._v("开始的  『笔者认为，也可以是从2的倍数，从4的倍数，8的倍数开始。。\n如果一个int型（假设为32位系统）")]),s._v(" "),t("ul",[t("li",[s._v("1）如果他存放在"),t("b",[s._v("偶地址")]),s._v("开始的地方，那么一个CPU读的周期，就可以读出这个32bit的int")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/2020_06_08_1.png",alt:"2020_06_08_1"}})]),s._v(" "),t("ul",[t("li",[s._v("2）如果他存放在"),t("b",[s._v("奇地址")]),s._v("开始的地方，那么我们要是想要读取，蓝色的部分的int，我们的CPU需要读两个红色的框框。在第一个4字节块,剔除不想要的字节（0地址）,然后从地址4开始读取下一个4字节块,同样剔除不要的数据（5，6，7地址）,最后将留下的两块数据合并放入寄存器。也就是说这种情况CPU需要2个读周期，并且对两次读出的结果的高低字节进行拼凑才能得到这个32位bit的数据。"),t("br"),s._v("\n很显然，这个在读取的效率上下降了很多。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/2020_06_08_2.png",alt:"2020_06_08_2"}})]),s._v(" "),t("p",[s._v("此处有疑惑")]),s._v(" "),t("ul",[t("li",[s._v("Q:难道就不能直接从那个奇地址开始读吗？")]),s._v(" "),t("li",[s._v("A:理论上讲，我们对任何类型的变量的访问可以从任何奇或者偶地址开始，这样是可以的。\n但是，我们的硬件在设计的时候，"),t("strong",[s._v("CPU")]),s._v("的底层访问实现的似乎就是这个，每次从偶地址开始读取。")])]),s._v(" "),t("p",[s._v("总的来说，内存对齐一般是由于以下原因：")]),s._v(" "),t("ul",[t("li",[s._v("1）"),t("b",[s._v("平台原因（移植原因）")]),s._v("：不是所有的硬件平台都能访问任意地址上的任意数据的；某些硬件平台只能在某些地址处取某些特定类型的数据，否则抛出硬件异常。（有的硬件的设计就是只支持从偶地址开始访问的）")]),s._v(" "),t("li",[s._v("2）"),t("b",[s._v("性能原因（根本原因）")]),s._v("：数据结构(尤其是栈)应该尽可能地在自然边界上对齐。原因在于，为了访问未对齐的内存，处理器需要作两次内存访问（前面我们的例子就是这样）；而对齐的内存访问仅需要一次访问。")]),s._v(" "),t("li",[s._v("我们要提高CPU访问内存数据的"),t("b",[s._v("效率")]),s._v("的问题。")]),s._v(" "),t("li",[s._v("计算机访问内存一般是以内存块为单位的，块的大小是地址对齐的。如4,8,16字节对齐等。")]),s._v(" "),t("li",[s._v("一般来说对齐是跟CPU位数及CPU特性有关的，具体的比如X86-64支持1,2,4,8字节对齐.所以里面的讲的对齐主要还是取决于C语言中数据类型的大小。\nPS："),t("b",[s._v("对齐值必须是2的幂次方")]),s._v("，如1，2，4，8，16。如果一个变量按n字节对齐，那么该变量的起始地址必须是n的倍数。\n每个"),t("b",[s._v("特定平台")]),s._v("上的编译器都有自己默认的“对齐系数”，可以通过设置"),t("code",[s._v("#pragma pack(n)")]),s._v("告诉编译器，是n字节对齐。")])]),s._v(" "),t("h3",{attrs:{id:"_1-1-是否可以强制不内存对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-是否可以强制不内存对齐"}},[s._v("#")]),s._v(" 1.1.是否可以强制不内存对齐？")]),s._v(" "),t("ul",[t("li",[s._v("可以，但是那样会导致CPU效率降低（X64的ABI文档里面也写了）")])]),s._v(" "),t("h2",{attrs:{id:"_2-前置-可移植性-基本类型的对齐数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-前置-可移植性-基本类型的对齐数"}},[s._v("#")]),s._v(" 2.前置—可移植性(基本类型的对齐数)")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("《Java核心技术卷1》说道："),t("strong",[s._v("与C和C++不同，Java规范中没有“依赖具体实现”的地方")]),s._v("！基本数据类型大小以及有关运算都做了明确的说明！")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Java中int永远是32位的整数")])]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("而"),t("code",[s._v("在C和C++中，int可能是16位整数、32位整数、也可能是『编译器提供商』指定的其他大小")]),s._v("。唯一的限制只是：int类型的大小不低于"),t("code",[s._v("short int")]),s._v("，并且不能高于"),t("code",[s._v("long int")])])],1),s._v(" "),t("li",[s._v("在Java中，数据类型具有固定的大小、这消除了代码移植时令人头痛的问题")])])])]),s._v(" "),t("h3",{attrs:{id:"_2-1-记忆『核心』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-记忆『核心』⭐️"}},[s._v("#")]),s._v(" 2.1.记忆『核心』⭐️")]),s._v(" "),t("p",[t("code",[s._v("int，long int，short int")]),s._v(" 的宽度和"),t("strong",[s._v("机器字长")]),s._v("及"),t("strong",[s._v("编译器")]),s._v("有关,但一般都有以下规则（ANSI/ISO制订的）")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("sizeof(short int) <= sizeof(int)")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("sizeof(int) <= sizeof(long int)")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("short int")]),s._v(" 至少应为16位（2字节）")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("long int")]),s._v(" 至少应为32位")])])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("数据类型")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("16位编译器")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("32位编译器")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("64位编译器")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("char")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("1字节")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("『指针』char*")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("2字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("8字节")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("short int")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("2字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("2字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("2字节")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("int")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("2字节")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("4字节")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("4字节")])])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("unsigned int")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("2字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("float")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("double")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("8字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("8字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("8字节")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("long")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("4字节")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("4字节")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("8字节")])])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("long long")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("8字节")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("8字节")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("8字节")])])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("unsigned long")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("4字节")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("8字节")])])])]),s._v(" "),t("h2",{attrs:{id:"测试环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试环境"}},[s._v("#")]),s._v(" 测试环境")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentosLinux ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# uname -m")]),s._v("\nx86_64\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentosLinux ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# uname -a")]),s._v("\nLinux CentosLinux "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v(".0-1127.19.1.el7.x86_64 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("cpu信息"),t("code",[s._v("lscpu")])])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("Architecture:          x86_64\nCPU op-mode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":        "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("-bit, "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v("-bit\nByte Order:            Little Endian\nCPU"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":                "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nOn-line CPU"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" list:   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nThread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" per core:    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nCore"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" per socket:    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nSocket"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":             "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nNUMA node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":          "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nVendor ID:             GenuineIntel\nCPU family:            "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\nModel:                 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("94")]),s._v("\nModel name:            Intel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("R"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Xeon"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("R"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" Gold "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6148")]),s._v(" CPU @ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".40GHz\nStepping:              "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nCPU MHz:               "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2394.374")]),s._v("\nBogoMIPS:              "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4788.74")]),s._v("\nHypervisor vendor:     KVM\nVirtualization type:   full\nL1d cache:             32K\nL1i cache:             32K\nL2 cache:              4096K\nL3 cache:              28160K\nNUMA node0 CPU"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nFlags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc rep_good nopl eagerfpu pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm mpx avx512f avx512dq rdseed adx smap avx512cd avx512bw avx512vl xsaveopt xsavec xgetbv1 arat\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("h2",{attrs:{id:"_2-实验观察内存对齐❎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实验观察内存对齐❎"}},[s._v("#")]),s._v(" 2.实验观察内存对齐❎")]),s._v(" "),t("p",[s._v("例题5：（分析下面在32位编译环境的程序）")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//要是不加#pragma pack(2)，则是默认4字节对齐，我们其实可以看做#pragma pack(4)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出为6   //因为加了#pragma pack(2)，根据规则2可以知道也是6")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"_3-结构体内存对齐规则『核心』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-结构体内存对齐规则『核心』"}},[s._v("#")]),s._v(" 3.结构体内存对齐规则『核心』")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Tips：C语言和C++允许你用预编译来干预内存对齐")]),s._v(" "),t("ul",[t("li",[s._v("比如用"),t("code",[s._v("#pragma pack")]),s._v("来干预。")])])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("不同平台上"),t("strong",[s._v("编译器")]),s._v("的 "),t("code",[s._v("pragma pack")]),s._v(" 默认值不同。而我们可以通过预编译命令"),t("code",[s._v("#pragma pack(n)")]),s._v(", n= 1,2,4,8,16来改变对齐系数。")])],1),s._v(" "),t("ul",[t("li",[s._v("现代计算机读取数据的时候，都是一次性读取一个内存块，比如4字节。（更准确来说是与数据线根数有关，所以说，其实现在都是64位的CPU，一次性能够读取8字节）")])])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("一般"),t("strong",[s._v("内存块")]),s._v("对齐方式『核心之一』：")])],1),s._v(" "),t("ul",[t("li",[s._v("16位CPU机器默认2字节对齐『"),t("code",[s._v("#pragma pack(2)")]),s._v("』")]),s._v(" "),t("li",[s._v("32位CPU机器默认4字节对齐『"),t("code",[s._v("#pragma pack(4)")]),s._v("』")]),s._v(" "),t("li",[s._v("64位CPU机器上的64位编译器默认8字节对齐『"),t("code",[s._v("#pragma pack(8)")]),s._v("』")])])])]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("内存对齐又分为『自然对齐』和『规则对齐』")])])]),s._v(" "),t("h3",{attrs:{id:"_3-3-自然对齐和规则1-基本类型对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-自然对齐和规则1-基本类型对齐"}},[s._v("#")]),s._v(" 3.3.自然对齐和规则1：基本类型对齐")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("指的是将对应变量类型存入对应地址值的内存空间，即数据要根据其数据类型存放到以其数据类型为倍数的地址处。")]),s._v(" "),t("ul",[t("li",[s._v("例如 char 类型占1个字节空间，1的倍数是所有数，因此可以放置在任何允许地址处")]),s._v(" "),t("li",[s._v("而int类型占4个字节空间，以4为倍数的地址就有0,4,8等。")])])]),s._v(" "),t("li",[t("p",[s._v("编译器会优先按照自然对齐进行数据地址分配。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("基本类型")]),s._v("的对齐值就是其"),t("code",[s._v("sizeof")]),s._v("获得值；")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("『坑点：比如"),t("code",[s._v("int在16位的编译器上是sizeof(int)=2")]),s._v("』")])],1)])]),s._v(" "),t("li",[t("p",[s._v("我们在进行基本类型对齐的同时，我们"),t("strong",[s._v("要尽量保证每个变量整体能放到1个或者2个内存块当中")]),s._v("，并且要尽可能的小。也就是能放在1个内存块，绝不放2个，否则会降低效率，比如先前图片中int放的位置。")])]),s._v(" "),t("li",[t("p",[s._v("对于标准数据类型，它的地址只要是它的长度的整数倍就行了。")])]),s._v(" "),t("li",[t("p",[s._v("非标准数据类型按下面的原则对齐：")])]),s._v(" "),t("li",[t("p",[s._v("数组：按照基本数据类型对齐，第一个对齐了后面的自然也就对齐了。")])]),s._v(" "),t("li",[t("p",[s._v("联合：按其包含的长度最大的数据类型对齐。")])]),s._v(" "),t("li",[t("p",[s._v("结构体：结构体中每个数据类型都要对齐。")])])]),s._v(" "),t("h3",{attrs:{id:"_3-2-规则对齐和规则2-struct和union的数据成员对齐规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-规则对齐和规则2-struct和union的数据成员对齐规则"}},[s._v("#")]),s._v(" 3.2.规则对齐和规则2："),t("code",[s._v("struct")]),s._v("和"),t("code",[s._v("union")]),s._v("的数据成员对齐规则")]),s._v(" "),t("ul",[t("li",[t("p",[t("b",[s._v("结构(struct)和联合(union))的数据成员")]),s._v("对齐规则：")]),s._v(" "),t("ul",[t("li",[s._v("在数据成员完成各自对齐之后，结构和联合"),t("strong",[s._v("本身")]),s._v("也要进行对齐。")]),s._v(" "),t("li",[s._v("1—"),t("b",[s._v("未改变默认规定对齐值")]),s._v("，对齐将按照结构或联合整体"),t("code",[s._v("sizeof")]),s._v("和"),t("code",[s._v("默认的机器字节对齐")]),s._v("中，比较小的那个进行;")]),s._v(" "),t("li",[s._v("2—"),t("b",[s._v("修改了默认规定对齐值")]),s._v("，比如"),t("code",[s._v("#pragma pack(n)")]),s._v("，对齐将按照"),t("code",[s._v("#pragma pack(n)")]),s._v("指定的数值和结构(或联合)"),t("code",[s._v("sizeof")]),s._v("获得值中"),t("b",[s._v("小")]),s._v("的那个进行;")])])]),s._v(" "),t("li",[t("p",[s._v("以『"),t("strong",[s._v("结构体")]),s._v("』为例就是在自然对齐后，编译器将对『自然对齐』产生的『空隙内存』填充无效数据，且填充后结构体占"),t("strong",[s._v("内存空间")]),s._v("为结构"),t("strong",[s._v("体内")]),s._v("占内存空间"),t("font",{staticStyle:{background:"yellow"}},[s._v("最大的数据类型成员变量")]),s._v("的整数倍。")],1)])]),s._v(" "),t("h5",{attrs:{id:"_1、难点1-double『测试坑』⭐️『其实说的就是-可移植性-』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、难点1-double『测试坑』⭐️『其实说的就是-可移植性-』"}},[s._v("#")]),s._v(" 1、难点1—double『测试坑』⭐️『其实说的就是“可移植性”』")]),s._v(" "),t("ul",[t("li",[s._v("我们知道32位处理器一次只能处理32位也就是4个字节的数据，而 double 是8字节数据类型，这要怎么处理呢？")]),s._v(" "),t("li",[s._v("『如果是"),t("strong",[s._v("64位处理器")]),s._v("，8字节数据可以一次处理完毕』，而在32位处理器下，为了也能处理 double8 字节数据，在处理的时候将"),t("strong",[s._v("会把 double "),t("font",{staticStyle:{background:"yellow"}},[s._v("拆分")]),s._v("成两个4字节数进行处理")],1),s._v("，从这里就会出现一种情况如下：")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("test_32")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("这个结构体在32位下所占内存空间为12字节，只能拆分成两个4字节进行处理，所以这里规则对齐将判定该结构体最大数据类型长度为4字节，因此总长度为4字节的整数倍，也就是12字节。")]),s._v(" "),t("li",[s._v("这个结构体在64位环境下所占内存空间为16字节，而64位判定最大为8字节，所以结果也是8字节的整数倍：16字节。这里的结构体中的double没有按照自然对齐放置到理论上的8字节倍数地址处，我认为这里编译器也有根据规则对齐做出相应的优化，节省了4个多余字节")])]),s._v(" "),t("p",[s._v("测试代码如下：环境『Linux64位』")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("test_32")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输入是16")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//8")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("p",[s._v("更改字节对齐之后『反向知晓，"),t("font",{staticStyle:{background:"yellow"}},[s._v("64位Linux的g++默认对齐数是8字节")]),s._v("』")],1),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pack")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("test_32")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test_32"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输入是12")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("blockquote",[t("p",[s._v("我的猜想：")]),s._v(" "),t("p",[s._v("1、默认字节对齐的本质：CPU一次性寻址的字节长度")]),s._v(" "),t("p",[s._v("2、自然对齐中min(默认的对齐数，这个基本类型的字节数)『设置4字节对齐之后，看到了，本猜想正确』")]),s._v(" "),t("p",[s._v("3、本次测试，好像推翻了『规则对齐。。。。")]),s._v(" "),t("p",[s._v("规则对齐改为？？规则对齐，取我们实际上》》》》。。。不清楚")]),s._v(" "),t("p",[s._v("我觉得可这么想，由于min(4，double)获得的是4，所以在自然对齐的时候，我们被迫将double分成两半")]),s._v(" "),t("p",[s._v("然后，规则对齐的时候，虽然结构体中最大显然是8，应该是8的倍数，但是被『编译器优化了』觉得后面的『补充不需要了，所以，才采取的12，而不是16，")]),s._v(" "),t("p",[s._v("进一步猜测："),t("font",{staticStyle:{background:"yellow"}},[s._v("补全空格，只补充中间的，不补充最末尾的？『这个猜想，和下面的黄色部分，我觉得是对的，模型建立完毕』")])],1)]),s._v(" "),t("p",[s._v("修正知道：对齐长度『长于』struct中的类型长度『最长』的值时,设置的对齐长度等于无用")]),s._v(" "),t("ul",[t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("故当我们将 #pragma pack 的n值小于『所有数据成员长度』的时候，结果将改变。")])],1)]),s._v(" "),t("li",[t("p",[s._v("或许上面就是，我们使用pack(4)之后是12的原因？？")])])]),s._v(" "),t("h5",{attrs:{id:"_2、数组『1个易错』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、数组『1个易错』"}},[s._v("#")]),s._v(" 2、"),t("strong",[s._v("数组")]),s._v("『1个易错』")]),s._v(" "),t("ul",[t("li",[s._v("对齐值为："),t("strong",[s._v("min(数组元素类型，编译器默认对齐长度/修改后)")]),s._v("。")]),s._v(" "),t("li",[s._v("易错：数组对齐的长度是按照『数组成员类型』长度来比对的")]),s._v(" "),t("li",[s._v("但数组中的元素是连续存放，存放时还是按照数组实际的长度。如char t[9]，对齐长度为1，实际占用连续的9byte。然后根据下一个元素的对齐长度决定在下一个元素之前填补多少byte")])]),s._v(" "),t("h5",{attrs:{id:"_3、嵌套的结构体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、嵌套的结构体"}},[s._v("#")]),s._v(" 3、"),t("strong",[s._v("嵌套的结构体")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对于B结构体在A中的对齐长度为：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//min(\tB结构体的对齐长度\t,\t编译器默认对齐长度/修改后\t)")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"_3-3-综合方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-综合方法"}},[s._v("#")]),s._v(" 3.3.综合方法")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("#pragma pack")]),s._v("可以修改，『编译器默认对齐数』，修改之后，下面的那个对齐规则一律换成改后的！")])]),s._v(" "),t("h4",{attrs:{id:"_1、首先『自然对齐』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先『自然对齐』"}},[s._v("#")]),s._v(" 1、首先『自然对齐』")]),s._v(" "),t("ul",[t("li",[s._v("1.第1个"),t("strong",[s._v("数据成员")]),s._v("在『"),t("strong",[s._v("结构")]),s._v("(struct)/"),t("strong",[s._v("联合")]),s._v("(union)』变量offset偏移量为0 的地址处，也就是第一个成员必须从头开始。『原因：很显然，1,2,4,8的共同的倍数都是0，因为0乘以任何数都是0』")]),s._v(" "),t("li",[s._v("2.其他"),t("b",[s._v("成员变量")]),s._v("要对齐到某个数字（对齐数）的整数倍的地址处。对齐数为『编译器默认的对齐数』与该成员大小中的较小值"),t("font",{staticStyle:{background:"yellow"}},[s._v("（min（编译器默认对齐数，成员变量大小））")]),s._v("。『自然对齐，审核正确』")],1),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("Linux中gcc和g++编译器，32位默认对齐数是4字节对齐。64位默认字节对齐数是8字节对齐。")]),s._v("（后续有证明，注意，参考的“脚本之家”那个有误）此外默认对齐数可以通过#pragma pack（）修改，但修改只能设置成1，2，4，8，16。")],1)]),s._v(" "),t("h4",{attrs:{id:"_2、然后『规则对齐』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、然后『规则对齐』"}},[s._v("#")]),s._v(" 2、然后『规则对齐』")]),s._v(" "),t("ul",[t("li",[s._v("3."),t("b",[s._v("结构体总大小")]),s._v("为最大对齐数的整数倍"),t("font",{staticStyle:{background:"yellow"}},[s._v("（max（各个成员变量的由（规则2）获得的对齐数大小））")]),s._v("。（每个成员变量都有自己的对齐数）『规则对齐，应该错误，应该不是由规则2获得的，而是直接所以成员变量』")],1),s._v(" "),t("li",[s._v("4.如果嵌套结构体，被嵌套的结构体对齐到『自己的最大对齐数』的整数倍处，（"),t("strong",[s._v("其实就是，我们将这个结构体也看作1个普通的类型 变量")]),s._v('，这个思想有的像『递归』的定义『『『如果一个结构里有某些结构体成员，则结构体成员要从其内部"最宽'),t("strong",[s._v("基本类型")]),s._v('成员"的整数倍地址开始存储』』』）结构体的整体大小就是所有最大对齐数（包含嵌套结构体的对齐数）的整数倍。')])]),s._v(" "),t("blockquote",[t("p",[s._v("其他：可借助，"),t("font",{staticStyle:{background:"yellow"}},[s._v("C语言头文件中"),t("code",[s._v("#include<stddef.h>")]),s._v("中函数"),t("code",[s._v("offsetof")]),s._v("观察现象")])],1)]),s._v(" "),t("h3",{attrs:{id:"_3-4-坑点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-坑点"}},[s._v("#")]),s._v(" 3.4.坑点：")]),s._v(" "),t("ul",[t("li",[s._v("结构体中union等，要是没有实例化，并且没有其他元素，那么不用算他占的大小\n"),t("ul",[t("li",[s._v("如果，仅仅只有它，需要算1个字节，毕竟如果不算，那就不好表述struct了 『类似问，空class是多大』")])])])]),s._v(" "),t("h2",{attrs:{id:"_5-杠筋"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-杠筋"}},[s._v("#")]),s._v(" 5.杠筋？")]),s._v(" "),t("h3",{attrs:{id:"_5-1-测试环境-推翻第2条规则-♻️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-测试环境-推翻第2条规则-♻️"}},[s._v("#")]),s._v(" 5.1.测试环境（推翻第2条规则）♻️??")]),s._v(" "),t("ul",[t("li",[s._v("64位的CPU")]),s._v(" "),t("li",[s._v("64位的OS，装的64位的DevC++「无伤大雅」")]),s._v(" "),t("li",[s._v("但是编译器选择"),t("code",[s._v("DevC++ 32bit Release版本")])]),s._v(" "),t("li",[s._v("运行环境，还是在这个64位的机器上")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("xx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" _x1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" _x2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" _x3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" _x4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" _x5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" xx"),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),s._v("_x5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_x1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_x2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_x3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_x4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offsetof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("xx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("_x4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("测试")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("24\n0\n8\n12\n16\n17\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h4",{attrs:{id:"_5-1-1-『看似解释不通-』-如果按照先前的解释方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-『看似解释不通-』-如果按照先前的解释方式"}},[s._v("#")]),s._v(" 5.1.1.『看似解释不通？』，如果按照先前的解释方式:")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("_x1 对齐数 min(long long,4)=4   0-7\n_x2 对齐数 min(char,4)=1\t\t8\n_x3 对齐数 min(int,4)=4\t\t\t12-15\n_x4 对齐数 min(char,4)=1\t\t16-17\t（易错点，注意是char，而不是2个char）\n整体字节对齐\nmax(4,1,4,1)=4\n那么20字节就OK了，但是这样不对？？？？为什么？？『我的解释在后边！！』\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h4",{attrs:{id:"_5-1-2-最新解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-最新解释"}},[s._v("#")]),s._v(" 5.1.2.最新解释")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("_x1 对齐数 min(long long,4)=4   0-7\n_x2 对齐数 min(char,4)=1\t\t8\n_x3 对齐数 min(int,4)=4\t\t\t12-15\n_x4 对齐数 min(char,4)=1\t\t\t16-17\n\n整体字节对齐\nmax(long long,char ,int , char)=8\n那么24字节才OK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("结构体的最终大小必须是结构体最大简单类型的整数倍？？？")]),s._v(" "),t("li",[s._v("A：2021年7.12解释：")]),s._v(" "),t("li",[s._v("并不是的，我的理解是由于CPU是64位的，所以还是默认"),t("code",[s._v("#pragma pack(8)")]),s._v("，编译器说32位也没用。")]),s._v(" "),t("li",[s._v("『原因：你如果在前面进行强制的"),t("code",[s._v("#pragma pack(4)")]),s._v("，你就发现，答案是20而不是24，所以，我猜测这个是CPU的原因』")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("CPU的位数很重要，或许决定了"),t("code",[s._v("#pragma pack()")]),s._v("的数字")])],1)]),s._v(" "),t("h4",{attrs:{id:"_5-1-3-alignof好的测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-alignof好的测试"}},[s._v("#")]),s._v(" 5.1.3.alignof好的测试")]),s._v(" "),t("ul",[t("li",[s._v("alignof : 获取地址对齐的大小，POD里面最大的内存对其的大小。")]),s._v(" "),t("li",[s._v("C 的 _Alignof 和 C++ 的 alignof 可以获得类型的对齐。")])]),s._v(" "),t("p",[s._v("C语言中的"),t("code",[s._v("_Alignof")]),s._v("的"),t("a",{attrs:{href:"https://cloud.tencent.com/developer/section/1009082",target:"_blank",rel:"noopener noreferrer"}},[s._v("对齐"),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[s._v("环境64位CPU，64位编译器")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("node")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//char ss;")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("temp")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\tt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ncout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"alignof(node):"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alignof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ncout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//alignof(node):8")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//16")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("如果加上"),t("code",[s._v("char ss;")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//alignof(node):8")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//24")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_3-典例解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-典例解释"}},[s._v("#")]),s._v(" 3.典例解释")]),s._v(" "),t("h3",{attrs:{id:"_3-1-单个struct『good解释⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-单个struct『good解释⭐️"}},[s._v("#")]),s._v(" 3.1.单个"),t("code",[s._v("struct")]),s._v("『Good解释⭐️")]),s._v(" "),t("h4",{attrs:{id:"_3-1-1-可移植性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-可移植性"}},[s._v("#")]),s._v(" 3.1.1.可移植性")]),s._v(" "),t("ul",[t("li",[s._v("参考例题"),t("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/ac4a46ee80b84313bb95307887ffb6c1",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("在一个"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("位的机器，以下结构由于边界对齐浪费了多少空间（）\n复制代码\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n正确答案"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" D   你的答案"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("D")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("正确"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("解释：")]),s._v(" "),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("由于"),t("strong",[s._v("可移植性")]),s._v("导致："),t("code",[s._v("16位")]),s._v("的机器上默认是"),t("strong",[s._v("2字节对齐『"),t("code",[s._v("#pragma pack(2)")]),s._v("』")]),s._v("！那么该种机器中"),t("code",[s._v("int")]),s._v("只用2Byte")]),s._v("，并不是什么int 在16位上要拆分为2个short的???『好像也不对，因为用后面的也能解释是2,！！！，但是《C++Primer》规定int最小是可以有16位』")],1),s._v(" "),t("li",[s._v("1、自然对齐，min(char，『"),t("code",[s._v("#pragma pack(2)")]),s._v("』)=1，所以a是1个字节放在[0,0]")]),s._v(" "),t("li",[s._v("2、自然对齐，min（int（注意，此机器上是2），『"),t("code",[s._v("#pragma pack(2)")]),s._v("』）=2，所以放在[2,3]")]),s._v(" "),t("li",[s._v("3、自然对齐，min(char,『"),t("code",[s._v("#pragma pack(2)")]),s._v("』)=1，所以c是1个字节放在[4,4]")]),s._v(" "),t("li",[s._v("4、规则对齐，是max(1,2,1)=2,所以是2的倍数，最接近是6，就是[0,5]\n然后，char+int（此机器上是2）+char=6个字节\n"),t("ul",[t("li",[s._v("8-6=2个字节浪费")])])])]),s._v(" "),t("h4",{attrs:{id:"_3-1-2-面试记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-面试记录"}},[s._v("#")]),s._v(" 3.1.2.面试记录")]),s._v(" "),t("ul",[t("li",[s._v("测试环境『64位编译器，，我觉得默认是64位CPU』")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 你必须定义一个 `main()` 函数入口。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//测试环境是：64位gcc编译器下输出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" test\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("cc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//徐晃一枪，没有变量被定义，仅仅是“声明”")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("p",[s._v("64位gcc下输出")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("解释16原因：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("64位的gcc编译器下对齐是『"),t("code",[s._v("#pragma pack(8)")]),s._v(" 』")])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[t("strong",[s._v("坑点")]),s._v("：union 没有初始化，但是struct中还有其他成员，我们就可以不用给它分配空间来占位置『如果只有它，我们需要1来占位』")])],1)]),s._v(" "),t("li",[t("p",[t("code",[s._v("min（int(4) , 『#pragma pack(8)』）")]),s._v("  =4字节对齐，int 占据前4个")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("min（short(2),『#pragma pack(8)』）")]),s._v("= 2字节对齐，short仅接着据2『后面，我们发现还要填补充』")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("min（int(4) , 『#pragma pack(8)』）")]),s._v("  =4字节对齐，但是此时开始的位置不是4的倍数！『所以给前面的填pack』然后int 占据4个")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("min（char(1) , 『#pragma pack(8)』）")]),s._v("  =1字节对齐，char紧接着占据1个  『后面，我们发现还要填补充』")]),s._v(" "),t("ul",[t("li",[s._v("这个时候，我们发现，获得的是13个字节")])])]),s._v(" "),t("li",[t("p",[s._v("接着，结构体总大小进行对齐『我们需要采用前面弄到的")]),s._v(" "),t("ul",[t("li",[s._v("max（4,2,4,1）=4发现，最大对齐数是4")]),s._v(" "),t("li",[s._v("那么，我们知道最近的是16")])])])]),s._v(" "),t("p",[s._v("解释24的原因：")]),s._v(" "),t("ul",[t("li",[s._v("64位的gcc编译器下对齐是『"),t("code",[s._v("#pragma pack(8)")]),s._v(" 』")])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("自然对齐")]),s._v(" "),t("th",[s._v("占用的大小")]),s._v(" "),t("th",[s._v("是否有补丁")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("min（double(8) , 『#pragma pack(8)』）")]),s._v("  =8字节对齐")]),s._v(" "),t("td",[s._v("double占据前8个")]),s._v(" "),t("td",[s._v("0")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("min（short(2),『#pragma pack(8)』）")]),s._v("= 2字节对齐")]),s._v(" "),t("td",[s._v("short仅接着据2『后面，我们发现还要填补充』")]),s._v(" "),t("td",[s._v("2")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("min（int(4) , 『#pragma pack(8)』）")]),s._v("  =4字节对齐，")]),s._v(" "),t("td",[s._v("但是此时开始的位置不是4的倍数！『所以给前面的填pack』然后int 占据4个")]),s._v(" "),t("td",[s._v("0")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("min（char(1) , 『#pragma pack(8)』）")]),s._v("  =1字节对齐")]),s._v(" "),t("td",[s._v("char紧接着占据1个  『后面，我们发现还要填补充』")]),s._v(" "),t("td")])])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("这个时候，我们发现，获得的是13个字节")])]),s._v(" "),t("li",[t("p",[s._v("接着，结构体总大小进行对齐『我们需要采用前面弄到的表格中第1列的值来求max』")]),s._v(" "),t("ul",[t("li",[s._v("max（4,2,4,1）=4发现，最大对齐数是4")]),s._v(" "),t("li",[s._v("那么，我们知道最近的是16")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-2-单个union『复杂内存对齐分析-面试-』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-单个union『复杂内存对齐分析-面试-』"}},[s._v("#")]),s._v(" 3.2.单个"),t("code",[s._v("union")]),s._v("『复杂内存对齐分析（面试）』")]),s._v(" "),t("ul",[t("li",[s._v("测试环境『64位编译器，，或许默认64位CPU』")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("one")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1->内存对齐（4） ")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" test\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//没有实例化，不用管 ")]),s._v("\n\t\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" k"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//32位机器 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("two")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" test\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("demo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("three")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" test\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" aa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" bb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("four")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("_four"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sizeof(long)=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tone _one"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_one"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ttwo _two"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_two"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tthree _three"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_three"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_four"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br")])]),t("ul",[t("li",[s._v("测试环境32位CPU")]),s._v(" "),t("li",[s._v("『例子很好』题目"),t("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/412ee424b496435095eafc8918ec0b56?orderByHotValue=1&page=1&onlyReference=false",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ml"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" m2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" m3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" uu\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" ul"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" u2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" ua"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" myaa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n问"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("位机器下"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n答："),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("解释：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("联合体的解释：")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("min( char(1), #pragma pack(4) )")]),s._v("=1，我们的u1的5个元素，依次放到[0-4]")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("min( int(4), #pragma pack(4) )")]),s._v("=4，我们的u2的2个元素，依次从[0-7]『注意，是从头开始！』")])]),s._v(" "),t("li",[t("p",[s._v("然后，我们发现，最长的占用了8个Byte")]),s._v(" "),t("ul",[t("li",[s._v("接下来：规则对齐，"),t("code",[s._v("max(1,4)")]),s._v("=4，发现8是合理的，那么就占用8『注意，这个union整体的对齐数就是规则对齐数得到的——4『不要相成是8哈！！容易错』』")])])]),s._v(" "),t("li",[t("p",[s._v("union外边的")]),s._v(" "),t("ul",[t("li",[s._v("int m1  4个")]),s._v(" "),t("li",[s._v("char m2 1个")]),s._v(" "),t("li",[s._v("float m3 4个\n按照规则2和3，我们要按照默认的4字节对齐来对这些在结构体中重排列\nm1  offset=0-3\nm2\toffset=4\noffset=5-7不用，但是占领\nm3\toffset=8-11\nunion\toffset=12-19\n总共，占用5个内存块，一个20个字节。")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-3-单个位段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-单个位段"}},[s._v("#")]),s._v(" 3.3.单个位段")]),s._v(" "),t("ul",[t("li",[s._v("可能嵌入式和网络编程中会用到这种用法：位段（也叫位域）一种特殊的类结构体语法")])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sizeof")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出4")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h4",{attrs:{id:"问题-sizeof-long-是4还是8的不同是由不同编译器决定的-还是操作系统的位数-还是电脑的位数-还是c的标准"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题-sizeof-long-是4还是8的不同是由不同编译器决定的-还是操作系统的位数-还是电脑的位数-还是c的标准"}},[s._v("#")]),s._v(" 问题：sizeof（long)是4还是8的不同是由不同编译器决定的，还是操作系统的位数，还是电脑的位数，还是C的标准")]),s._v(" "),t("ul",[t("li",[s._v("有人回答：这个是由编译器决定的，有的是32位编译器，有的是64位编译器，有的是标准C编译器，有的是C++编译器，都有可能不同")]),s._v(" "),t("li",[s._v("『正确吗？？？』")])]),s._v(" "),t("h3",{attrs:{id:"_3-4-数组和指针组合『难题』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数组和指针组合『难题』"}},[s._v("#")]),s._v(" 3.4.数组和指针组合『难题』")]),s._v(" "),t("ul",[t("li",[s._v("题目"),t("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/8f3ce8a749f34ae59b2f0efc46d3ace9",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送口"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("以下代码打印的结果是（假设运行在 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" 位计算机上）：\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("st_t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pdata"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" errstr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("st_t")]),s._v(" st"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("st"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("esstr"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("“"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("d”"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("st"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//题目来自——牛客网")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("//上面这道题，我们暂时不分析最后的结果，我们只分析在64位的机器下的这个结构体占用的字节。")])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("因为是64位环境下，所以默认对齐方式是8字节为一个内存块")])],1)])]),s._v(" "),t("p",[t("code",[s._v("int status;")]),s._v("虽然int只占用4个 由于后面的指针八个字节放不下 填补不了空位 所以对其要八个字节(后面的4个为对齐位）\n"),t("code",[s._v("short *pdata;")]),s._v("这个指针会占用8个字节"),t("br"),s._v(" "),t("code",[s._v("char errstr[32];")]),s._v(" 占用32个字节")]),s._v(" "),t("ul",[t("li",[s._v("所以一共占用 8+8+32=48个字节")])]),s._v(" "),t("p",[t("code",[s._v("char *p=(char *)(st[2].esstr+32)")]),s._v("，p实际指向了st[3]"),t("br"),s._v("\n则"),t("code",[s._v("p-(char *)(st))")]),s._v("，即为"),t("code",[s._v("&st[3]-&st[0]")]),s._v(",占用空间为3个结构体的大小，即3*48=14")]),s._v(" "),t("h2",{attrs:{id:"c-反汇编与逆向分析技术揭秘-内存对齐p207"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-反汇编与逆向分析技术揭秘-内存对齐p207"}},[s._v("#")]),s._v(" C++反汇编与逆向分析技术揭秘-内存对齐P207")]),s._v(" "),t("p",[s._v("Q1：为什么在class中不能定义自身的对象呢？")]),s._v(" "),t("p",[s._v("因为class需要在申请内存的过程中计算出自身的实际大小，以用于实例化。（反汇编代码中体现了）")]),s._v(" "),t("p",[s._v("这样就导致：如果在class中定义了自身的对象，在计算各数据成员的长度时，又会回到自身，这样就形成了递归定义，而这个递归并没有出口，是一个无限的循环递归定义，综上不得行。")]),s._v(" "),t("p",[s._v("Q2：但是在class中能定义自身类型的指针")]),s._v(" "),t("p",[s._v("因为任何类型的指针在32位下所占的内存大小始终为4字节，等同于一个常量值，因此将其作为class的数据成员不会影响长度的计算。")]),s._v(" "),t("h3",{attrs:{id:"_1-假式-计算公式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-假式-计算公式"}},[s._v("#")]),s._v(" 1.假式-计算公式")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("对象长度 = sizeof(数据成员1) + sizeof(数据成员2) + ... + sizeof(数据成员n)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("表面看上面公式没有问题，但对象的大小计算远远没有这么简单。")]),s._v(" "),t("p",[s._v("即时class中没有继承和虚函数的定义，仍然有3种特殊情况能推翻此公式：")]),s._v(" "),t("h3",{attrs:{id:"_1-1-空class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-空class"}},[s._v("#")]),s._v(" 1.1.空class")]),s._v(" "),t("ul",[t("li",[s._v("1")])]),s._v(" "),t("p",[s._v("空类中没有任何数据成员，按照该公式计算得出的对象长度为0字节。类型长度为0，则此类的对象不占据内存空间。而实际情况是,空类的长度为1字节。如果对象"),t("strong",[s._v("完全不占用内存空间")]),s._v("，那么空类就无法取得实例对象的地址，"),t("strong",[s._v("this指针失效")]),s._v("，因此不能被实例化。")]),s._v(" "),t("p",[s._v("而类的定义是由"),t("strong",[s._v("成员数据")]),s._v("和"),t("strong",[s._v("成员函数")]),s._v("组成，"),t("strong",[s._v("在没有成员数据的情况下，还可以有成员函数")]),s._v("，因此仍然需要实例化，分配了1字节的空间用于类的实例化，这1字节的数据并没有被使用。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-静态数据成员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-静态数据成员"}},[s._v("#")]),s._v(" 1.2.静态数据成员")]),s._v(" "),t("p",[s._v("当"),t("strong",[s._v("类")]),s._v("中的"),t("strong",[s._v("数据成员")]),s._v("被修饰为静态时，对象的长度计算又会发生变化。")]),s._v(" "),t("p",[t("strong",[s._v("虽然")]),s._v("静态数据成员在类中被"),t("strong",[s._v("定义")]),s._v("，但它与静态局部变量类似，存放的位置和全局变量一致。")]),s._v(" "),t("p",[s._v("只是编译器"),t("strong",[s._v("增加")]),s._v("了"),t("strong",[s._v("作用域的检查")]),s._v("，在作用域之外不可见，同类对象将共同享有静态数据成员的空间，详细内容请参见9.3节。")]),s._v(" "),t("h3",{attrs:{id:"_1-3-内存对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-内存对齐"}},[s._v("#")]),s._v(" 1.3.内存对齐")]),s._v(" "),t("p",[s._v("总结：")]),s._v(" "),t("p",[s._v("由于存在内存对齐，所以要额外分析。")]),s._v(" "),t("p",[s._v("另外，各"),t("strong",[s._v("编译器厂商")]),s._v("的"),t("strong",[s._v("实现")]),s._v("也有所不同，应详细阅读相关文档。")]),s._v(" "),t("h4",{attrs:{id:"_1-3-1-结构体-成员-对齐值的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-结构体-成员-对齐值的问题"}},[s._v("#")]),s._v(" 1.3.1."),t("strong",[s._v("结构体（成员")]),s._v("）对齐值的问题")]),s._v(" "),t("ul",[t("li",[s._v("在为"),t("strong",[s._v("结构体")]),s._v("和"),t("strong",[s._v("类")]),s._v("中的数据成员分配内存时，结构体中的"),t("font",{staticStyle:{background:"yellow"}},[t("strong",[s._v("当前数据成员")])]),t("strong",[s._v("类型长度")]),s._v("为"),t("code",[s._v("M")]),s._v(",指定的对齐值为"),t("code",[s._v("N")]),s._v("，那么"),t("font",{staticStyle:{background:"yellow"}},[s._v("实际")]),s._v("对齐值为"),t("code",[s._v("q= min(M, N)")]),s._v("，其成员的地址安排在q的倍数上。如以下代码所示:")],1)]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("tagTEST")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" sshort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//应占2字节内存空间，假设所在地址为ox0012F74")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//应占4字节内存空间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("数据成员sShort的地址为0x0012FF74，类型为short，占2字节内存空间。"),t("strong",[s._v("VC++ 6.0指定的对齐值默认为8")]),s._v("，short 的长度为2，于是实际的对齐值取较小者2。所以，short 被分配在地址0x0012FF74处，此地址是2的倍数，可分配。此时，轮到为第二个数据成员分配内存了，如果分配在sShort后，应在地址0x0012FF76处，但第二个数据成员为int类型，占4字节内存空间，与"),t("strong",[s._v("指定的对齐值")]),s._v("比较后，"),t("strong",[s._v("实际对齐值")]),s._v("取int类型的长度4，而地址0x0012FF76不是4的倍数，需要插入两个字节填充，以满足对齐条件,因此第二个数据成员被定义在地址0x0012FF78处，如图9-2所示。")]),s._v(" "),t("h4",{attrs:{id:"_1-3-2-对齐值对-结构体整体-大小的影响"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-对齐值对-结构体整体-大小的影响"}},[s._v("#")]),s._v(" 1.3.2.对齐值对（结构体整体）大小的影响")]),s._v(" "),t("p",[s._v("上述示例讲到了"),t("strong",[s._v("结构体成员")]),s._v("对齐值的问题，现在讨论一下对齐值对"),t("strong",[s._v("结构体整体")]),s._v("大小的影响。如果按VC++ 6.0默认的8字节对齐，那么结构体的整体大小要能被8整除，如以下代码所示:")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" dDouble"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("所在地址"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("Ox0012PFO0"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("ox0012FFO8之间，占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("字节\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("\nnint"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("所在地址"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0012FF")]),s._v("O8"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0012FF")]),s._v("OC之间\n占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("字节\nshortsshort "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("所在地址"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0012FF")]),s._v("OC"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x0012FF10")]),s._v("之间\n占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("字节\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("但是，"),t("font",{staticStyle:{background:"MediumSpringGreen"}},[t("strong",[s._v("并非")]),s._v("设定了"),t("strong",[s._v("默认对齐值")]),s._v("就将"),t("strong",[s._v("结构体")]),s._v("的对齐值"),t("strong",[s._v("锁定")])]),s._v("。如果"),t("strong",[s._v("结构体")]),s._v("中的"),t("strong",[s._v("数据成员类型")]),t("font",{staticStyle:{background:"MediumSpringGreen"}},[s._v("最大值")]),s._v("为M，指定的对齐值为N，那么"),t("font",{staticStyle:{background:"MediumSpringGreen"}},[s._v("实际对齐值为"),t("code",[s._v("min(M, N)")])]),s._v("，如以下代码所示:")],1),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" cchar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("应占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("字节内存空间，如所在地址为Ox0012FFO0\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("应占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("字节内存空间\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" ashort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("应占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("字节内存空间\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("随后定义的数据成员sShort应该使用6字节的空数据对齐。")]),s._v(" "),t("p",[s._v("VC++ 6.0通过检查发现，结构中最大的类型为nInt数据，占4字节空间，于是"),t("strong",[s._v("将对齐值由8调整为4")]),s._v("，重新调整后，sShort 只需要填充2字节的空白数据就可以实现对齐。")]),s._v(" "),t("h4",{attrs:{id:"_1-3-3-修改默认的对齐值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-修改默认的对齐值"}},[s._v("#")]),s._v(" 1.3.3.修改默认的对齐值")]),s._v(" "),t("p",[s._v("既然有默认的对齐值，就可以在定义结构体时进行调整，VC++6.0中可使用预编译指令"),t("code",[s._v("#pragma pack(N)")]),s._v("来调整对齐大小。修改以上示例，调整对齐值为1，如以下代码所示:")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("pragma")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token expression"}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pack")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")])])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" cChar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("应占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("字节内存空间\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nInt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("应占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("字节内存空间\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" sshort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nI"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("应占"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("字节内存空间\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("使用"),t("strong",[s._v("pack修改对齐值")]),s._v("也"),t("strong",[s._v("并非一定会生效")]),s._v("，与"),t("strong",[s._v("默认对齐值")]),s._v("一样，都需要"),t("strong",[s._v("参考")]),s._v("==结构体中的数据成员类型==。")]),s._v(" "),t("ul",[t("li",[s._v("当设定的对齐值"),t("strong",[s._v("大于")]),s._v("结构体中的数据成员类型大小时，此对齐值同样是无效的。（显然）")]),s._v(" "),t("li",[s._v("对齐值的"),t("strong",[s._v("计算流程")]),s._v("换个说法是：将"),t("strong",[s._v("设定的对齐值")]),s._v("与结构体中最大的基本类型数据成员的长度进行比较,取两者之间的较小者。")])]),s._v(" "),t("h4",{attrs:{id:"_1-3-4-结构体-的数组成员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-结构体-的数组成员"}},[s._v("#")]),s._v(" 1.3.4.结构体（的数组成员）")]),s._v(" "),t("p",[s._v("当结构体中以"),t("strong",[s._v("数组")]),s._v("作为==成员==时，将"),t("font",{staticStyle:{background:"MediumSpringGreen"}},[s._v("根据"),t("strong",[s._v("数组元素")]),s._v("的长度计算对齐值")]),s._v("，而不是按数组的整体大小去计算,如以下代码所示:")],1),s._v(" "),t("h4",{attrs:{id:"_1-3-4-结构体-的结构体成员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-结构体-的结构体成员"}},[s._v("#")]),s._v(" 1.3.4.结构体（的结构体成员）")]),s._v(" "),t("p",[s._v("当结构体中出现"),t("strong",[s._v("结构体类型")]),s._v("的"),t("strong",[s._v("数据成员")]),s._v("时，不会将嵌套的结构体类型的整体长度参与到对齐值计算中，而是"),t("font",{staticStyle:{background:"MediumSpringGreen"}},[s._v("以嵌套定义的结构体（它本身最终）所"),t("strong",[s._v("使用")]),s._v("的"),t("strong",[s._v("对齐值")]),s._v("进行对齐")]),s._v("，如以下代码所示:")],1),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("tagone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" cchar"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//占1字节内存空间")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" cArray "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//占5字节内存空间")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" sshort"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//占2字节内存空间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("tagTwo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nInt "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//占4字节内存空间")]),s._v("\n    tagone one"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 占8字节内存空间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("在以上结构中，虽然"),t("strong",[s._v("tagOne")]),s._v("结构占8字节大小，但由于"),t("strong",[s._v("其对齐值为2")]),s._v("，因此tag Two结构体中的"),t("strong",[s._v("最大类型")]),s._v("便是 int，以4作为对齐值。所以，结构tagTwo的总大小并非以8字节对齐的16字节，而是以"),t("strong",[s._v("4字节对齐")]),s._v("的12字节。")]),s._v(" "),t("h3",{attrs:{id:"_2-总结上述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-总结上述"}},[s._v("#")]),s._v(" 2.总结上述")]),s._v(" "),t("ul",[t("li",[s._v("《C++反汇编与逆向分析技术揭秘》，P209-P212")])]),s._v(" "),t("blockquote",[t("p",[s._v("内存对齐步骤")])]),s._v(" "),t("ul",[t("li",[s._v("1、在为结构体和类中的"),t("strong",[s._v("数据成员")]),s._v("分配内存时，结构体中的"),t("strong",[s._v("当前数据成员类型长度M")]),s._v("，"),t("strong",[s._v("指定的对齐值为N")]),s._v("，那么实际对齐值为**==q=min(M , N)==**，其成员的地址安排在q的倍数上「P209」")]),s._v(" "),t("li",[s._v("2、讨论一下对齐值对"),t("strong",[s._v("结构体整体")]),s._v("大小的影响。并非设定了默认对齐值就将结构体的对齐值锁定。如果**==结构体中数据成员类型最大值为M=="),t("strong",[s._v("，"),t("strong",[s._v("指定的对齐值为N")]),s._v("，那么实际对齐值为")]),s._v("==min(M , N)==**「P210」")])]),s._v(" "),t("h2",{attrs:{id:"总结-内存对齐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-内存对齐"}},[s._v("#")]),s._v(" 总结-内存对齐")]),s._v(" "),t("ul",[t("li",[s._v("目标平台的cpu的32，64")]),s._v(" "),t("li",[s._v("目标平台的操作系统32，64")]),s._v(" "),t("li",[s._v("编译器本身的的32，64（毫无关系，编译器只完成把代码转换到目标cpu的任务，所以和编译器毫无关系\n"),t("ul",[t("li",[s._v("当然，编译器本身32位的话，如果是远古的32位，没有64位的cpu，那他生成的32位")])])]),s._v(" "),t("li",[s._v("编译器目标是32，64\n"),t("ul",[t("li",[s._v("这个有影响")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);