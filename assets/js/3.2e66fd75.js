(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{273:function(s,t,a){s.exports=a.p+"assets/img/成员变量和非成员变量.abeeccdf.png"},274:function(s,t,a){s.exports=a.p+"assets/img/成员函数和非成员函数.18eaed6b.png"},275:function(s,t,a){s.exports=a.p+"assets/img/访问权限.ce788b0d.png"},276:function(s,t,a){s.exports=a.p+"assets/img/class中函数3大概念.43294c4e.png"},319:function(s,t,a){"use strict";a.r(t);var n=a(14),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"c-核心详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-核心详解"}},[s._v("#")]),s._v(" C++核心详解")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('<font style="background:pink">\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("学C++的利器：")]),s._v(" "),t("ul",[t("li",[s._v("this指针不是object的一部分")]),s._v(" "),t("li",[s._v("虚函数表属于class\n"),t("ul",[t("li",[s._v("每个object有属于各自的"),t("strong",[s._v("虚函数表指针")])])])]),s._v(" "),t("li",[s._v("静态绑定和动态绑定")]),s._v(" "),t("li",[s._v("内存管理")]),s._v(" "),t("li",[s._v("《STL源码剖析》")])]),s._v(" "),t("h2",{attrs:{id:"📑-目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📑-目录"}},[s._v("#")]),s._v(" 📑 目录")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#📑-目录"}},[s._v("📑 目录")])]),t("li",[t("a",{attrs:{href:"#✅『oob』基于对象的程序设计"}},[s._v("✅『OOB』基于对象的程序设计")])]),t("li",[t("a",{attrs:{href:"#_1-对比-class-struct-union-和-enum"}},[s._v("1.对比class/struct/union和enum")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-class"}},[s._v("1.1.class")])]),t("li",[t("a",{attrs:{href:"#_1-2-struct-『c-中』"}},[s._v("1.2.struct『C++中』")])]),t("li",[t("a",{attrs:{href:"#_1-3-union-『c-中』"}},[s._v("1.3.union『C++中』")])]),t("li",[t("a",{attrs:{href:"#_1-4-enum-『只有它不是特殊的类』"}},[s._v("1.4.enum『只有它不是特殊的类』")])])])]),t("li",[t("a",{attrs:{href:"#_2-类的『成员变量』和『非成员变量』⭐️"}},[s._v("2.类的『成员变量』和『非成员变量』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-成员变量"}},[s._v("2.1.成员变量")])]),t("li",[t("a",{attrs:{href:"#_2-2-非成员变量"}},[s._v("2.2.非成员变量")])])])]),t("li",[t("a",{attrs:{href:"#_3-类的『成员函数』和『非成员函数』⭐️"}},[s._v("3.类的『成员函数』和『非成员函数』⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-成员函数"}},[s._v("3.1.成员函数")])]),t("li",[t("a",{attrs:{href:"#_3-2-非成员函数"}},[s._v("3.2.非成员函数")])])])]),t("li",[t("a",{attrs:{href:"#_4-big-three-讲解"}},[s._v("4.Big Three讲解")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-构造函数详解"}},[s._v("4.1.构造函数详解")])]),t("li",[t("a",{attrs:{href:"#_4-2-析构函数详解"}},[s._v("4.2.析构函数详解")])])])]),t("li",[t("a",{attrs:{href:"#_5-访问属性"}},[s._v("5.访问属性")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1-内部访问和对象访问"}},[s._v("5.1.内部访问和对象访问")])])])]),t("li",[t("a",{attrs:{href:"#_6-namespace-命名空间"}},[s._v("6.namespace命名空间")])]),t("li",[t("a",{attrs:{href:"#_7-其余"}},[s._v("7.其余")])]),t("li",[t("a",{attrs:{href:"#✅『oop』面向对象的程序设计"}},[s._v("✅『OOP』面向对象的程序设计")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[s._v("1.1.类型转换函数(类型转换函数-不等于-类型转换构造函数)")])])])]),t("li",[t("a",{attrs:{href:"#_1-辨析overload、override、overwrite⭐️"}},[s._v("1.辨析Overload、Override、Overwrite⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#✅区分overload、overwrite和override"}},[s._v("✅区分Overload、Overwrite和Override")])]),t("li",[t("a",{attrs:{href:"#成员函数加和不加virtual算不算重载"}},[s._v("成员函数加和不加virtual算不算重载？")])])])]),t("li",[t("a",{attrs:{href:"#_2-多态与虚函数"}},[s._v("2.多态与虚函数")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-static-变量的说明"}},[s._v("2.1.static变量的说明")])]),t("li",[t("a",{attrs:{href:"#_2-2-虚函数相关"}},[s._v("2.2.虚函数相关")])]),t("li",[t("a",{attrs:{href:"#_2-2-虚函数能不能inline"}},[s._v("2.2.虚函数能不能inline")])])])]),t("li",[t("a",{attrs:{href:"#_3-『多态神器』-多态3条件"}},[s._v("3.『多态神器』-多态3条件")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1-条件1和条件2❎『非多态』"}},[s._v("3.1.条件1和条件2❎『非多态』")])]),t("li",[t("a",{attrs:{href:"#_3-2-条件3❎『非多态』"}},[s._v("3.2.条件3❎『非多态』")])]),t("li",[t("a",{attrs:{href:"#_3-3-虚析构函数"}},[s._v("3.3.虚析构函数")])]),t("li",[t("a",{attrs:{href:"#_3-4-『添加作用域的调用』"}},[s._v("3.4.『添加作用域的调用』")])]),t("li",[t("a",{attrs:{href:"#_3-5-静态绑定的核心理解『易错难点』⭐️"}},[s._v("3.5.静态绑定的核心理解『易错难点』⭐️")])]),t("li",[t("a",{attrs:{href:"#✅上面是难点"}},[s._v("✅上面是难点")])]),t("li",[t("a",{attrs:{href:"#_3-6-const对象"}},[s._v("3.6.const对象")])])])]),t("li",[t("a",{attrs:{href:"#_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[s._v("4.构造函数（ctor）和析构函数（dtor）相关⭐️")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[s._v("4.1.C++ 构造函数和析构函数可以是虚函数嘛？")])]),t("li",[t("a",{attrs:{href:"#_4-2-构造函数中调用虚函数会怎么样"}},[s._v("4.2.构造函数中调用虚函数会怎么样？")])]),t("li",[t("a",{attrs:{href:"#_4-3-析构函数中调用虚函数会怎么样"}},[s._v("4.3.析构函数中调用虚函数会怎么样？")])])])]),t("li",[t("a",{attrs:{href:"#⭐️4-『运算符重载』详解"}},[s._v("⭐️4.『运算符重载』详解")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1-重载的2种函数类型"}},[s._v("4.1.重载的2种函数类型")])])])]),t("li",[t("a",{attrs:{href:"#_5-c-中『栈』和『堆』⭐️"}},[s._v("5.C++中『栈』和『堆』⭐️")])]),t("li",[t("a",{attrs:{href:"#✅杂谈"}},[s._v("✅杂谈")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-常量表达式"}},[s._v("1.常量表达式")])]),t("li",[t("a",{attrs:{href:"#_2-c-98关键字"}},[s._v("2.C++98关键字")])])])]),t("li",[t("a",{attrs:{href:"#✅常识-非面试"}},[s._v("✅常识-非面试")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-区分c-和c"}},[s._v("1.区分C++和C")])])])])])]),t("p"),s._v(" "),t("p",[s._v("[TOC]")]),s._v(" "),t("h2",{attrs:{id:"✅『oob』基于对象的程序设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅『oob』基于对象的程序设计"}},[s._v("#")]),s._v(" ✅『OOB』基于对象的程序设计")]),s._v(" "),t("h2",{attrs:{id:"_1-对比class-struct-union和enum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-对比class-struct-union和enum"}},[s._v("#")]),s._v(" 1.对比"),t("code",[s._v("class/struct/union")]),s._v("和"),t("code",[s._v("enum")])]),s._v(" "),t("ul",[t("li",[s._v("class")]),s._v(" "),t("li",[s._v("struct")]),s._v(" "),t("li",[s._v("union")]),s._v(" "),t("li",[s._v("enum『枚举类型"),t("strong",[s._v("是1种基本类型")]),s._v("，不是1种构造类型，因为它不能再分解为任何其他基本类型，比如，"),t("code",[s._v("class")]),s._v("，"),t("code",[s._v("struct")]),s._v("，"),t("code",[s._v("union")]),s._v("』")])]),s._v(" "),t("h3",{attrs:{id:"_1-1-class"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-class"}},[s._v("#")]),s._v(" 1.1."),t("code",[s._v("class")])]),s._v(" "),t("p",[s._v("1、继承：默认是『private继承』\n2、内部可以放成员变量，成员函数，默认成员变量访问控制是：『private』\n3、成员函数分类：\n有』构造函数\n有』析构函数\n有』虚函数")]),s._v(" "),t("h3",{attrs:{id:"_1-2-struct『c-中』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-struct『c-中』"}},[s._v("#")]),s._v(" 1.2."),t("code",[s._v("struct")]),s._v("『C++中』")]),s._v(" "),t("blockquote",[t("p",[s._v("本质："),t("strong",[s._v("是一种class")])])]),s._v(" "),t("p",[s._v("1、继承：默认是『public继承』\n2、内部可以放成员变量，成员函数，默认成员变量访问控制是：『public』\n3、成员函数分类：\n有』构造函数\n有』析构函数\n有』虚函数")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a="')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die AAA"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPoly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*AAA******"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//struct B : private A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//下面的写法，等价于，struct B : public A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("888")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b="')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"die BBB"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPoly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*BBBB******"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//因为加上了system("pause");所以需要下面这样挂掉B，才能知道B的析构函数被调用')]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tA one"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tone"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t\tB two"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\ttwo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n\t\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" pointer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tpointer"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myPoly")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("system")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pause"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br")])]),t("h3",{attrs:{id:"_1-3-union『c-中』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-union『c-中』"}},[s._v("#")]),s._v(" 1.3."),t("code",[s._v("union")]),s._v("『C++中』")]),s._v(" "),t("blockquote",[t("p",[s._v("本质：它是一种"),t("strong",[s._v("特殊的类")])])]),s._v(" "),t("ul",[t("li",[s._v("参考《后台开发》")])]),s._v(" "),t("p",[s._v("1、继承：『不可以继承』继承自别人/能给别人继承都不可以\n2、内部可以放成员变量，成员函数，默认成员变量访问控制是：『public』\n3、成员函数分类：\n有』构造函数\n有』析构函数\n"),t("strong",[s._v("不可以有』虚函数")])]),s._v(" "),t("h3",{attrs:{id:"_1-4-enum『只有它不是特殊的类』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-enum『只有它不是特殊的类』"}},[s._v("#")]),s._v(" 1.4."),t("code",[s._v("enum")]),s._v("『只有它不是特殊的类』")]),s._v(" "),t("p",[s._v("1、枚举类型"),t("strong",[s._v("是1种基本类型")]),s._v("，不是1种构造类型")]),s._v(" "),t("p",[s._v("2、因为它不能再分解为任何其他基本类型『比如，"),t("code",[s._v("class")]),s._v("，"),t("code",[s._v("struct")]),s._v("，"),t("code",[s._v("union")]),s._v("』")]),s._v(" "),t("h2",{attrs:{id:"_2-类的『成员变量』和『非成员变量』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-类的『成员变量』和『非成员变量』⭐️"}},[s._v("#")]),s._v(" 2.类的『成员变量』和『非成员变量』⭐️")]),s._v(" "),t("img",{attrs:{src:a(273)}}),s._v(" "),t("h3",{attrs:{id:"_2-1-成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-成员变量"}},[s._v("#")]),s._v(" 2.1.成员变量")]),s._v(" "),t("p",[t("strong",[s._v("书中记载")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("nonstatic member 非静态成员\n"),t("ul",[t("li",[s._v("普通数据成员")]),s._v(" "),t("li",[s._v("const数据成员")])])]),s._v(" "),t("li",[s._v("static member 静态成员")])]),s._v(" "),t("p",[t("strong",[s._v("static成员变量")])]),s._v(" "),t("ul",[t("li",[s._v("c++的一个类中『"),t("strong",[s._v("声明")]),s._v("』一个static成员变量，static是加了访问控制的全局变量，不被继承")]),s._v(" "),t("li",[s._v("类和子类对象，static变量占有一份内存")])]),s._v(" "),t("blockquote",[t("p",[s._v("重点理解："),t("strong",[s._v("静态成员变量的初始化一定要在『类外』")])])]),s._v(" "),t("p",[s._v("原因： 因为静态成员变量本身在main函数未开始时已经存在。不要让成员变量的初始化依赖于对象。不用对象，难到就不能用这一变量了吗？如果将初始化放在类内。那么"),t("strong",[s._v("当不声明对象时")]),s._v("，无法使用这一静态变量。编译器报错为‘undeclared identifier’")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("类中的声明和定义辨析：（重点、难点）\n笔者的看法是：\n1、逻辑上说明是一起，只能表示可以『声明』在一起。（声明的门槛很低）\n2、具体内存在哪分配，这个决定『能不能在类内』进行『定义』\n\n比如：\n1、友元函数在『类内』声明，不能在『类内』定义，能在『类外』定义\n2、static成员变量在『类内』声明，不能在『类内』定义，能在『类外』定义\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("blockquote",[t("p",[s._v("参考自："),t("a",{attrs:{href:"https://www.huaweicloud.com/articles/4637f3d11eb3fd9a38e017041e23e50a.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("华为云"),t("OutboundLink")],1)])]),s._v(" "),t("p",[t("strong",[s._v("static和非static特点")])]),s._v(" "),t("ul",[t("li",[s._v("静态成员存在于"),t("strong",[s._v("内存")]),s._v("，非静态成员需要实例化才会分配内存（注意，也就是在虚拟内存空间中，表示的是.bss和.data段中）")]),s._v(" "),t("li",[s._v("非静态成员的生存期决定于该类的生存期，而静态成员生存期则与程序生命期相同")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-非成员变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-非成员变量"}},[s._v("#")]),s._v(" 2.2.非成员变量")]),s._v(" "),t("h2",{attrs:{id:"_3-类的『成员函数』和『非成员函数』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-类的『成员函数』和『非成员函数』⭐️"}},[s._v("#")]),s._v(" 3.类的『成员函数』和『非成员函数』⭐️")]),s._v(" "),t("img",{attrs:{src:a(274)}}),s._v(" "),t("blockquote",[t("p",[s._v("我的"),t("a",{attrs:{href:"http://naotu.baidu.com/file/02d2413a51829d0c29226a23718613ad?token=d83f2eb1c2d887a6",target:"_blank",rel:"noopener noreferrer"}},[s._v("百度脑图"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("说明：成员函数的分类，需要考虑排序组合，"),t("strong",[s._v("是很多，很复杂")]),s._v("的，不然就只能一个一个维度去分类。")])]),s._v(" "),t("h3",{attrs:{id:"_3-1-成员函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-成员函数"}},[s._v("#")]),s._v(" 3.1.成员函数")]),s._v(" "),t("ul",[t("li",[s._v("到底什么是成员函数？")]),s._v(" "),t("li",[s._v("类的成员函数：是定义为"),t("strong",[s._v("类的一部分")]),s._v("的函数，有时也被称为方法。（C++primer第5版，P20）")]),s._v(" "),t("li",[s._v("各类函数中：构造函数、析构函数、拷贝初始化构造函数等是类的成员函数。")]),s._v(" "),t("li",[s._v("成员函数分下面3类（应该说是2类，纯虚函数属于虚函数的子集的话）")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("1、非虚函数（non-virtual 函数）：\n你『不希望』派生类（derived class）重新定义 (override, 复写) 它.\n\n\n\n2、虚函数（virtual 函數）：\n你希望 derived class 重新定义 (override, 复写) 它，且你对它已有『默认』定义。\n3、纯虚函数（pure virtual 函數）：\n你希望 derived class 『一定』要重新定义 (override 复写)\n它，你对它沒有默认定义。\n\nPS：我们把不是纯的虚函数的虚函数叫作（impure virtual函数）\nPS：在语法上，我们只要在任何一个函数前面加上virtual这样一个关键字，它就成为一个虚函数。\n数据可以被继承下来，就是占它用了内存。\n函数的继承如何理解？但是不应该从内存角度理解，函数的继承，继承的是调用权利\n\nPS：其实纯虚函数是可以有定义的！！\n> 出处：《C++Primer》中文版第五版541页第22行。\n我们可以为纯虚函数提供定义，不过函数体『必须定义在类的外部』。若定义在类的内部，会出现错误：pure-specifier on function-definition。\n》 虚函数是可以定义『在类的内部的』，外部也可以！\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("blockquote",[t("p",[s._v("参考自：侯捷")])]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("override")]),s._v("这个术语，在这个主题不能随便用！！")])]),s._v(" "),t("li",[t("p",[s._v("这个术语，"),t("strong",[s._v("一定是用在『虚函数』被重新定义，才能够叫（override）")])])]),s._v(" "),t("li",[t("p",[s._v("🐾"),t("font",{staticStyle:{background:"yellow"}},[s._v("无法继承的『static成员函数』")])],1)]),s._v(" "),t("li",[t("p",[t("strong",[s._v("纯虚函数")]),s._v("：只提供一个"),t("strong",[s._v("接口")]),s._v("，具体实现方法需要"),t("strong",[s._v("派生类")]),s._v("自己去实现，纯虚函数本身不可以有实现")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("非虚函数")]),s._v("：提供接口，并且强制"),t("strong",[s._v("实现")]),s._v("方法")])])]),s._v(" "),t("blockquote",[t("p",[s._v("根据《"),t("strong",[s._v("深度探索C++对象模型")]),s._v("》一书所说：")])]),s._v(" "),t("p",[s._v("原始的“C with Classes”只支持，"),t("strong",[s._v("（Nonstatic member function）非静态成员函数")])]),s._v(" "),t("p",[t("strong",[s._v("（Virtual function）虚函数")]),s._v("，是在20世纪80年代中期加入进来的。")]),s._v(" "),t("p",[t("strong",[s._v("（Static member function）静态成员函数")]),s._v("是最后被引入的一种函数类型!")]),s._v(" "),t("p",[s._v("书中说道："),t("font",{staticStyle:{background:"pink"}},[s._v("C++支持3种类型的**（member function）成员函数**")]),s._v("『记住下面的』")],1),s._v(" "),t("ul",[t("li",[s._v("1、static member function")]),s._v(" "),t("li",[s._v("2、nonstatic member function\n"),t("ul",[t("li",[s._v("1、普通的成员函数")]),s._v(" "),t("li",[s._v("2、const成员函数")])])]),s._v(" "),t("li",[s._v("3、virtual member function")])]),s._v(" "),t("p",[s._v("成员函数中"),t("strong",[s._v("易错")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("由于成员函数中的const成员函数，const"),t("strong",[s._v("实际")]),s._v("上修饰的是"),t("strong",[s._v("this指针")]),s._v("。")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("所以"),t("strong",[s._v("在成员函数")]),s._v("中，"),t("strong",[s._v("static")]),s._v("和"),t("strong",[s._v("const不能同时")]),s._v("修饰同一个成员函数")]),s._v("，因为static成员函数没有this指针。")],1)]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这行没错")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maxn"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//修饰变量，这行却没错")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n    \t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//下面会出错，[Error] static member function 'static void A::demo()' cannot have cv-qualifier")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" \n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("demo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h3",{attrs:{id:"_3-2-非成员函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-非成员函数"}},[s._v("#")]),s._v(" 3.2.非成员函数")]),s._v(" "),t("h4",{attrs:{id:"_3-2-1-友元函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-友元函数"}},[s._v("#")]),s._v(" 3.2.1.友元函数")]),s._v(" "),t("ul",[t("li",[s._v("注意："),t("font",{staticStyle:{background:"yellow"}},[s._v("友元函数不是类的成员函数！")]),s._v("（"),t("strong",[s._v("欢聚时代")]),s._v("）")],1)]),s._v(" "),t("p",[s._v("1、友元函数的『"),t("strong",[s._v("声明")]),s._v("』可以放在类"),t("strong",[s._v("声明")]),s._v("的任何地方，不受访问限定关键字private、protected、public的限制")]),s._v(" "),t("p",[s._v("2、尽管友元函数的"),t("strong",[s._v("原型")]),s._v("有在"),t("strong",[s._v("类的定义")]),s._v("中出现过，但是"),t("strong",[s._v("友元函数并不是成员函数")]),s._v("。")]),s._v(" "),t("p",[s._v("3、友元是一种"),t("strong",[s._v("定义在类外部")]),s._v("的普通函数（友元函数既可以在类的内部，也可以在类的外部定义《"),t("strong",[s._v("C++primer")]),s._v("》中说了），但它需要在类体内进行"),t("strong",[s._v("说明『声明』")]),s._v("，为了与该类的成员函数加以区别，在说明时前面加以关键字friend")]),s._v(" "),t("blockquote",[t("p",[s._v("参考自：菜鸟教程"),t("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-friend-functions.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++ 友元函数"),t("OutboundLink")],1)])]),s._v(" "),t("h4",{attrs:{id:"_3-2-2-友元"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-友元"}},[s._v("#")]),s._v(" 3.2.2.友元")]),s._v(" "),t("p",[s._v("1、『『"),t("font",{staticStyle:{background:"yellow"}},[s._v("友元函数是不能被继承的")]),s._v("——解释，你父亲的朋友不能继承给你？』』，"),t("font",{staticStyle:{background:"yellow"}},[s._v("友元函数没有this指针")]),s._v("。")],1),s._v(" "),t("p",[s._v("2、友元只是破坏了类的隐藏性和封装性，"),t("font",{staticStyle:{background:"yellow"}},[s._v("可以直接调用，不需要通过对象或者指针")])],1),s._v(" "),t("h2",{attrs:{id:"_4-big-three讲解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-big-three讲解"}},[s._v("#")]),s._v(" 4."),t("code",[s._v("Big Three")]),s._v("讲解")]),s._v(" "),t("p",[s._v("参考自：侯捷的说法，好像来自《C++ Primer》")]),s._v(" "),t("h3",{attrs:{id:"_4-1-构造函数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-构造函数详解"}},[s._v("#")]),s._v(" 4.1.构造函数详解")]),s._v(" "),t("h4",{attrs:{id:"_1-普通ctor-普通构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-普通ctor-普通构造函数"}},[s._v("#")]),s._v(" 1.普通ctor（普通构造函数）")]),s._v(" "),t("ul",[t("li",[s._v("1、无参的普通构造函数")]),s._v(" "),t("li",[s._v("2、"),t("strong",[s._v("有参")]),s._v("的普通构造函数\n"),t("ul",[t("li",[s._v("（1）"),t("strong",[s._v("类型转换")]),s._v("构造函数：只有"),t("strong",[s._v("1个参数")]),s._v("的普通构造函数一般都可以称作『类型转换构造函数』")]),s._v(" "),t("li",[s._v("（2）其他"),t("strong",[s._v("有参")]),s._v("的普通构造函数")])])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    \t\n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//无参的『普通构造函数』")]),s._v("\n  \n  \t\n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//有参的『普通构造函数』，并且由于只有1个参数，也叫『类型转换构造函数』")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          \tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Int Constructor calles"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  \n    \t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//拷贝构造函数，原因是参数是『本类类型的引用』")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            cout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Copy ctor"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            \n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h4",{attrs:{id:"_2-copy-ctor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-copy-ctor"}},[s._v("#")]),s._v(" 2.copy ctor")]),s._v(" "),t("p",[s._v("copy ctor又称：复制构造函数，拷贝构造函数，拷贝"),t("strong",[s._v("初始化")]),s._v("构造函数")]),s._v(" "),t("p",[s._v("分为：")]),s._v(" "),t("p",[s._v("1、默认的『copy ctor』")]),s._v(" "),t("p",[s._v("2、如果你自行编写了新的copy ctor，那么默认的copy ctor就不存在了")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("Demo "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("c2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//会调用copy ctor，初始化")]),s._v("\n\nDemo c2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//会调用copy ctor，注意是初始化，不是赋值！")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_4-2-析构函数详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-析构函数详解"}},[s._v("#")]),s._v(" 4.2.析构函数详解")]),s._v(" "),t("h4",{attrs:{id:"_4-2-1-有无virtual"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-有无virtual"}},[s._v("#")]),s._v(" 4.2.1.有无virtual")]),s._v(" "),t("p",[s._v("1、"),t("strong",[s._v("没有")]),s._v("virtual的析构函数，又称："),t("strong",[s._v("一般")]),s._v("的析构函数")]),s._v(" "),t("p",[s._v("2、"),t("strong",[s._v("有")]),s._v("virtual的析构函数")]),s._v(" "),t("p",[s._v("tips：析构时注意区别 "),t("code",[s._v("delete")]),s._v(" 和 "),t("code",[s._v("delete[]")])]),s._v(" "),t("h4",{attrs:{id:"_4-2-2-是否私有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-是否私有"}},[s._v("#")]),s._v(" 4.2.2.是否私有")]),s._v(" "),t("p",[s._v("在C++中，为了让某个类"),t("strong",[s._v("只能通过new来创建")]),s._v("（即如果直接创建对象，编译器将报错）")]),s._v(" "),t("ul",[t("li",[s._v("应该将"),t("strong",[s._v("析构函数设为"),t("font",{staticStyle:{background:"pink"}},[s._v("私有")])],1)])]),s._v(" "),t("h2",{attrs:{id:"_5-访问属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-访问属性"}},[s._v("#")]),s._v(" 5.访问属性")]),s._v(" "),t("h3",{attrs:{id:"_5-1-内部访问和对象访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-内部访问和对象访问"}},[s._v("#")]),s._v(" 5.1.内部访问和对象访问")]),s._v(" "),t("p",[s._v("​\t类的成员有三种访问属性，分别是public、protected、private，"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44308742&qid=1618#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("子类能够访问的成员"),t("OutboundLink")],1),s._v("是")]),s._v(" "),t("blockquote",[t("p",[s._v("参考牛客的答案：")])]),s._v(" "),t("img",{attrs:{src:a(275)}}),s._v(" "),t("h2",{attrs:{id:"_6-namespace命名空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-namespace命名空间"}},[s._v("#")]),s._v(" 6."),t("code",[s._v("namespace")]),s._v("命名空间")]),s._v(" "),t("p",[s._v("namespace，是指标识符的各种可见范围")]),s._v(" "),t("p",[s._v("C++标准程序库中的所有标识符都被定义于一个名为"),t("code",[s._v("std")]),s._v("的namespace中。")]),s._v(" "),t("p",[s._v("1、"),t("code",[s._v("<iostream>")]),s._v("和<iostream.h>格式不一样，前者没有后缀，实际上，在你的编译器include文件夹里面可以看到，二者是两个文件，打开文件就会发现，里面的代码是不一样的。")]),s._v(" "),t("p",[s._v("2、后缀为.h的头文件c++标准已经明确提出不支持了，早些的实现将标准库功能定义在"),t("strong",[s._v("全局空间")]),s._v("里，声明在带.h后缀的头文件里，c++标准为了和C区别开，也为了正确使用命名空间，规定头文件不使用后缀.h。")]),s._v(" "),t("p",[s._v("3、因此。命名空间主要是将全局空间『"),t("strong",[s._v("划分")]),s._v("为更加小块的全局空间』")]),s._v(" "),t("h2",{attrs:{id:"_7-其余"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-其余"}},[s._v("#")]),s._v(" 7.其余")]),s._v(" "),t("p",[s._v("​\t1、一个基类的声明中有纯虚函数，该基类派生类一定不再是抽象类（说法错误！）")]),s._v(" "),t("p",[s._v("原因：如果在派生类中"),t("strong",[s._v("没有")]),s._v("对所有纯虚函数进行定义，则此派生类仍然是抽象类，不能用来定义对象。所以A错.")]),s._v(" "),t("p",[s._v("​\t2、构造函数"),t("strong",[s._v("不能")]),s._v("被覆盖")]),s._v(" "),t("h2",{attrs:{id:"✅『oop』面向对象的程序设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅『oop』面向对象的程序设计"}},[s._v("#")]),s._v(" ✅『OOP』面向对象的程序设计")]),s._v(" "),t("p",[s._v("1、面向对象的三大基本特征：封装、继承、多态")]),s._v(" "),t("p",[s._v("2、面向对象的五大基本原则：")]),s._v(" "),t("p",[s._v("单一职责原则、开放封闭原则、里氏替换原则、依赖倒置原则、接口隔离原则")]),s._v(" "),t("h3",{attrs:{id:"_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-类型转换函数-类型转换函数-不等于-类型转换构造函数"}},[s._v("#")]),s._v(" 1.1.类型转换函数(类型转换函数-不等于-类型转换构造函数)")]),s._v(" "),t("p",[s._v("1、带"),t("strong",[s._v("非默认参数")]),s._v("的构造函数可以把"),t("strong",[s._v("基本类型数据")]),s._v("转换成类类型对象。")]),s._v(" "),t("p",[s._v("2、『类型转换函数』可以把类类型对象转换为其他指定类型对象。")]),s._v(" "),t("p",[s._v("3、『类型转换函数』只能定义为一个类的成员函数，"),t("strong",[s._v("不能")]),s._v("定义为类的"),t("strong",[s._v("友元函数。")])]),s._v(" "),t("h2",{attrs:{id:"_1-辨析overload、override、overwrite⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-辨析overload、override、overwrite⭐️"}},[s._v("#")]),s._v(" 1.辨析Overload、Override、Overwrite⭐️")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("重载(Overload)")]),s._v("：\n"),t("ul",[t("li",[t("strong",[s._v("在同一作用域内")]),s._v("，函数名相同，函数的参数个数、参数类型或参数顺序三者中必须至少有一种不同。函数返回值的类型可以相同，也可以不相同。比如：发生在一个类内部。")])])])]),s._v(" "),t("p",[s._v("​\t郑莉：C++允许功能相近的函数在"),t("strong",[s._v("相同的作用域内")]),s._v("以相同函数名声明。从而形成重载。方便使用记忆。")]),s._v(" "),t("p",[s._v("​\t《"),t("strong",[s._v("C++ Primer")]),s._v("》P206，如果“"),t("strong",[s._v("同一作用域")]),s._v("”内的几个函数名字相同但“形参列表”不同，我们称之为重载（"),t("strong",[s._v("overloaded")]),s._v("）函数")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("重写(Override)")]),s._v("：「我觉得翻译为"),t("strong",[s._v("覆盖")]),s._v("更好！」\n"),t("ul",[t("li",[s._v("也叫做"),t("strong",[s._v("覆盖")]),s._v("，也叫"),t("strong",[s._v("复写")]),s._v("，一般发生在子类和父类继承关系之间。子类"),t("strong",[s._v("重新定义")]),s._v("父类中有相同名称和参数的"),t("font",{staticStyle:{background:"yellow"}},[s._v("『"),t("strong",[s._v("虚函数")]),s._v("』")])],1)])]),s._v(" "),t("li",[t("strong",[s._v("重定义")]),s._v("：\n"),t("ul",[t("li",[s._v("也叫做"),t("strong",[s._v("隐藏")]),s._v("，子类"),t("strong",[s._v("重新定义")]),s._v("父类中有相同名称的"),t("font",{staticStyle:{background:"yellow"}},[s._v("『"),t("strong",[s._v("非虚函数")]),s._v("』 ")]),s._v("( 参数列表可以不同 ) ，指派生类的函数屏蔽了与其同名的基类函数。可以理解成发生在继承中的重载。")],1)])])]),s._v(" "),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://blog.csdn.net/u010275850/article/details/45583705",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++_重载、重写和重定义的区别"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("PS：但是，从很多英语教材上面，来说，重定义和重写都是单词（override），理解参考第4节")]),s._v(" "),t("ul",[t("li",[s._v("子类重新定义父类虚函数的方法叫做覆写")]),s._v(" "),t("li",[s._v("多态是为了"),t("strong",[s._v("接口")]),s._v("重用，封装和继承是为了代码重用")])]),s._v(" "),t("h3",{attrs:{id:"✅区分overload、overwrite和override"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅区分overload、overwrite和override"}},[s._v("#")]),s._v(" ✅区分Overload、Overwrite和Override")]),s._v(" "),t("ul",[t("li",[s._v("注意，由于这3个词的翻译很尴尬，众说纷纭，我们直接考虑单词来")]),s._v(" "),t("li",[s._v("『记忆版』")])]),s._v(" "),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://blog.csdn.net/jszhangyili/article/details/7570311",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSDN的jszhangyili博客"),t("OutboundLink")],1)])]),s._v(" "),t("img",{attrs:{src:a(276)}}),s._v(" "),t("blockquote",[t("p",[s._v("都是在函数名相同的时候，都不考虑返回值的情况下，我们讨论下面3组")])]),s._v(" "),t("ul",[t("li",[s._v("Overload\n"),t("ul",[t("li",[t("strong",[s._v("相同作用域")]),s._v("『可以不是class中』\n"),t("ul",[t("li",[s._v("参数相同，如果在class中，这样写就很奇怪了，"),t("font",{staticStyle:{background:"yellow"}},[s._v("报错")])],1),s._v(" "),t("li",[s._v("参数不同，就是重载")])])])])]),s._v(" "),t("li",[s._v("Override\n"),t("ul",[t("li",[s._v("继承体系，不同作用域")]),s._v(" "),t("li",[s._v("基类该函数是虚函数")]),s._v(" "),t("li",[s._v("参数相同")])])]),s._v(" "),t("li",[s._v("Overwrite\n"),t("ul",[t("li",[s._v("继承体系，不同作用域\n"),t("ul",[t("li",[s._v("情况1：参数不同，无论基类该函数是不是虚函数")]),s._v(" "),t("li",[s._v("情况2：参数相同，基类如果是『非虚函数』，那么就意味着在派生类中重新定义一个函数，"),t("font",{staticStyle:{background:"yellow"}},[s._v("也就是非多态")])],1)])])])])]),s._v(" "),t("h3",{attrs:{id:"成员函数加和不加virtual算不算重载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#成员函数加和不加virtual算不算重载"}},[s._v("#")]),s._v(" 成员函数加和不加virtual算不算重载？")]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("val")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"non-virtual=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"virtual=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BBB"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    A a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br")])]),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentosLinux apue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# g++ demo.cpp ")]),s._v("\ndemo.cpp:15:18: error: ‘virtual void A::test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("’ cannot be overloaded\n     virtual void test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                  ^\ndemo.cpp:11:10: error: with ‘void A::test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("’\n     void test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("如上，"),t("code",[s._v("virtual void A::test()")]),s._v("不能被重载")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"global=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("val")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"virtual=%d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    A a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("h2",{attrs:{id:"_2-多态与虚函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-多态与虚函数"}},[s._v("#")]),s._v(" 2.多态与虚函数")]),s._v(" "),t("h3",{attrs:{id:"_2-1-static变量的说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-static变量的说明"}},[s._v("#")]),s._v(" 2.1."),t("code",[s._v("static")]),s._v("变量的说明")]),s._v(" "),t("p",[s._v("c++的一个类中声明一个"),t("strong",[s._v("static成员变量")]),s._v("，下面描述正确的是")]),s._v(" "),t("ul",[t("li",[s._v("static是加了访问控制的全局变量，『"),t("strong",[s._v("不被继承")]),s._v("』，类和子类对象，static变量占有一份内存")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-虚函数相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-虚函数相关"}},[s._v("#")]),s._v(" 2.2.虚函数相关")]),s._v(" "),t("ul",[t("li",[s._v("1、（static）静态函数不可以是虚函数『虚成员函数不可能是static 成员函数』")]),s._v(" "),t("li",[s._v("2、（inline）虚函数可以声明为inline，但是编译器不会将其作为inline函数处理『有的选择题故意为难，但是其实"),t("strong",[s._v("虚函数是可以声明为inline的，但是分情况")]),s._v("』』")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("a")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inline")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n尽管以上写法是没有语法错误的，并且可以执行，但其实test函数已经不是内联函数了，因为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inline")]),s._v("只是对编译器的一个建议而已。\n搞清本质就好。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_2-2-虚函数能不能inline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-虚函数能不能inline"}},[s._v("#")]),s._v(" 2.2.虚函数能不能inline")]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("Q:虚函数不能内联，但是语法不出错？\n\nA:不是的，虚函数在『『没有表现多态的时候』』是可以内联的，表现多态的时候不能\n\n『没有表现多态的时候』:内联只是对编译器的一种请求，是否真正内联要看编译器的处理，虚函数是可以内联的，但是编译器不会响应内联请求，即他会忽略内联说明，将其当做普通虚函数处理。\n\n有说法说：\n虚函数不可以内联，因为虚函数是在运行期的时候确定具体调用的函数，内联是在编译期的时候进行代码展开，两者冲突，所以没有一起使用的做法。『『这是不严谨的』』\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"_3-『多态神器』-多态3条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-『多态神器』-多态3条件"}},[s._v("#")]),s._v(" 3.『多态神器』-多态3条件")]),s._v(" "),t("ul",[t("li",[s._v("『『"),t("code",[s._v("动态绑定3条件")]),s._v("』』")])]),s._v(" "),t("blockquote",[t("p",[s._v("C++编译器，看到一个函数调用，他有2个考量，静态还是动态绑定：")])]),s._v(" "),t("ul",[t("li",[s._v("静态被编译成："),t("code",[s._v("call")])]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("动态绑定：符合某些条件就会做动态绑定，"),t("strong",[s._v("3个条件")])])],1)]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("、通过指针来调用『注意，引用显然也是的，因为底层也是指针』\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("、这个指针是向上转型up cast了。『比如，派生类赋值给基类指针，基类指针调用』\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("、调用虚函数\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_3-1-条件1和条件2❎『非多态』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-条件1和条件2❎『非多态』"}},[s._v("#")]),s._v(" 3.1.条件1和条件2❎『非多态』")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题1.")])]),s._v(" "),t("li",[t("p",[s._v("牛客上配套习题："),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44172669&qid=15197#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("题解：")])]),s._v(" "),t("li",[t("p",[s._v("这一题中，最后一个c，是相当于强制类型转换，『或许叫：向下转型？？』，然后没有通过指针来调用")])]),s._v(" "),t("li",[t("p",[s._v("用牛油的一个解释：动态绑定（多态）只有在指针和引用时才有效，其他情况下无效。")])])]),s._v(" "),t("h3",{attrs:{id:"_3-2-条件3❎『非多态』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-条件3❎『非多态』"}},[s._v("#")]),s._v(" 3.2.条件3❎『非多态』")]),s._v(" "),t("ul",[t("li",[s._v("例题2.")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mytest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"AAA"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mytest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\tcout"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BBB"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("endl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\n\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mytest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出的是AAA")]),s._v("\n    \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br")])]),t("ul",[t("li",[s._v("本题不是动态绑定原因分析：")]),s._v(" "),t("li",[s._v("1、通过指针来调用『注意，引用显然也是的，因为底层也是指针』\n"),t("ul",[t("li",[s._v("满足，用了"),t("code",[s._v("p->mytest();")])])])]),s._v(" "),t("li",[s._v("2、这个指针是向上转型up cast了『比如，派生类赋值给基类指针，基类指针调用』\n"),t("ul",[t("li",[s._v("满足，A是B的基类")])])]),s._v(" "),t("li",[s._v("3、调用虚函数❎不满足\n"),t("ul",[t("li",[s._v("因为p指针是A类型的，但是在classA中该函数还不是『虚函数』，因此次数，不能走偏移vptr的路径，想走虚函数指针—虚函数表的路径走不通。只能老老实实转换为调用"),t("code",[s._v("A::test()")]),s._v("这个非虚函数")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-3-虚析构函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-虚析构函数"}},[s._v("#")]),s._v(" 3.3.虚析构函数")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题3")])]),s._v(" "),t("li",[t("p",[t("font",{staticStyle:{background:"yellow"}},[s._v("虚析构函数：是为了解决基类的指针指向派生类对象，并且用『基类指针』删除派生类对象。")])],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pa "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" pa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出是：1 4 6 3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("考察的是对继承体系中的构造和析构函数调用顺序的理解。")])]),s._v(" "),t("li",[t("p",[s._v("在调用new B()的时候，因为B继承A，所以会首先调用其父类的构造函数，输出1")])]),s._v(" "),t("li",[t("p",[s._v("然后调用自己的构造函数，输出4")])]),s._v(" "),t("li",[t("p",[s._v("//析构的时候，是会调用的")])]),s._v(" "),t("li",[t("p",[s._v("对比，下面，如果去除掉A的析构函数的，虚函数")])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("输出为：1 4 3\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("原因：\n"),t("ul",[t("li",[t("strong",[s._v("静态绑定，this指针直接调用了A的析构")]),s._v("，B的没有。")]),s._v(" "),t("li",[s._v("很显然，有的时候，会出问题。")])])])]),s._v(" "),t("h3",{attrs:{id:"_3-4-『添加作用域的调用』"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-『添加作用域的调用』"}},[s._v("#")]),s._v(" 3.4.『添加作用域的调用』")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题4")])]),s._v(" "),t("li",[t("p",[s._v("多态情况下，不调用多态")])]),s._v(" "),t("li",[t("p",[s._v("牛客网"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44308742&qid=180817#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("题目"),t("OutboundLink")],1),s._v("：")])])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v("类B是类A的公有派生类，类A和类B中都定义了虚函数func(),p是一个指向类A对象的指针，则p->A::func()将（）？\n\n正确答案: C   你的答案: C (正确)\n\nA\t调用类B中函数func()\nB\t即调用类A中函数，也调用类B中的函数\nC\t调用类A中函数func()\nD\t根据p所指的对象类型而确定调用类A中或类B中的函数func()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("不论指针p是属于类A还是类B，也不论指针p指向的对象属于类A还是类B(当然，不能用类B的指针指向类A的对象)，"),t("strong",[s._v("因为加了作用域说明符"),t("code",[s._v("A::")]),s._v("，因此都只会调用类A的函数")]),s._v("。")])]),s._v(" "),t("h3",{attrs:{id:"_3-5-静态绑定的核心理解『易错难点』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-静态绑定的核心理解『易错难点』⭐️"}},[s._v("#")]),s._v(" 3.5.静态绑定的核心理解『易错难点』⭐️")]),s._v(" "),t("ul",[t("li",[s._v("例题5")]),s._v(" "),t("li",[s._v("易错的题目"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44470246&qid=44536#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n\t\t\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test A"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\t\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("pA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意『这是个幌子』")]),s._v("\n\tpA"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[s._v("有4个选项")])]),s._v(" "),t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-txt"}},[t("code",[s._v('问你选什么？\nA    编译出错\nB    程序运行奔溃\nC    输出"test A"\nD    输出乱码\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("答案选C："),t("strong",[s._v('输出"test A"')])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/whoway/picture/img/image-20210711202412877.png",alt:"image-20210711202412877"}})]),s._v(" "),t("ul",[t("li",[s._v("原因：\n"),t("ul",[t("li",[s._v("因为"),t("strong",[s._v("对于非虚成员函数，Ｃ++这门语言是静态绑定的")]),s._v("。")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("这也是Ｃ++语言和其它语言Java, Python的一个显著区别")])],1),s._v(" "),t("li",[t("code",[s._v("//pA->test();")]),s._v("这语句的意图是：调用对象 pA 的 test 成员函数。如果这句话在Java或Python等动态绑定的语言之中，编译器生成的代码大概是：\n"),t("ul",[t("li",[s._v("找到 pA 的 test 成员函数，调用它。（注意，这里的找到是程序运行的时候才找的，这也是所谓动态绑定的含义：运行时才绑定这个函数名与其对应的实际代码。有些地方也称这种机制为迟绑定，晚绑定。）")])])]),s._v(" "),t("li",[s._v("但是对于C++。为了保证程序的运行时效率，Ｃ++的设计者认为凡是编译时能确定的事情，就不要拖到运行时再查找了。所以C++的编译器看到这句话会这么干：\n"),t("ul",[t("li",[s._v("１：查找 pA 的类型，发现它有一个非虚的成员函数叫 test 。（编译器干的）")]),s._v(" "),t("li",[s._v("２：找到了，在这里生成一个函数调用，直接调"),t("code",[s._v("A:: test ( pA )")]),s._v("。")])])]),s._v(" "),t("li",[s._v("所以到了运行时，由于 test ()函数里面并没有任何需要解引用 pA 指针的代码，所以真实情况下也不会引发"),t("code",[s._v("segment fault")]),s._v("。\n"),t("ul",[t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("这里对成员函数的解析，和查找其对应的代码的工作都是在编译阶段完成而非运行时完成的，这就是所谓的静态绑定，也叫早绑定。正确理解C++的静态绑定可以理解一些特殊情况下C++的行为。『贼容易错』")])],1)])])])])]),s._v(" "),t("h3",{attrs:{id:"✅上面是难点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅上面是难点"}},[s._v("#")]),s._v(" ✅上面是难点")]),s._v(" "),t("ul",[t("li",[s._v("因为"),t("strong",[s._v("对于非虚成员函数，Ｃ++这门语言是静态绑定的")]),s._v("。")]),s._v(" "),t("li",[t("font",{staticStyle:{background:"yellow"}},[s._v("这也是Ｃ++语言和其它语言Java, Python的一个显著区别")])],1)]),s._v(" "),t("h3",{attrs:{id:"_3-6-const对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-const对象"}},[s._v("#")]),s._v(" 3.6.const对象")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例题6")])]),s._v(" "),t("li",[t("p",[s._v("题目来源和"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44470458&qid=1318#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考资料"),t("OutboundLink")],1)])])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token macro property"}},[t("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),t("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("<bits/stdc++.h>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("using")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" std"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A::f() "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A::f() const "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token base-clause"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f() "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//还是虚函数！，只是说，覆盖了，其实是vitual")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B::f() const "')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" A "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\ta"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tA "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//多态")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("g")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//先转换为const指针，由于只能调用const函数，所以不是多态了「因为此时不需要借助vptr去偏移了」")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//B::f() A::f() const")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出前面是因为多态")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出后面是因为不是多态！！！（注意）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("ul",[t("li",[s._v("解释原因")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[s._v("由于"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("在基类中声明为虚的，则p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("根据『对象类型』"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("调用"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，\n  此时编译器对虚方法使用动态联编，输出"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。\n    \n由于"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("在基类中未声明为虚的，故p"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" 『根据指针类型』"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("调用"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("，此时编译器对非虚方法使用静态联编，输出"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("C++ primer告诉我们，P537")]),s._v(" "),t("p",[s._v("当我们在派生类中覆盖某个虚函数时，可以再次使用virtual关键字指出该函数的性质，然而"),t("strong",[s._v("这么做并非必须")]),s._v("！因为，"),t("strong",[s._v("基类中的虚函数，在派生类中隐含的也是1个虚函数！")])])])]),s._v(" "),t("h2",{attrs:{id:"_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-构造函数-ctor-和析构函数-dtor-相关⭐️"}},[s._v("#")]),s._v(" 4.构造函数（ctor）和析构函数（dtor）相关⭐️")]),s._v(" "),t("h3",{attrs:{id:"_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-c-构造函数和析构函数可以是虚函数嘛"}},[s._v("#")]),s._v(" 4.1.C++ 构造函数和析构函数可以是虚函数嘛？")]),s._v(" "),t("ul",[t("li",[s._v("构造函数"),t("strong",[s._v("不可以")]),s._v("是虚函数")])]),s._v(" "),t("p",[s._v("因为虚函数只有和类的对象结合才能体现多态性，"),t("strong",[s._v("构造函数被调用时，类对象还没有完成建立")]),s._v("，所以无意义。")]),s._v(" "),t("ul",[t("li",[s._v("析构函数"),t("strong",[s._v("可以且常常")]),s._v("是虚函数")])]),s._v(" "),t("p",[s._v("在多个派生类中如果动态分配了内存，虚析构函数可以分别释放。不然有可能造成内存泄漏。")]),s._v(" "),t("p",[s._v("虚析构函数是为了解决：基类的指针指向派生类对象，并用基类的指针删除派生类对象。")]),s._v(" "),t("blockquote",[t("p",[s._v("参考自：《面向对象技术与Visual C++学习指导》，甘玲， 邱劲，张璞")])]),s._v(" "),t("h3",{attrs:{id:"_4-2-构造函数中调用虚函数会怎么样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-构造函数中调用虚函数会怎么样"}},[s._v("#")]),s._v(" 4.2.构造函数中调用虚函数会怎么样？")]),s._v(" "),t("blockquote",[t("p",[s._v("参考："),t("a",{attrs:{href:"https://www.huaweicloud.com/articles/ce10c517a25e175c5ab5d0c751c0319c.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("华为云博客：构造函数和析构函数中可以调用调用虚函数吗"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("１.　从语法上讲，调用完全没有问题。\n２.　但是从效果上看，往往不能达到需要的目的。")]),s._v(" "),t("ul",[t("li",[s._v("《Effective C++ 》条款9：永远不要在构造函数或析构函数中调用虚函数")])]),s._v(" "),t("p",[s._v("为什么不能在析构和构造函数中调用呢,实际上这样做是不会报错的(试过了),但是不建议这样用")]),s._v(" "),t("p",[s._v("书上,其实就是作者告诉你"),t("strong",[s._v("构造函数和析构函数中调用虚函数不会呈现出多态")])]),s._v(" "),t("p",[s._v("因为父类对象会在子类之前进行构造，此时子类部分的数据成员还未初始化， 因此调用子类的虚函数是不安全的，故而C++不会进行动态联编。")]),s._v(" "),t("h3",{attrs:{id:"_4-3-析构函数中调用虚函数会怎么样"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-析构函数中调用虚函数会怎么样"}},[s._v("#")]),s._v(" 4.3.析构函数中调用虚函数会怎么样？")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("不要")]),s._v("在析构函数中调用虚函数的原因：")]),s._v(" "),t("p",[s._v("​\t析构函数是用来销毁一个对象的，在销毁一个对象时，先调用子类的析构函数，然后再调用基类的析构函数。")]),s._v(" "),t("p",[s._v("​\t所以"),t("strong",[s._v("在调用基类的析构函数时，派生类对象的数据成员已经“销毁”，这个时再调用子类的虚函数已经没有意义了")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"⭐️4-『运算符重载』详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⭐️4-『运算符重载』详解"}},[s._v("#")]),s._v(" ⭐️4.『运算符重载』详解")]),s._v(" "),t("blockquote",[t("p",[s._v("（本质还是函数重载）")])]),s._v(" "),t("h3",{attrs:{id:"_4-1-重载的2种函数类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-重载的2种函数类型"}},[s._v("#")]),s._v(" 4.1.重载的2种函数类型")]),s._v(" "),t("ul",[t("li",[s._v("1、成员函数")]),s._v(" "),t("li",[s._v("2、友元函数『属于，非成员函数』")])]),s._v(" "),t("blockquote",[t("p",[s._v("易错：有的运算符，只能重载为『成员函数』")])]),s._v(" "),t("div",{staticClass:"language-cpp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cpp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" \t\t\t\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重载，下标运算符，比如重载后，返回当前vetor中的元素，需要this指针，而非成员函数是没有this指针的233")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重载，函数调用运算符，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("\n上面"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("个，『只能』通过成员函数进行重载\n我的理解，备注如上\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"_5-c-中『栈』和『堆』⭐️"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-c-中『栈』和『堆』⭐️"}},[s._v("#")]),s._v(" 5.C++中『栈』和『堆』⭐️")]),s._v(" "),t("p",[s._v("源代码的重要性+编译器底层理解的重要性！")]),s._v(" "),t("p",[s._v("（1）如何定义1个『只能』在『堆』上生成对象的类？")]),s._v(" "),t("ul",[t("li",[s._v("在C++中，为了让某个类只能通过new来创建（即如果直接创建对象，编译器将报错），应该（）\n"),t("ul",[t("li",[s._v("将『析构函数』设为『"),t("strong",[s._v("私有")]),s._v("』")]),s._v(" "),t("li",[s._v("原因：C++是静态")])])])]),s._v(" "),t("p",[s._v("（2）如何定义1个『只能』在『"),t("strong",[s._v("栈")]),s._v("』上生成对象的类？")]),s._v(" "),t("ul",[t("li",[s._v("将new和delete重载为『私有』")]),s._v(" "),t("li",[s._v("原因：在堆上生成对象，使用new关键字操作。看过源代码知道过程是2步！！")]),s._v(" "),t("li",[s._v("1、使用operator new在『堆』上找可用的内存，分配给对象")]),s._v(" "),t("li",[s._v("2、调用构造函数生成对象")]),s._v(" "),t("li",[s._v("所以，如果将new操作设置为『私有』，那么第1阶段就不能完成。『就不能在堆上生成对象』")])]),s._v(" "),t("h2",{attrs:{id:"✅杂谈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅杂谈"}},[s._v("#")]),s._v(" ✅杂谈")]),s._v(" "),t("h3",{attrs:{id:"_1-常量表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-常量表达式"}},[s._v("#")]),s._v(" 1.常量表达式")]),s._v(" "),t("ul",[t("li",[s._v("《"),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=43575799&qid=67992",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++Primer"),t("OutboundLink")],1),s._v("》")])]),s._v(" "),t("h3",{attrs:{id:"_2-c-98关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-c-98关键字"}},[s._v("#")]),s._v(" 2.C++98关键字")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("1、"),t("code",[s._v("static")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("修改变量或函数存储的形式，比如"),t("code",[s._v(".data")]),s._v("，"),t("code",[s._v(".bss")])])]),s._v(" "),t("li",[t("p",[s._v("作用是：穿透作用域、『C++ primer PXX好像是这么说的』")])]),s._v(" "),t("li",[t("p",[s._v("参考：牛客网："),t("a",{attrs:{href:"https://www.nowcoder.com/test/question/done?tid=44308658&qid=14302#summary",target:"_blank",rel:"noopener noreferrer"}},[s._v("关于static用途说法正确的是"),t("OutboundLink")],1),s._v("？")])])])]),s._v(" "),t("li",[t("p",[s._v("2、"),t("code",[s._v("const")])]),s._v(" "),t("ul",[t("li",[s._v("修改变量or函数的只读方式")])])]),s._v(" "),t("li",[t("p",[s._v("3、"),t("code",[s._v("inline")])])]),s._v(" "),t("li",[t("p",[s._v("建议在“编译期”，直接将整个函数的代码插入调用语句处")])]),s._v(" "),t("li",[t("p",[s._v("4、"),t("code",[s._v("friend")])]),s._v(" "),t("ul",[t("li",[s._v("声明友元，包括，友元函数，友元类")])])])]),s._v(" "),t("h2",{attrs:{id:"✅常识-非面试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅常识-非面试"}},[s._v("#")]),s._v(" ✅常识-非面试")]),s._v(" "),t("h3",{attrs:{id:"_1-区分c-和c"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-区分c-和c"}},[s._v("#")]),s._v(" 1.区分C++和C")]),s._v(" "),t("p",[s._v("​\tC和C++从来就不是一个东西！C++部分兼容C")]),s._v(" "),t("div",{staticClass:"language-c line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-c"}},[t("code",[s._v("C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("中没有的C99"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("C11特性\n    虽然在过去C或多或少可以看作是C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("的子集，但是C99标准增加了一些C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("没有的新特性\n下面列出了一些只有C99"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("C11中才有的特性"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\t\n\t指定初始化器"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t复合初始化器"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Compound initializer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t受限指针"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" Restricted pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("即，restric指针"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n  变长数组"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t伸缩型数组成员"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t带可变数量参数的宏。\n\n注意\n以上所列只是在特定时期内的情况，随着时间的推移和C、C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("的不断发展，列表中的项会有所增减。\n    例如，C"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("新增的一个特性就与『C99的变长数组』类似。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ul",[t("li",[s._v("参考自：《C Primer Plus》P730")])])])}),[],!1,null,null,null);t.default=r.exports}}]);