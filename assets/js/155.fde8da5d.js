(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{447:function(t,r,e){"use strict";e.r(r);var s=e(14),a=Object(s.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"编译器的测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编译器的测试"}},[t._v("#")]),t._v(" 编译器的测试")]),t._v(" "),r("h2",{attrs:{id:"目录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#目录"}},[t._v("目录")])]),r("li",[r("a",{attrs:{href:"#_1-回归测试"}},[t._v("1.回归测试")])]),r("li",[r("a",{attrs:{href:"#_2-super-test"}},[t._v("2.super-test")])]),r("li",[r("a",{attrs:{href:"#_3-csmith压力测试"}},[t._v("3.csmith压力测试")])])])]),r("p"),t._v(" "),r("p",[t._v("[TOC]")]),t._v(" "),r("h2",{attrs:{id:"_1-回归测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-回归测试"}},[t._v("#")]),t._v(" 1.回归测试")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%9B%9E%E5%BD%92%E6%B5%8B%E8%AF%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("回归测试"),r("OutboundLink")],1)])]),t._v(" "),r("ol",[r("li",[t._v("识别出软件中被修改的部分")]),t._v(" "),r("li",[t._v("从原"),r("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%9F%BA%E7%B7%9A",target:"_blank",rel:"noopener noreferrer"}},[t._v("基线"),r("OutboundLink")],1),t._v("测试用例库“T”中，排除所有不再适用的测试用例，确定对新版本依然有效的测试用例，创建新的基线测试用例库“TN”")]),t._v(" "),r("li",[t._v("依据一定的策略从TN中选择测试用例测试被修改的软件")]),t._v(" "),r("li",[t._v("如果必要，生成新的测试用例集“T1”，用于测试TN无法充分测试的软件部分")]),t._v(" "),r("li",[t._v("用T1执行修改后的软件")]),t._v(" "),r("li",[t._v("第2和第3步测试验证修改是否破坏了现有的功能，第4和第5步测试验证修改工作本身")])]),t._v(" "),r("h2",{attrs:{id:"_2-super-test"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-super-test"}},[t._v("#")]),t._v(" 2.super-test")]),t._v(" "),r("ul",[r("li",[t._v("原理和csmith类似，但是公司有的会将他集成到CD/CI")])]),t._v(" "),r("h2",{attrs:{id:"_3-csmith压力测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-csmith压力测试"}},[t._v("#")]),t._v(" 3.csmith压力测试")]),t._v(" "),r("ul",[r("li",[t._v("GItHub传送门："),r("a",{attrs:{href:"https://github.com/csmith-project/csmith",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/csmith-project/csmith"),r("OutboundLink")],1)])]),t._v(" "),r("p",[r("strong",[t._v("Csmith")]),t._v("是一个测试用例生成工具。它可以生成静态和动态符合 C99 标准的随机 C 程序。")]),t._v(" "),r("p",[t._v("它用于对编译器、静态分析器和其他处理 C 代码的工具进行"),r("strong",[t._v("压力测试")]),t._v("。")]),t._v(" "),r("p",[t._v("它是由犹他大学的研究人员开发的免费、开源、许可的 C 编译器模糊测试程序。以前称为Randprog")]),t._v(" "),r("ul",[r("li",[t._v("GitHub中该仓库的传送门："),r("a",{attrs:{href:"https://github.com/csmith-project/csmith",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/csmith-project/csmith"),r("OutboundLink")],1)])]),t._v(" "),r("h4",{attrs:{id:"_3-1-csmith-2011年paper出现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-csmith-2011年paper出现"}},[t._v("#")]),t._v(" 3.1.csmith（2011年paper出现）")]),t._v(" "),r("ul",[r("li",[t._v("仅仅只能生成随机的C语言程序")]),t._v(" "),r("li",[r("strong",[t._v("CSmith vs YARPGen")])])]),t._v(" "),r("blockquote",[r("p",[t._v("关于csmith的读音")])]),t._v(" "),r("ul",[r("li",[t._v("我拆分为c何smith")]),t._v(" "),r("li",[t._v("smith，n.史密斯，铁匠，金属工匠\n"),r("ul",[r("li",[t._v("我的谐音读作：思miss")])])])]),t._v(" "),r("h4",{attrs:{id:"_3-2-yarpgen-2020年"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-yarpgen-2020年"}},[t._v("#")]),t._v(" 3.2.YARPGen（2020年）")]),t._v(" "),r("ul",[r("li",[t._v("YARPGen，随机生成C++和C程序")]),t._v(" "),r("li",[t._v("参考资料：CSmith vs YARPGen - 陈小欧 - 20210113 - "),r("a",{attrs:{href:"https://www.bilibili.com/s/video/BV1rt4y1z7h4",target:"_blank",rel:"noopener noreferrer"}},[t._v("PLCT实验"),r("OutboundLink")],1)])]),t._v(" "),r("h4",{attrs:{id:"_3-3-randprog"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-randprog"}},[t._v("#")]),t._v(" 3.3.Randprog")]),t._v(" "),r("ul",[r("li",[t._v("Csmith (2011) only for C compiler • YarpGen (2020) for C and C++ compiler. • Predecessor: Randprog (1600 lines long, 2007)")])])])}),[],!1,null,null,null);r.default=a.exports}}]);