(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{410:function(t,_,v){"use strict";v.r(_);var r=v(14),a=Object(r.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"面试题集锦-计算机网络"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面试题集锦-计算机网络"}},[t._v("#")]),t._v(" 面试题集锦-计算机网络")]),t._v(" "),_("p",[t._v("​\t这些知识，可以说，能够串起来很多现实中的说法, 并且，这些知识"),_("font",{staticStyle:{background:"yellow"}},[t._v("加强了国内教材上未强调的知识")])],1),t._v(" "),_("h2",{attrs:{id:"目录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),_("p"),_("div",{staticClass:"table-of-contents"},[_("ul",[_("li",[_("a",{attrs:{href:"#目录"}},[t._v("目录")])]),_("li",[_("a",{attrs:{href:"#面试-tcp3次握手和4次挥手"}},[t._v("面试-TCP3次握手和4次挥手")])]),_("li",[_("a",{attrs:{href:"#请你说说-get-和-post-的区别"}},[t._v("请你说说 GET 和 POST 的区别")])]),_("li",[_("a",{attrs:{href:"#什么是nat『映射』-什么是内网穿透-『重要』"}},[t._v("什么是NAT『映射』？什么是内网穿透？『重要』")])]),_("li",[_("a",{attrs:{href:"#什么是单工-半双工-全双工"}},[t._v("什么是单工-半双工-全双工？")])]),_("li",[_("a",{attrs:{href:"#tcp协议真的有所谓的-粘包问题-吗"}},[t._v("TCP协议真的有所谓的“粘包问题”吗？")])]),_("li",[_("a",{attrs:{href:"#_7层模型中『数据』封装过程"}},[t._v("7层模型中『数据』封装过程")])]),_("li",[_("a",{attrs:{href:"#请你说一说tcp-ip-数据链路层-的交互过程"}},[t._v("请你说一说TCP/IP数据链路层的交互过程")])]),_("li",[_("a",{attrs:{href:"#_4种网络连接通信方式"}},[t._v("4种网络连接通信方式")])]),_("li",[_("a",{attrs:{href:"#键入网址后-其间发生了什么"}},[t._v("键入网址后，其间发生了什么？")]),_("ul",[_("li",[_("a",{attrs:{href:"#_3、浏览器向-web-服务器发送一个-http-请求"}},[t._v("3、浏览器向 web 服务器发送一个 HTTP 请求")])])])])])]),_("p"),t._v(" "),_("p",[t._v("[TOC]")]),t._v(" "),_("h2",{attrs:{id:"面试-tcp3次握手和4次挥手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面试-tcp3次握手和4次挥手"}},[t._v("#")]),t._v(" 面试-TCP3次握手和4次挥手")]),t._v(" "),_("p",[t._v("​\t面试的时候希望用专业术语说！虽然打比方能够讲清楚")]),t._v(" "),_("h4",{attrs:{id:"连接时候为什么需要三次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接时候为什么需要三次握手"}},[t._v("#")]),t._v(" 连接时候为什么需要三次握手？")]),t._v(" "),_("p",[t._v("（1）通俗解释1")]),t._v(" "),_("p",[t._v("三次握手，就是说三次收发消息的过程。")]),t._v(" "),_("p",[t._v("一个完整的TCP连接，他有一个标准就是说：通讯的双方，都能确认双方是能够正常收发的！"),_("strong",[t._v("（注意，收和发）")])]),t._v(" "),_("p",[t._v("C客户端→S服务器")]),t._v(" "),_("p",[t._v("S收到后，可以确认：")]),t._v(" "),_("p",[t._v("S就知道")]),t._v(" "),_("ul",[_("li",[t._v("[x] C能正常发（确认）")]),t._v(" "),_("li",[t._v("[ ] C能正常收")]),t._v(" "),_("li",[t._v("[ ] S能正常发")]),t._v(" "),_("li",[t._v("[x] S能正常收（确认）")])]),t._v(" "),_("p",[t._v("C客户端←S服务器")]),t._v(" "),_("p",[t._v("S就知道")]),t._v(" "),_("ul",[_("li",[t._v("[x] C能正常发（确认）")]),t._v(" "),_("li",[t._v("[x] C能正常收（确认）")]),t._v(" "),_("li",[t._v("[x] S能正常发（确认）")]),t._v(" "),_("li",[t._v("[x] S能正常收（确认）")])]),t._v(" "),_("p",[t._v("C客户端→S服务器")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("[x] C能正常发")])]),t._v(" "),_("li",[_("p",[t._v("[x] C能正常收（确定）")])]),t._v(" "),_("li",[_("p",[t._v("[x] S能正常发（确定）")])]),t._v(" "),_("li",[_("p",[t._v("[x] S能正常收")])]),t._v(" "),_("li",[_("p",[_("font",{staticStyle:{background:"yellow"}},[t._v("简介说法：三次握手目的是保证双方都有发送和接收的能力。")])],1)])]),t._v(" "),_("h4",{attrs:{id:"为什么断开的时候需要四次挥手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么断开的时候需要四次挥手"}},[t._v("#")]),t._v(" 为什么断开的时候需要四次挥手？")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://baijiahao.baidu.com/s?id=1654225744653405133&wfr=spider&for=pc",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),_("OutboundLink")],1)]),t._v(" "),_("ul",[_("li",[_("p",[t._v("牛客：因为tcp是全双工模式，接收到FIN时意味将没有数据再发来，但是还是可以继续发送数据，所以断开连接时必须是四次握手")])]),t._v(" "),_("li",[_("p",[t._v("百度：\nhttps://baike.baidu.com/item/tcp%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B/7922126?fr=aladdin")])]),t._v(" "),_("li",[_("p",[t._v("讲得很好：\n这是因为服务端的LISTEN状态下的SOCKET当收到SYN报文的建连请求后，它"),_("strong",[t._v("可以把ACK和SYN（ACK起应答作用，而SYN起同步作用）放在一个报文里来发送")]),t._v("。")])]),t._v(" "),_("li",[_("p",[t._v("但关闭连接时，当收到对方的FIN报文通知时，它仅仅表示对方没有数据发送给你了；但"),_("strong",[t._v("未必你所有的数据都全部发送给对方了")]),t._v("，所以你可以"),_("strong",[t._v("未必会马上会关闭SOCKET")]),t._v(",也即你可能还需要发送一些数据给对方之后，再发送FIN报文给对方来表示你同意可以关闭连接了，"),_("strong",[t._v("所以它这里的ACK报文和FIN报文多数情况下都是分开发送的")])])])]),t._v(" "),_("h2",{attrs:{id:"请你说说-get-和-post-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请你说说-get-和-post-的区别"}},[t._v("#")]),t._v(" 请你说说 GET 和 POST 的区别")]),t._v(" "),_("p",[t._v("得分点")]),t._v(" "),_("p",[t._v("用法不一样、参数显隐式、参数长度。")]),t._v(" "),_("p",[t._v("标准回答")]),t._v(" "),_("p",[t._v("get主要用来获取数据，而post是提交或修改数据。")]),t._v(" "),_("p",[t._v("get有长度限制（2048字节）而post没有。")]),t._v(" "),_("p",[t._v("get的参数是显式的，而post是隐式的。")]),t._v(" "),_("p",[t._v("加分回答")]),t._v(" "),_("ul",[_("li",[t._v("get主要用来获取数据，post主要用来提交数据。")]),t._v(" "),_("li",[t._v("get的参数有长度限制，最长2048字节，而post没有限制。")]),t._v(" "),_("li",[t._v('get的参数会附加在url之 ，以 " ？ "分割url和传输数据，多个参数用 "&"连接，而post会把参数放在http请求体中。')]),t._v(" "),_("li",[t._v("get是明文传输，可以直接通过url看到参数信息，post是放在请求体中，除非用工具才能看到。 -")]),t._v(" "),_("li",[t._v("get请求会保存在浏览器历史记录中，也可以保存在web服务器日志中。")]),t._v(" "),_("li",[t._v("get在浏览器回退时是无害的，而post会再次提交请求。")]),t._v(" "),_("li",[t._v("get请求会被浏览器主动缓存，而post不会，除非手动设置。")]),t._v(" "),_("li",[t._v("get请求只能进行url编码，而post支持多种编码方式。")]),t._v(" "),_("li",[t._v("get请求的参数数据类型只接受ASCII字符，而post没有限制。")])]),t._v(" "),_("h2",{attrs:{id:"什么是nat『映射』-什么是内网穿透-『重要』"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是nat『映射』-什么是内网穿透-『重要』"}},[t._v("#")]),t._v(" 什么是NAT『映射』？什么是内网穿透？『重要』")]),t._v(" "),_("ul",[_("li",[t._v("参考资料：https://mp.weixin.qq.com/s/OarpA7qLClWLAWHOj-LOPw")])]),t._v(" "),_("h2",{attrs:{id:"什么是单工-半双工-全双工"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是单工-半双工-全双工"}},[t._v("#")]),t._v(" 什么是单工-半双工-全双工？")]),t._v(" "),_("ul",[_("li",[t._v("3种通信方式：单工通信、半双工通信、全双工通信")])]),t._v(" "),_("h4",{attrs:{id:"_1-暴力版"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-暴力版"}},[t._v("#")]),t._v(" 1. 暴力版")]),t._v(" "),_("ul",[_("li",[t._v("单工模式：\n我打你 你不能还手  打你这个过程是发送  你抗揍这个过程是接收『比如，遥控器』")]),t._v(" "),_("li",[t._v("半双工模式：\n"),_("ul",[_("li",[t._v("我打你  你不能还手")]),t._v(" "),_("li",[t._v("过一会儿 你打我 我不能还手")])])]),t._v(" "),_("li",[t._v("全双工模式：\n"),_("ul",[_("li",[t._v("俩人互殴")]),t._v(" "),_("li",[t._v("我俩可以同时出拳（同时发送）同时抗揍（同时接收）😊😊😊😊😊😊")])])])]),t._v(" "),_("h4",{attrs:{id:"_2-蜜雪冰城版"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-蜜雪冰城版"}},[t._v("#")]),t._v(" 2.蜜雪冰城版")]),t._v(" "),_("ul",[_("li",[t._v("单工模式：\n"),_("ul",[_("li",[t._v("无时不刻，蜜雪冰城接收你的爱")])])])]),t._v(" "),_("p",[_("font",{staticStyle:{background:"yellow"}},[t._v("无时不刻『你爱我』")])],1),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/01.%E5%8D%95%E5%B7%A5.png",alt:"01.单工"}})]),t._v(" "),_("ul",[_("li",[t._v("半双工模式：\n"),_("ul",[_("li",[t._v("3点整，你爱我")]),t._v(" "),_("li",[t._v("5点整，我爱你\n"),_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/02.1.%E5%8D%8A%E5%8F%8C%E5%B7%A5.png",alt:"02.1.半双工"}})])])])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/02.2.%E5%8D%8A%E5%8F%8C%E5%B7%A5.png",alt:"02.2.半双工"}})]),t._v(" "),_("ul",[_("li",[t._v("全双工模式：")])]),t._v(" "),_("blockquote",[_("p",[t._v("无时不刻，『你爱我，我爱你』")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/HACV/picture/img/03.%E5%8F%8C%E5%B7%A5.png",alt:"03.双工"}})]),t._v(" "),_("blockquote",[_("p",[t._v("图片来源：蜜雪冰城")])]),t._v(" "),_("h2",{attrs:{id:"tcp协议真的有所谓的-粘包问题-吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp协议真的有所谓的-粘包问题-吗"}},[t._v("#")]),t._v(" TCP协议真的有所谓的“粘包问题”吗？")]),t._v(" "),_("p",[t._v("《Linux多线程服务器编程》的说明")]),t._v(" "),_("p",[t._v("《"),_("a",{attrs:{href:"https://book.douban.com/subject/1828749/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Effective TCP/IP Programming"),_("OutboundLink")],1),t._v("》这本书属于专家经验总结类，初看时觉得收获很大，工作一段时间再看也能有新的发现。比如第6 条“TCP是一个字节流协议”，看过这一条就不会去研究所谓的“TCP粘包问题”。")]),t._v(" "),_("blockquote",[_("p",[_("a",{attrs:{href:"http://www.52im.net/thread-2608-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),_("OutboundLink")],1)])]),t._v(" "),_("h2",{attrs:{id:"_7层模型中『数据』封装过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7层模型中『数据』封装过程"}},[t._v("#")]),t._v(" 7层模型中『数据』封装过程")]),t._v(" "),_("div",{staticClass:"language-txt line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-txt"}},[_("code",[t._v("（消息）数据—>段—>包—>帧—>比特流\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br")])]),_("ul",[_("li",[t._v("记忆方法：")]),t._v(" "),_("li",[t._v("TCP中是流式数据，抽刀断（"),_("strong",[t._v("段")]),t._v("）水水更流『传输层』")]),t._v(" "),_("li",[t._v("路由器在《自顶向下，计算机网络》中长得像（"),_("strong",[t._v("包")]),t._v("）子『网络层』")])]),t._v(" "),_("p",[t._v("从上往下数")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("7层模型")]),t._v(" "),_("th",[t._v("名字")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("应用层，表示层，会话层")]),t._v(" "),_("td",[t._v("PDU（协议数据单元）"),_("strong",[t._v("消息（数据）")])])]),t._v(" "),_("tr",[_("td",[t._v("传输层")]),t._v(" "),_("td",[t._v("PDU"),_("strong",[t._v("段")]),t._v("（数据段）")])]),t._v(" "),_("tr",[_("td",[t._v("网络层")]),t._v(" "),_("td",[t._v("PDU"),_("strong",[t._v("包")])])]),t._v(" "),_("tr",[_("td",[t._v("链路层")]),t._v(" "),_("td",[t._v("PDU"),_("strong",[t._v("帧")])])]),t._v(" "),_("tr",[_("td",[t._v("物理层")]),t._v(" "),_("td",[t._v("PDU"),_("strong",[t._v("比特")])])])])]),t._v(" "),_("blockquote",[_("p",[t._v("注意：")])]),t._v(" "),_("ul",[_("li",[t._v("RFC文档中将TCP的运输层分组称为『报文"),_("strong",[t._v("段")]),t._v("』，UDP的分组称为『数据"),_("strong",[t._v("报")]),t._v("』，并且将网络层分组称为『数据"),_("strong",[t._v("报")]),t._v("』")]),t._v(" "),_("li",[t._v("《计算机网络-自顶向下方法》一书中，看到这个之后，为了避免混淆，将TCP/UDP的分组统称为『报文段』")])]),t._v(" "),_("h2",{attrs:{id:"请你说一说tcp-ip数据链路层的交互过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请你说一说tcp-ip数据链路层的交互过程"}},[t._v("#")]),t._v(" 请你说一说TCP/IP"),_("code",[t._v("数据链路层")]),t._v("的交互过程")]),t._v(" "),_("p",[t._v("网络层等到"),_("strong",[t._v("数据链层")]),t._v("用"),_("code",[t._v("mac地址")]),t._v("作为通信目标，数据包到达网络等准备往数据链层发送的时候")]),t._v(" "),_("ul",[_("li",[t._v("首先会去自己的"),_("code",[t._v("arp缓存表")]),t._v("(存着ip-mac对应关系)去查找该目标ip的mac地址\n"),_("ul",[_("li",[t._v("如果查到了，就讲目标ip的mac地址封装到链路层数据包的包头")]),t._v(" "),_("li",[t._v("如果缓存中没有找到，会发起一个广播：who is ip XXX tell ip XXX,所有收到的广播的机器看这个ip是不是自己的，如果是自己的，则以单播的形式将自己的mac地址回复给请求的机器")])])])]),t._v(" "),_("h2",{attrs:{id:"_4种网络连接通信方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4种网络连接通信方式"}},[t._v("#")]),t._v(" 4种网络连接通信方式")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("类别")]),t._v(" "),_("th")])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("公网-公网")]),t._v(" "),_("td",[t._v("直接访问")])]),t._v(" "),_("tr",[_("td",[t._v("公网-私网")]),t._v(" "),_("td",[t._v("NAT映射")])]),t._v(" "),_("tr",[_("td",[t._v("私网-公网")]),t._v(" "),_("td",[t._v("NAT映射")])]),t._v(" "),_("tr",[_("td",[t._v("私网-私网")]),t._v(" "),_("td",[t._v("NAT映射、（公网的服务器）打洞机制『如果是内网，也可以直接访问』")])])])]),t._v(" "),_("ul",[_("li",[t._v("实际上，要是对私网IP进一步划分的话，还分为局域网，或者叫内网，这个的话，不需要打洞或者NAT映射机制")])]),t._v(" "),_("h2",{attrs:{id:"键入网址后-其间发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#键入网址后-其间发生了什么"}},[t._v("#")]),t._v(" 键入网址后，其间发生了什么？")]),t._v(" "),_("h4",{attrs:{id:"_1-解析url"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-解析url"}},[t._v("#")]),t._v(" 1.解析URL")]),t._v(" "),_("p",[t._v("首先浏览器做的第一步工作就是要对 URL 进行解析，从而生成发送给 Web 服务器的请求信息")]),t._v(" "),_("h4",{attrs:{id:"_2、浏览器查找域名的-ip-地址"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、浏览器查找域名的-ip-地址"}},[t._v("#")]),t._v(" "),_("strong",[t._v("2、浏览器查找域名的 IP 地址")])]),t._v(" "),_("p",[t._v("1、请求一旦发起，浏览器首先要做的事情就是解析这个域名，一般来说，浏览器会首先查看本地硬盘的 hosts 文件，看看其中有没有和这个域名对应的规则，如果有的话就直接使用 hosts 文件里面的 ip 地址。")]),t._v(" "),_("p",[t._v("2、如果在本地的 hosts 文件没有能够找到对应的 ip 地址，浏览器会发出一个 DNS请求到本地DNS服务器 。本地DNS服务器一般都是你的网络接入服务器商提供，比如中国电信，中国移动。")]),t._v(" "),_("p",[t._v("3、查询你输入的网址的DNS请求到达本地DNS服务器之后，本地DNS服务器会首先查询它的缓存记录，如果缓存中有此条记录，就可以直接返回结果，此过程是递归的方式进行查询。如果没有，本地DNS服务器还要向DNS根服务器进行查询。")]),t._v(" "),_("p",[t._v("4、根DNS服务器没有记录具体的域名和IP地址的对应关系，而是告诉本地DNS服务器，你可以到域服务器上去继续查询，并给出域服务器的地址。这种过程是迭代的过程。")]),t._v(" "),_("p",[t._v("5、本地DNS服务器继续向域服务器发出请求，在这个例子中，请求的对象是.com域服务器。.com域服务器收到请求之后，也不会直接返回域名和IP地址的对应关系，而是告诉本地DNS服务器，你的域名的解析服务器的地址。")]),t._v(" "),_("p",[t._v("6、最后，本地DNS服务器向域名的解析服务器发出请求，这时就能收到一个域名和IP地址对应关系，本地DNS服务器不仅要把IP地址返回给用户电脑，还要把这个对应关系保存在缓存中，以备下次别的用户查询时，可以直接返回结果，加快网络访问。")]),t._v(" "),_("h3",{attrs:{id:"_3、浏览器向-web-服务器发送一个-http-请求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、浏览器向-web-服务器发送一个-http-请求"}},[t._v("#")]),t._v(" "),_("strong",[t._v("3、浏览器向 web 服务器发送一个 HTTP 请求")])]),t._v(" "),_("p",[t._v("拿到域名对应的IP地址之后，浏览器会以一个随机端口（1024<端口<65535）向服务器的WEB程序（常用的有httpd,nginx等）80端口发起TCP的连接请求。这个连接请求到达服务器端后（这中间通过各种路由设备，局域网内除外），进入到网卡，然后是进入到内核的TCP/IP协议栈（用于识别该连接请求，解封包，一层一层的剥开），还有可能要经过Netfilter防火墙（属于内核的模块）的过滤，最终到达WEB程序，最终建立了TCP/IP的连接。")]),t._v(" "),_("p",[t._v("通过浏览器解析 URL 并生成 HTTP 消息后，需要委托操作系统将消息发送给 Web 服务器。")]),t._v(" "),_("ul",[_("li",[t._v("在发送之前，还有一项工作需要完成，那就是查询服务器"),_("strong",[t._v("域名")]),t._v("对应的 IP 地址，因为委托操作系统发送消息时，必须提供通信对象的 IP 地址（DNS查询）")]),t._v(" "),_("li",[t._v("通过 DNS 获取到 IP 后，就可以把 HTTP 的传输工作交给操作系统中的协议栈")]),t._v(" "),_("li",[t._v("应用程序（浏览器）通过调用 Socket 库，来委托协议栈工作。协议栈的上半部分有两块，分别是负责 收发数据的 TCP 和 UDP 协议，它们两会接受应用层的委托执行收发数据的操作")]),t._v(" "),_("li",[t._v("协议栈的下面一半是用 IP 协议控制网络包收发操作，在互联网上传数据时，数据会被切分成一块块的 网络包，而将网络包发送给对方的操作就是由 "),_("strong",[t._v("IP")]),t._v(" 负责的。")])]),t._v(" "),_("p",[t._v("TCP 模块在执行连接、收发、断开等各阶段操作时，都需要委托 IP 模块将数据封装成网络包发送给通 信对象。")]),t._v(" "),_("ul",[_("li",[t._v("生成了 IP 头部之后，接下来网络包还需要在 IP 头部的前面"),_("strong",[t._v("加上 MAC 头部")]),t._v("。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);